[{"title":"git学习记录","date":"2017-03-17T09:09:02.000Z","path":"2017/03/17/git学习记录/","text":"公司一直用的是svn（集中式版本控制系统 ），一般日常提交代码用update（从中央服务器上获取最新代码）和commit（将本地代码提交上去，提交前会用Beyond Compare软件对比修改一下）两个命令就能满足一般需求，偶尔会看一下日志，用一下版本回滚。但是最近搭博客，开始使用github，了解到git（分布式版本控制系统）好像很火？大家都在推荐，于是用了一下这个新工具。 首先，如果你想详细了解git原理和使用，狠狠点击这里！此外，还有很多关于git不同风格的博客啊，比如廖雪峰写的git教程。但是，如果你口味清奇有趣，可以选择这个，敲生动，适合食用！ 然后，列一下学习记录： 先学点简单的： 网上下载安装git，得到大礼包：Git Bash，Git GUI，Git CMD，一般操作使用Git Bash即可。 本地新建文件，使用git init将它变成待用仓库。 获取代码： 123456789101112 git clone &lt;server url&gt; //将远程仓库 上的代码拉到仓库中。``` 4. 修改代码后，这样提交它：``` dos git add &lt;filename&gt; //提交 到缓存区（index） ``` 或者使用：``` dos git add . //提交 所有改动文件到缓存区 然后再将其提交到本地仓库中： git commit -m \"修改信息\" //提交到本地仓库中的HEAD上 期间，你可以用git status查看文件变化。 下图是我修改blog中的文件时，git status返回的文件状态 git push origin master //提交到远程仓库origin 如果你没有进行第3步，这里使用： git remote add origin &lt;server url&gt; //提交到远程仓库 我们经常要将远程仓库中的代码更新本地： git pull 满足基本的需求后，我们了解一下git的分支功能： 创建、查看、切换分支： git branch newbranch //新建一个名newbranch的分支 git checkout -b newbranch //新建一个名newbranch的分支并切换到新分支 git branch //查看分支 git checkout master //回到主分支master 然后就可以在确定的分支下操作（比如上方的基础操作）。 进行分支间的操作，比如： git branch -d newbranch //删除这个分支 git merge &lt;branchname&gt; //合并分支到当前分支 来一张learngitbranch的图： 此时可能产生冲突，用git status查看情况，再去文件修改解决冲突，用git add 将冲突的文件标记为解决，再用git status确认冲突被解决，然后我们就可以用git commit提交了。 当然除了分支，git还有很多功能（标签，撤销操作，版本回退），当有其他情况可以去查找命令，以上。","categories":[{"name":"Font-end","slug":"font-end","permalink":"https://irisgithub.github.io/categories/font-end/"}],"tags":[]},{"title":"从零到gulp","date":"2017-03-16T09:13:27.000Z","path":"2017/03/16/从零到gulp/","text":"本菜刚开始写前端页面，目录是这样的，js放一起，html放一起：然后，我开始学nwjs啦，多了一个package.json文件（plugins打算用来放插件，是空的；.log文件打算用node的file模块写入日志），之后本菜默默开始写登录小窗，菜单，托盘，然后…写完demo明白自己很菜开始好好学js。 开始刷书，刷博客，刷代码，看小伙伴们的代码…于是我开始写简单页面啦，开始用jquery（获取和操作DOM元素，写ajax请求），angularjs，最初目录是这样：开始安装node，利用npm管理模块，学着小伙伴用webpack，一个入口index.js文件，功能分开写再打包成一个js文件；装fis3，更改代码可以自动刷新页面，目录变成这样：开始好好学angularjs，路由，数据绑定，指令，师傅组装的ui组件…发现自己真的菜，好多知识要学，嗯！舍弃fis3（文件多了，release变慢，-wL要等好久），用http-server，目录变成这样：然后，发现gulp,新大陆！添加一个gulpfile.js文件，用gulp-connect创建web服务器；可以watch页面，gulp-livereload自动刷新；嵌入原来的webpack.config.js还能继续打包；只用运行一个gulp，开心！ 某一天，我发现我的cpu原来是这样：开了gulp之后，变成这样： ……… 我想这一定是我的错！ ……… 最后发现用gulp来watch时一定不要加很多文件啊！只watch经常改变的。不然电脑变得超级卡，还以为自己一脚把主机踢坏了(⊙v⊙)…..就酱！ 感谢师傅！","categories":[{"name":"Font-end","slug":"font-end","permalink":"https://irisgithub.github.io/categories/font-end/"}],"tags":[]},{"title":"JS对字符串操作","date":"2017-03-02T10:44:08.000Z","path":"2017/03/02/JS对字符串操作/","text":"截取字符串：1. split： 把一个字符串分割成字符串数组。 功能 ：使用一个指定的分隔符把字符串分隔存储到数组语法 ：str.split(separator,size)参数 ： str：必选项。要截取的字符串。 separator: 必选项。要分割的条件，是字符串或表达式。 size：可选项。返回数组的长度。不定义则全部返回。 实例 ：1var str=”jpg|bmp|gif|ico|png”; arr=str.split(”|”);//arr是一个包含字符值”jpg”、”bmp”、”gif”、”ico”和”png”的数组 2. slice： 提取字符串的某个部分。 功能：返回一个新的数组，包含从start到end（不包括该元素）的arrayobject中的元素。语法：str.slice(startPos,endPos)参数： startPos: 必选项。字符串的起始位置。如果参数负数，则从字符串的结尾处算起。 也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推。 endPos: 可选项。提取字符串的结束小标。 如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。 实例：12var str='ahji3o3s4e6p8a0sdewqdasj'alert(str.slice(2,5)) //结果ji3 3. substring： 返回指定位置的子字符串。 功能：用于提取字符串中介于两个指定下标之间的字符。语法：str.substring(startPos,endPos)参数： str: 必选项。要提取的字符串。 startPos: 必选项。子字符串的起始位置，该索引从0开始计算。 一个非负的整数，规定要提取的子串的第一个字符在 stringObject 中的位置。 endPos: 可选项。子字符串的结束位置，该索引从0开始计算。 一个非负的整数，比要提取的子串的最后一个字符在 stringObject 中的位置多 1。 如果省略该参数，那么返回的子串会一直到字符串的结尾。 注： 返回 一个新的字符串，该字符串值包含 stringObject 的一个子字符串，其内容是从 start 处到 stop-1 处的所有字符，其长度为 stop 减 start。 说明 substring 方法返回的子串包括 start 处的字符，但不包括 end 处的字符。 如果 start 与 end 相等，那么该方法返回的就是一个空串（即长度为 0 的字符串）。 如果 start 比 end 大，那么该方法在提取子串之前会先交换这两个参数。 如果 start 或 end 为负数，那么它将被替换为 0。 实例：12str='ahji3o3s4e6p8a0sdewqdasj'alert(str.substring(2,6)) //结果为ji3o3 4. substr: 返回字符串中指定位置开始的指定长度的子字符串。 语法：str.substr(startPos,length)参数： str：必选项。要提取的字符串。 startPos: 必选项。返回字符串的起始位置，单位为数字。 字符串中的第一个字符的索引为 0。为负数，则默认为0 length: 可选项。返回字符串的字符个数。 说明 如果 length 为 0 或负数，将返回一个空字符串。 如果没有指定该参数，则子字符串将延续到stringObject的最后。 实例：123456var str = \"0123456789\";alert(str.substring(5)); //\"56789\"alert(str.substring(10)); //\"\"alert(str.substring(2,12)); //\"23456789\"alert(str.substring(2,-2)); //\"01\"alert(str.substring(-1,5)); //\"01234\" 合并字符串1. join 功能：使用您选择的分隔符将一个数组合并为一个字符串。 实例：123var delimitedString=myArray.join(delimiter);var myList=new Array(”jpg”,”bmp”,”gif”,”ico”,”png”);var portableList=myList.join(”|”);//结果是jpg|bmp|gif|ico|png 2. concat 功能：将两个数组连接在一起。 实例：123arr1=[1,2,3,4]arr2=[5,6,7,8]alert(arr1.concat(arr2)) //结果为[1,2,3,4,5,6,7,8] 其他：1. charAt 功能：返回指定位置的字符。字符串中第一个字符的下标是 0。如果参数 index 不在 0 与 string.length 之间，该方法将返回一个空字符串。 实例:12var str='a,g,i,d,o,v,w,d,k,p'alert(str.charAt(2)) //结果为g 2. charCodeAt 功能：charCodeAt() 方法可返回指定位置的字符的Unicode 编码。这个返回值是 0 - 65535 之间的整数。方法 charCodeAt() 与 charAt() 方法执行的操作相似，只不过前者返回的是位于指定位置的字符的编码，而后者返回的是字符子串。 实例：12var str='a,g,i,d,o,v,w,d,k,p'alert(str.charCodeAt(2)) //结果为103。即g的Unicode编码为103 3. replace: 用于在字符串中用一些字符替换另一些字符。 语法：str.replace(string,replacement)参数： str：必选项。要替换的字符串。 string:必选项。正则对象。 replacement: 必选项。要替换的字符。","categories":[{"name":"Font-end","slug":"font-end","permalink":"https://irisgithub.github.io/categories/font-end/"}],"tags":[{"name":"JavaScript","slug":"js","permalink":"https://irisgithub.github.io/tags/js/"}]},{"title":"wpf笔记","date":"2017-03-02T10:41:51.000Z","path":"2017/03/02/wpf笔记/","text":"改写窗体：1. WPF中使用默认窗口框架的外观，可以更改属性：(参考)Icon: 指定窗口的图标；Title: 指定窗口的标题；WindowStyle: 指定窗口样式，有4个取值： None，无边框；（当ResizeMode属性为NoResize时，仅剩下窗口核心。） SingleBorderWindow，单边框【默认】； ThreeDBorderWindow，3D边框； ToolBorderWindow，工具箱窗口； ResizeMode 是指定大小调节样式，有4个取值： NoResize，不可调节，同时没有最大最小按钮； CanMinimize，不可调节。但可以最小化；（此时最大化按钮不可用） CanResize，可调节【默认】； CanResizeWithGrid，可根据网格调节；（窗口右下脚显示可调节网格） WindowStartLocation 指定窗口初始位置，有3个取值： Manual，手工指定位置，表示可以通过设置其Top、Left属性值来决定窗口的初始位置； CenterScreen，屏幕中央； CenterOwner，父窗体中央； 另外： MaxWidth、MinWidth、MaxHeight、MinHeight ：表示窗口最大宽度、最小宽度、最大高度、最小高度。可以通过得到和更改这些属性值，来获取和改变窗口的大小和长宽范围。 TitlebarHeight=”45” //修改窗体titlebar高度； AllowsTransparency：获取或设置一个值，该值指示窗口的工作区是否支持透明； 2. 设置窗体无边框： 设置 WindowStyle=”None”、 AllowsTransparency=”True” 即可。 如下：12345678910&lt;Window x:Class=\"WpfApplication1.MainWindow\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" Title=\"MainWindow\" Height=\"350\" Width=\"525\" WindowStyle=\"None\" AllowsTransparency=\"True\"&gt; &lt;Grid&gt; &lt;/Grid&gt; &lt;/Window&gt; 3.窗口拖放：123private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)&#123; this.DragMove();&#125; 调用： 1this.MouseLeftButtonDown += delegate &#123; DragMove(); &#125;; 或：123456MouseDown=\"Window_MouseDown\"private void Window_MouseDown(object sender, MouseButtonEventArgs e)&#123; if (e.LeftButton == MouseButtonState.Pressed)&#123; DragMove(); &#125;&#125; 4. 自定义窗体最大化、最小化、关闭 如下：12345678910111213private void btn_min_Click(object sender, RoutedEventArgs e)&#123; this.WindowState = WindowState.Minimized; &#125;private void btn_max_Click(object sender, RoutedEventArgs e)&#123; if(this.WindowState == WindowState.Maximized)&#123; this.WindowState = WindowState.Normal; //还原 &#125;else&#123; this.WindowState = WindowState.Maximized; &#125;&#125;private void btn_close_Click(object sender, RoutedEventArgs e)&#123; this.Close();&#125; 5. 窗口阴影：(WPF4.5)1234567891011121314151617&lt;Window x:Class=\"WPFTest.MainWindow\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" Title=\"MainWindow\" Width=\"525\" Height=\"350\"&gt; &lt;WindowChrome.WindowChrome&gt; &lt;WindowChrome CaptionHeight=\"30\" CornerRadius=\"0\" GlassFrameThickness=\"1\" NonClientFrameEdges=\"None\" ResizeBorderThickness=\"5\" UseAeroCaptionButtons=\"False\" /&gt; &lt;/WindowChrome&gt; &lt;Grid&gt; &lt;/Grid&gt;&lt;/Window&gt; tooltip给某个空间增加tooltip显示详细信息: 1234567private void Tip_MouseMove(object sender, MouseEventArgs e)&#123; ListViewItem listitem = (sender as Image).TryFindParent&lt;ListViewItem&gt;(); FDObject item = (FDObject)listitem.DataContext; if (item != null)&#123; (sender as Image).ToolTip = item.path; &#125;&#125; 直接用control.Tooltip=text; 在鼠标移入事件中确定 System.Drawing.Image对象System.Drawing.Image 和 System.Windows.Media.ImageSource 之间转换例：123456789MemoryStream ms = new MemoryStream ();var bitmap = new BitmapImage();bitmap.BeginInit();userImage.Save (ms,System.Drawing.Imaging. ImageFormat.Bmp);ms.Seek(0, SeekOrigin.Begin);bitmap.StreamSource = ms;bitmap.EndInit();emplImage.Source = bitmap;return emplImage; 旋转动画：例：123456789101112 private void Button_Click(object sender, RoutedEventArgs e)&#123; RotateTransform a = new RotateTransform(); Refresh.RenderTransform = a; Refresh.RenderTransformOrigin = new Point(0.5, 0.5); DoubleAnimation myDouble = new DoubleAnimation(0, 360, new Duration(TimeSpan.FromSeconds(1))); Storyboard story = new Storyboard(); myDouble.RepeatBehavior = RepeatBehavior.Forever; story.Children.Add(myDouble); Storyboard.SetTarget(myDouble, Refresh); Storyboard.SetTargetProperty(myDouble, new PropertyPath(\"RenderTransform.Angle\")); story.Begin();&#125; 1234&lt;Grid&gt; &lt;TextBlock x:Name=\"Refresh\" VerticalAlignment=\"Center\" HorizontalAlignment=\"Center\" Text=\"&amp;#xe712;\" /&gt; &lt;Button VerticalAlignment=\"Bottom\" HorizontalAlignment=\"Center\" Width=\"100\" Height=\"50\" Click=\"Button_Click\"/&gt;&lt;/Grid&gt;","categories":[{"name":"Others","slug":"others","permalink":"https://irisgithub.github.io/categories/others/"}],"tags":[{"name":"WPF","slug":"wpf","permalink":"https://irisgithub.github.io/tags/wpf/"}]},{"title":"my first blog","date":"2017-03-02T08:40:04.000Z","path":"2017/03/02/my-first-blog/","text":"博客由hexo+github搭建，网上教程很多，比较简单。博客内容来自于印象笔记，从我的小本本上选一些搬出来，(⊙v⊙)嗯！","categories":[{"name":"Others","slug":"others","permalink":"https://irisgithub.github.io/categories/others/"}],"tags":[]}]