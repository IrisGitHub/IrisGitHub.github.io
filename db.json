{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/assets/img/3-16-1.png","path":"assets/img/3-16-1.png","modified":0,"renderable":0},{"_id":"source/assets/img/3-16-2.png","path":"assets/img/3-16-2.png","modified":0,"renderable":0},{"_id":"source/assets/img/3-16-4.png","path":"assets/img/3-16-4.png","modified":0,"renderable":0},{"_id":"source/assets/img/3-16-6.png","path":"assets/img/3-16-6.png","modified":0,"renderable":0},{"_id":"source/assets/img/3-16-5.png","path":"assets/img/3-16-5.png","modified":0,"renderable":0},{"_id":"source/assets/img/3-16-7.png","path":"assets/img/3-16-7.png","modified":0,"renderable":0},{"_id":"source/assets/img/3-17-1.png","path":"assets/img/3-17-1.png","modified":0,"renderable":0},{"_id":"source/assets/img/3-17-2.png","path":"assets/img/3-17-2.png","modified":0,"renderable":0},{"_id":"source/assets/img/3-17-3.png","path":"assets/img/3-17-3.png","modified":0,"renderable":0},{"_id":"source/assets/img/3-16-3.png","path":"assets/img/3-16-3.png","modified":0,"renderable":0},{"_id":"source/assets/img/4-1-1.png","path":"assets/img/4-1-1.png","modified":0,"renderable":0},{"_id":"source/assets/img/4-17-1.png","path":"assets/img/4-17-1.png","modified":0,"renderable":0},{"_id":"source/assets/img/4-17-2.png","path":"assets/img/4-17-2.png","modified":0,"renderable":0},{"_id":"source/assets/img/4-17-3.png","path":"assets/img/4-17-3.png","modified":0,"renderable":0},{"_id":"source/assets/img/4-17-4.png","path":"assets/img/4-17-4.png","modified":0,"renderable":0},{"_id":"source/assets/img/4-17-5.png","path":"assets/img/4-17-5.png","modified":0,"renderable":0},{"_id":"source/assets/img/5-31-1.png","path":"assets/img/5-31-1.png","modified":0,"renderable":0},{"_id":"source/assets/img/5-31-2.png","path":"assets/img/5-31-2.png","modified":0,"renderable":0},{"_id":"source/assets/img/5-31-3.png","path":"assets/img/5-31-3.png","modified":0,"renderable":0},{"_id":"source/assets/img/5-31-4.png","path":"assets/img/5-31-4.png","modified":0,"renderable":0},{"_id":"themes/yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/git学习记录.md","hash":"aa62271ce03e681056b66c373e7fe805c9247779","modified":1618670576357},{"_id":"source/_posts/work.md","hash":"c1ffe9d74b02973301b5bb5b4dfdeba9054f9a55","modified":1702315956389},{"_id":"source/_posts/wpf笔记.md","hash":"834901d48b4e52d2f1a013ae34b192f35b727246","modified":1618670576357},{"_id":"source/_posts/入坑Vue-js.md","hash":"c8f7b4599bf215c8c7bc15d4839a28de7d359c72","modified":1618670576357},{"_id":"source/_posts/从零到gulp.md","hash":"6ede7e499cb439aa6fbd6173735d6f9d00aee2f0","modified":1618670576357},{"_id":"source/_posts/去掉jQuery.md","hash":"cff1153316e414ea3e02a20546cb68b8c2101463","modified":1618670576358},{"_id":"source/assets/img/3-16-1.png","hash":"8b4244cc6c1b7c55ecfe1533dbe69d9b7f5afa7b","modified":1618670576358},{"_id":"source/_posts/一次http请求.md","hash":"a02ac7271396dc42096ed23a41c4b77595a47af8","modified":1618670576357},{"_id":"source/assets/img/3-16-2.png","hash":"bc82e202aa55743f463e496a2cc8f2b0327bde4a","modified":1618670576358},{"_id":"source/_posts/my-first-blog.md","hash":"9e4a34c91e265fd952a901ffec9049e31265a7e7","modified":1618670576357},{"_id":"source/_posts/mine.code-workspace","hash":"3f4c40b2e6943b28bb270cc78d2fdfa4f22633a8","modified":1701504241340},{"_id":"source/assets/img/3-16-4.png","hash":"c9ec6969aea3b66bc98561c87718881100bce747","modified":1618670576358},{"_id":"source/_posts/JS对字符串操作.md","hash":"680750bf338d36f7bca005feb1ed6b72a624cba8","modified":1692098573810},{"_id":"source/assets/img/3-16-5.png","hash":"1ec658685ed93d0f1c7586740f77a4173ff7b761","modified":1618670576358},{"_id":"source/assets/img/3-16-7.png","hash":"04021d5841517c6589c7989899aa10a2e238d757","modified":1618670576358},{"_id":"source/assets/img/3-17-1.png","hash":"656ee2a91ca5a1274876c9fb493e8af687ba0f3c","modified":1618670576358},{"_id":"source/assets/img/3-16-6.png","hash":"79b18e5198d33629074eff597804c57607ac0217","modified":1618670576358},{"_id":"source/assets/img/3-17-2.png","hash":"52160d91985674650e7fae8501ea8953323e6665","modified":1618670576358},{"_id":"source/assets/img/4-1-1.png","hash":"8ed40e6f86ecdd782794523a85e42780829bd161","modified":1618670576359},{"_id":"source/assets/img/3-16-3.png","hash":"77bcb5571e6d65213d1425a724195f485eec3280","modified":1618670576358},{"_id":"source/assets/img/3-17-3.png","hash":"1c7365afac2215622c7c57add345abf0c57a7311","modified":1618670576359},{"_id":"source/assets/img/4-17-4.png","hash":"d575f4394a1d61fbeb2f7dd31ed7d8039deb8e37","modified":1618670576360},{"_id":"source/assets/img/4-17-3.png","hash":"e07bde3382eb2948ef2e8f9ab565b9282ba3e3da","modified":1618670576360},{"_id":"source/assets/img/4-17-2.png","hash":"9cb532d43cdd3fea5c2d119f04b1ff1ded7312b4","modified":1618670576359},{"_id":"source/assets/img/4-17-5.png","hash":"f03d7b42287ef408d41aa10b6fd3c2973b3c4bfb","modified":1618670576360},{"_id":"source/assets/img/5-31-2.png","hash":"53267d341cb39355d65abd55a5ea0378bfab2617","modified":1618670576360},{"_id":"source/assets/img/5-31-3.png","hash":"5515a388c536eb915ebdbdce6363cb30e4a6371a","modified":1618670576360},{"_id":"source/assets/img/5-31-4.png","hash":"9316675cc79337527e80384bfa07d50fbc6d1528","modified":1618670576361},{"_id":"source/assets/img/5-31-1.png","hash":"6280b307d708e69d9237963a3a283c8df447be83","modified":1618670576360},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1662885140628},{"_id":"source/assets/img/4-17-1.png","hash":"97034f05263f4cf2755b9a2f24cd483b4255c4f9","modified":1618670576359},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1662885140623},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1662885140624},{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1662885140623},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1662885140624},{"_id":"themes/yilia/README.md","hash":"1bf755806af9d8874bd22e1abbdaaa24328ef4dc","modified":1662885140624},{"_id":"themes/yilia/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1662885140629},{"_id":"themes/yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1662885140624},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1662885140624},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1662885140628},{"_id":"themes/yilia/_config.yml","hash":"6de761b1046fde4d07f6ca899abb326712c2b1e1","modified":1702314663081},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1662885140638},{"_id":"themes/yilia/assets/.DS_Store","hash":"292059faf8451f79be242d3f324aaf02d076c591","modified":1662890249092},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1662885140628},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1662885140628},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1662885140628},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1662885140628},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1662885140628},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1662885140628},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1662885140624},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1662885140625},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1662885140625},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1662885140624},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1662885140625},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1662885140625},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1662885140624},{"_id":"themes/yilia/source/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1662885140637},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1662885140629},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1662885140635},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"b86b248720ad415ec1b5fee53fb583776c776f83","modified":1662885140625},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1662885140625},{"_id":"themes/yilia/source/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1662885140638},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"630c6ec866d056657d3d91e34b4c64eb993c0654","modified":1662885140625},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1662885140625},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1662885140625},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1662885140626},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1662885140625},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1662885140626},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1662885140626},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1662885140626},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1662885140626},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1662885140626},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1662888795244},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1662885140628},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1662885140628},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"183d7ca4ba8e7c80694ffdc8cf39957092238346","modified":1662885140626},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1662885140635},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1662885140636},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1662885140636},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1662885140636},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1662885140636},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1662885140636},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1662885140637},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1662885140636},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1662885140629},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1662885140637},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1662885140629},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1662885140629},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1662885140629},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1662885140629},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1662885140629},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1662885140630},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"cafe3834017a3bf47420f37543725025225a2c89","modified":1662885140630},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"97b8fba41c914145710b90091f400b845879577f","modified":1662885140630},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1662885140632},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1662885140632},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1662885140632},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1662885140629},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1662885140632},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1662885140632},{"_id":"themes/yilia/source-src/css/main.scss","hash":"2f86a014af93583caba78a563d9549826bf28294","modified":1662885140633},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1662885140633},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"ace041d72f95b419f6a5e443191703c2b62007f4","modified":1662885140633},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1662885140633},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1662885140633},{"_id":"themes/yilia/source-src/css/social.scss","hash":"724162ccf3977e70a45d189abfaa20b6e2fba87b","modified":1662885140633},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1662885140633},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"1b1aa0908e58cf942b28e3881d07c5573c4129e1","modified":1662885140634},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1662885140633},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1662885140633},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1662885140634},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1662885140633},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1662885140634},{"_id":"themes/yilia/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1662885140634},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1662885140634},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1662885140634},{"_id":"themes/yilia/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1662885140635},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1662885140635},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1662885140635},{"_id":"themes/yilia/source-src/js/slider.js","hash":"e846bcc5aac9c68b93f7b8de353df54d8d29f666","modified":1662885140635},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"2577deb6a9fe4f5436360b2ce9afcc7f9a7f0116","modified":1662885140635},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1662885140635},{"_id":"themes/yilia/source-src/js/fix.js","hash":"d6782d53c992e712af39c84e804eccaf38830b94","modified":1662885140634},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1662885140635},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"5f99b55980da64a723a8e14d5a7daba0d6504647","modified":1662885140626},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1662885140626},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"e68bbac9ffb1ad27b56837c9abad6ed6bb7daa0c","modified":1662885140627},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1662885140626},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1662885140627},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"0809a4829aabeb4e911a3ed04ec28db4df7dfe3f","modified":1662885140626},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1662885140627},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1662885140630},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1662885140627},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1662885140630},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1662885140630},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1662885140627},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"5dccfbe165b23a101f1333cc65ed8efbd197453c","modified":1662885140627},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1662885140630},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1662885140632},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1662885140631},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1662885140631},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1662885140631},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1662885140632},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1662885140631},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1662885140630},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1662885140632},{"_id":"themes/yilia/source/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1662885140637},{"_id":"themes/yilia/source/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1662885140638},{"_id":"themes/yilia/assets/blogImg/avatar.jpg","hash":"1ec274e0e5ea39d45a02e6a5ae46eb0df3772f7b","modified":1662887153678},{"_id":"themes/yilia/assets/img/favicon.ico","hash":"1ec274e0e5ea39d45a02e6a5ae46eb0df3772f7b","modified":1662887175196},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"4cb685f07e89dd5175c2a576e73a1a957aec5637","modified":1662885140628}],"Category":[{"name":"Font-end","_id":"clq18rrw40002vf4ke9kd3b8s"},{"name":"others","_id":"clq18rrw8000cvf4k0bmn3rkc"},{"name":"Others","_id":"clq18rrw9000ivf4kc60128f2"}],"Data":[],"Page":[],"Post":[{"layout":"title","title":"git学习记录","date":"2017-03-17T09:09:02.000Z","_content":"\n公司一直用的是**svn**（集中式版本控制系统 ），一般日常提交代码用**update**（从中央服务器上获取最新代码）和**commit**（将本地代码提交上去，提交前会用*Beyond Compare*软件对比修改一下）两个命令就能满足一般需求，偶尔会看一下日志，用一下版本回滚。但是最近搭博客，开始使用github，了解到**git**（分布式版本控制系统）好像很火？大家都在推荐，于是用了一下这个新工具。\n\n首先，如果你想详细了解git原理和使用，狠狠点击[这里](https://git-scm.com/book/en/v2)！此外，还有很多关于git不同风格的博客啊，比如[廖雪峰](http://www.liaoxuefeng.com)写的git教程。\n但是，如果你口味清奇有趣，可以选择[这个](http://learngitbranching.js.org/)，敲生动，适合食用！\n\n然后，列一下学习记录：\n\n先学点**简单**的：\n\n1.网上下载安装git，得到大礼包：**Git Bash**，**Git GUI**，**Git CMD**，一般操作使用**Git Bash**即可。\n2.本地新建文件，使用*git init*将它变成待用仓库。\n\n<!--more-->\n\n3.获取代码：\n\n``` dos\n\tgit clone <server url> \t\t\t//将远程仓库 上的代码拉到仓库中。\n``` \n\n4.修改代码后，这样提交它：\n\n``` dos\n\tgit add <filename>               //提交 到缓存区（index） \n``` \n\n或者使用：\n\n``` dos\n\tgit add  .                  \t//提交 所有改动文件到缓存区\n``` \n\n再将其提交到本地仓库中：\n\n``` dos\n    git commit -m \"修改信息\"     \t//提交到本地仓库中的HEAD上\n``` \n\n期间，你可以用*git status*查看文件变化。\n\n下图是我修改blog中的文件时，*git status*返回的文件状态\n<img src=\"../../../../assets/img/3-17-1.png\"   align=center />\n\n``` dos\n\tgit push origin master          //提交到远程仓库origin\n``` \n \n<img src=\"../../../../assets/img/3-17-2.png\"   align=center />\n\n如果你没有进行第3步，这里使用：\n\n``` dos\n\tgit remote add origin <server url>\t\t\t//提交到远程仓库\n``` \n\n5.我们经常要将远程仓库中的代码更新本地：\n\n``` dos\n\tgit pull\n``` \n\n满足基本的需求后，我们了解一下git的分支功能：\n\n1.创建、查看、切换分支：\n\n``` dos\n\tgit branch newbranch               //新建一个名newbranch的分支\n    git checkout -b newbranch     \t\t//新建一个名newbranch的分支并切换到新分支\n    git branch                         //查看分支\n    git checkout master                 //回到主分支master\n``` \n   \n然后就可以在确定的分支下操作（比如上方的基础操作）。\n\n2.进行分支间的操作，比如：\n\n``` dos\n\t git branch -d newbranch        //删除这个分支  \n     git merge <branchname>         //合并分支到当前分支\n``` \n\n来一张learngitbranch的图：\n<img src=\"../../../../assets/img/3-17-3.png\"   align=center />\n\n此时可能产生冲突，用*git status*查看情况，再去文件修改解决冲突，用*git add <filename>*将冲突的文件标记为解决，再用*git status*确认冲突被解决，然后我们就可以用*git commit*提交了。\n\n当然除了分支，git还有很多功能（标签，撤销操作，版本回退），当有其他情况可以去查找命令，以上。 \n\n","source":"_posts/git学习记录.md","raw":"---\nlayout: title\ntitle: git学习记录\ndate: 2017-03-17 17:09:02\ncategories: Font-end\n---\n\n公司一直用的是**svn**（集中式版本控制系统 ），一般日常提交代码用**update**（从中央服务器上获取最新代码）和**commit**（将本地代码提交上去，提交前会用*Beyond Compare*软件对比修改一下）两个命令就能满足一般需求，偶尔会看一下日志，用一下版本回滚。但是最近搭博客，开始使用github，了解到**git**（分布式版本控制系统）好像很火？大家都在推荐，于是用了一下这个新工具。\n\n首先，如果你想详细了解git原理和使用，狠狠点击[这里](https://git-scm.com/book/en/v2)！此外，还有很多关于git不同风格的博客啊，比如[廖雪峰](http://www.liaoxuefeng.com)写的git教程。\n但是，如果你口味清奇有趣，可以选择[这个](http://learngitbranching.js.org/)，敲生动，适合食用！\n\n然后，列一下学习记录：\n\n先学点**简单**的：\n\n1.网上下载安装git，得到大礼包：**Git Bash**，**Git GUI**，**Git CMD**，一般操作使用**Git Bash**即可。\n2.本地新建文件，使用*git init*将它变成待用仓库。\n\n<!--more-->\n\n3.获取代码：\n\n``` dos\n\tgit clone <server url> \t\t\t//将远程仓库 上的代码拉到仓库中。\n``` \n\n4.修改代码后，这样提交它：\n\n``` dos\n\tgit add <filename>               //提交 到缓存区（index） \n``` \n\n或者使用：\n\n``` dos\n\tgit add  .                  \t//提交 所有改动文件到缓存区\n``` \n\n再将其提交到本地仓库中：\n\n``` dos\n    git commit -m \"修改信息\"     \t//提交到本地仓库中的HEAD上\n``` \n\n期间，你可以用*git status*查看文件变化。\n\n下图是我修改blog中的文件时，*git status*返回的文件状态\n<img src=\"../../../../assets/img/3-17-1.png\"   align=center />\n\n``` dos\n\tgit push origin master          //提交到远程仓库origin\n``` \n \n<img src=\"../../../../assets/img/3-17-2.png\"   align=center />\n\n如果你没有进行第3步，这里使用：\n\n``` dos\n\tgit remote add origin <server url>\t\t\t//提交到远程仓库\n``` \n\n5.我们经常要将远程仓库中的代码更新本地：\n\n``` dos\n\tgit pull\n``` \n\n满足基本的需求后，我们了解一下git的分支功能：\n\n1.创建、查看、切换分支：\n\n``` dos\n\tgit branch newbranch               //新建一个名newbranch的分支\n    git checkout -b newbranch     \t\t//新建一个名newbranch的分支并切换到新分支\n    git branch                         //查看分支\n    git checkout master                 //回到主分支master\n``` \n   \n然后就可以在确定的分支下操作（比如上方的基础操作）。\n\n2.进行分支间的操作，比如：\n\n``` dos\n\t git branch -d newbranch        //删除这个分支  \n     git merge <branchname>         //合并分支到当前分支\n``` \n\n来一张learngitbranch的图：\n<img src=\"../../../../assets/img/3-17-3.png\"   align=center />\n\n此时可能产生冲突，用*git status*查看情况，再去文件修改解决冲突，用*git add <filename>*将冲突的文件标记为解决，再用*git status*确认冲突被解决，然后我们就可以用*git commit*提交了。\n\n当然除了分支，git还有很多功能（标签，撤销操作，版本回退），当有其他情况可以去查找命令，以上。 \n\n","slug":"git学习记录","published":1,"updated":"2021-04-17T14:42:56.357Z","comments":1,"photos":[],"link":"","_id":"clq18rrw00000vf4k07uuf2ih","content":"<p>公司一直用的是<strong>svn</strong>（集中式版本控制系统 ），一般日常提交代码用<strong>update</strong>（从中央服务器上获取最新代码）和<strong>commit</strong>（将本地代码提交上去，提交前会用<em>Beyond Compare</em>软件对比修改一下）两个命令就能满足一般需求，偶尔会看一下日志，用一下版本回滚。但是最近搭博客，开始使用github，了解到<strong>git</strong>（分布式版本控制系统）好像很火？大家都在推荐，于是用了一下这个新工具。</p>\n<p>首先，如果你想详细了解git原理和使用，狠狠点击<a href=\"https://git-scm.com/book/en/v2\">这里</a>！此外，还有很多关于git不同风格的博客啊，比如<a href=\"http://www.liaoxuefeng.com/\">廖雪峰</a>写的git教程。<br>但是，如果你口味清奇有趣，可以选择<a href=\"http://learngitbranching.js.org/\">这个</a>，敲生动，适合食用！</p>\n<p>然后，列一下学习记录：</p>\n<p>先学点<strong>简单</strong>的：</p>\n<p>1.网上下载安装git，得到大礼包：<strong>Git Bash</strong>，<strong>Git GUI</strong>，<strong>Git CMD</strong>，一般操作使用<strong>Git Bash</strong>即可。<br>2.本地新建文件，使用<em>git init</em>将它变成待用仓库。</p>\n<span id=\"more\"></span>\n\n<p>3.获取代码：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone &lt;server url&gt; \t\t\t//将远程仓库 上的代码拉到仓库中。</span><br></pre></td></tr></table></figure>\n\n<p>4.修改代码后，这样提交它：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add &lt;filename&gt;               //提交 到缓存区（index） </span><br></pre></td></tr></table></figure>\n\n<p>或者使用：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add  .                  \t//提交 所有改动文件到缓存区</span><br></pre></td></tr></table></figure>\n\n<p>再将其提交到本地仓库中：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m &quot;修改信息&quot;     \t//提交到本地仓库中的HEAD上</span><br></pre></td></tr></table></figure>\n\n<p>期间，你可以用<em>git status</em>查看文件变化。</p>\n<p>下图是我修改blog中的文件时，<em>git status</em>返回的文件状态<br><img src=\"../../../../assets/img/3-17-1.png\"   align=center /></p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin master          //提交到远程仓库origin</span><br></pre></td></tr></table></figure>\n<img src=\"../../../../assets/img/3-17-2.png\"   align=center />\n\n<p>如果你没有进行第3步，这里使用：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin &lt;server url&gt;\t\t\t//提交到远程仓库</span><br></pre></td></tr></table></figure>\n\n<p>5.我们经常要将远程仓库中的代码更新本地：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n<p>满足基本的需求后，我们了解一下git的分支功能：</p>\n<p>1.创建、查看、切换分支：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch newbranch               //新建一个名newbranch的分支</span><br><span class=\"line\">   git checkout -b newbranch     \t\t//新建一个名newbranch的分支并切换到新分支</span><br><span class=\"line\">   git branch                         //查看分支</span><br><span class=\"line\">   git checkout master                 //回到主分支master</span><br></pre></td></tr></table></figure>\n<p>然后就可以在确定的分支下操作（比如上方的基础操作）。</p>\n<p>2.进行分支间的操作，比如：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d newbranch        //删除这个分支  </span><br><span class=\"line\">   git merge &lt;branchname&gt;         //合并分支到当前分支</span><br></pre></td></tr></table></figure>\n\n<p>来一张learngitbranch的图：<br><img src=\"../../../../assets/img/3-17-3.png\"   align=center /></p>\n<p>此时可能产生冲突，用<em>git status</em>查看情况，再去文件修改解决冲突，用<em>git add <filename><em>将冲突的文件标记为解决，再用</em>git status</em>确认冲突被解决，然后我们就可以用<em>git commit</em>提交了。</p>\n<p>当然除了分支，git还有很多功能（标签，撤销操作，版本回退），当有其他情况可以去查找命令，以上。 </p>\n","site":{"data":{}},"excerpt":"<p>公司一直用的是<strong>svn</strong>（集中式版本控制系统 ），一般日常提交代码用<strong>update</strong>（从中央服务器上获取最新代码）和<strong>commit</strong>（将本地代码提交上去，提交前会用<em>Beyond Compare</em>软件对比修改一下）两个命令就能满足一般需求，偶尔会看一下日志，用一下版本回滚。但是最近搭博客，开始使用github，了解到<strong>git</strong>（分布式版本控制系统）好像很火？大家都在推荐，于是用了一下这个新工具。</p>\n<p>首先，如果你想详细了解git原理和使用，狠狠点击<a href=\"https://git-scm.com/book/en/v2\">这里</a>！此外，还有很多关于git不同风格的博客啊，比如<a href=\"http://www.liaoxuefeng.com/\">廖雪峰</a>写的git教程。<br>但是，如果你口味清奇有趣，可以选择<a href=\"http://learngitbranching.js.org/\">这个</a>，敲生动，适合食用！</p>\n<p>然后，列一下学习记录：</p>\n<p>先学点<strong>简单</strong>的：</p>\n<p>1.网上下载安装git，得到大礼包：<strong>Git Bash</strong>，<strong>Git GUI</strong>，<strong>Git CMD</strong>，一般操作使用<strong>Git Bash</strong>即可。<br>2.本地新建文件，使用<em>git init</em>将它变成待用仓库。</p>","more":"<p>3.获取代码：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone &lt;server url&gt; \t\t\t//将远程仓库 上的代码拉到仓库中。</span><br></pre></td></tr></table></figure>\n\n<p>4.修改代码后，这样提交它：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add &lt;filename&gt;               //提交 到缓存区（index） </span><br></pre></td></tr></table></figure>\n\n<p>或者使用：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add  .                  \t//提交 所有改动文件到缓存区</span><br></pre></td></tr></table></figure>\n\n<p>再将其提交到本地仓库中：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m &quot;修改信息&quot;     \t//提交到本地仓库中的HEAD上</span><br></pre></td></tr></table></figure>\n\n<p>期间，你可以用<em>git status</em>查看文件变化。</p>\n<p>下图是我修改blog中的文件时，<em>git status</em>返回的文件状态<br><img src=\"../../../../assets/img/3-17-1.png\"   align=center /></p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin master          //提交到远程仓库origin</span><br></pre></td></tr></table></figure>\n<img src=\"../../../../assets/img/3-17-2.png\"   align=center />\n\n<p>如果你没有进行第3步，这里使用：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin &lt;server url&gt;\t\t\t//提交到远程仓库</span><br></pre></td></tr></table></figure>\n\n<p>5.我们经常要将远程仓库中的代码更新本地：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n<p>满足基本的需求后，我们了解一下git的分支功能：</p>\n<p>1.创建、查看、切换分支：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch newbranch               //新建一个名newbranch的分支</span><br><span class=\"line\">   git checkout -b newbranch     \t\t//新建一个名newbranch的分支并切换到新分支</span><br><span class=\"line\">   git branch                         //查看分支</span><br><span class=\"line\">   git checkout master                 //回到主分支master</span><br></pre></td></tr></table></figure>\n<p>然后就可以在确定的分支下操作（比如上方的基础操作）。</p>\n<p>2.进行分支间的操作，比如：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d newbranch        //删除这个分支  </span><br><span class=\"line\">   git merge &lt;branchname&gt;         //合并分支到当前分支</span><br></pre></td></tr></table></figure>\n\n<p>来一张learngitbranch的图：<br><img src=\"../../../../assets/img/3-17-3.png\"   align=center /></p>\n<p>此时可能产生冲突，用<em>git status</em>查看情况，再去文件修改解决冲突，用<em>git add <filename><em>将冲突的文件标记为解决，再用</em>git status</em>确认冲突被解决，然后我们就可以用<em>git commit</em>提交了。</p>\n<p>当然除了分支，git还有很多功能（标签，撤销操作，版本回退），当有其他情况可以去查找命令，以上。 </p>"},{"title":"JS对字符串操作","date":"2017-03-02T10:44:08.000Z","_content":"\n#### 截取字符串：\n\n**1.split： 把一个字符串分割成字符串数组。**\n\n*功能* ：使用一个指定的分隔符把字符串分隔存储到数组\n*语法* ：<font color=red>str.split(separator,size)</font>\n*参数* ：\n- str：必选项。要截取的字符串。\n- separator: 必选项。要分割的条件，是字符串或表达式。\n- size：可选项。返回数组的长度。不定义则全部返回。\n\n*实例* ：\n``` javascript\nvar str=”jpg|bmp|gif|ico|png”; arr=str.split(”|”);//arr是一个包含字符值”jpg”、”bmp”、”gif”、”ico”和”png”的数组\n```\n<!--more-->\n\n**2.slice：   提取字符串的某个部分。**\n\n*功能*：返回一个新的数组，包含从start到end（不包括该元素）的arrayobject中的元素。\n*语法*：<font color=red>str.slice(startPos,endPos)</font>\n*参数*：\n- startPos: 必选项。字符串的起始位置。如果参数负数，则从字符串的结尾处算起。 也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推。\n- endPos: 可选项。提取字符串的结束小标。 如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。\n\n*实例*：\n``` javascript\nvar str='ahji3o3s4e6p8a0sdewqdasj'\nalert(str.slice(2,5))   //结果ji3\n```\n\n\n**3.substring：  返回指定位置的子字符串。**\n\n*功能*：用于提取字符串中介于两个指定下标之间的字符。\n*语法*：<font color=red>str.substring(startPos,endPos)</font>\n*参数*：\n- str: 必选项。要提取的字符串。\n- startPos: 必选项。子字符串的起始位置，该索引从0开始计算。 一个非负的整数，规定要提取的子串的第一个字符在 stringObject 中的位置。\n- endPos: 可选项。子字符串的结束位置，该索引从0开始计算。 一个非负的整数，比要提取的子串的最后一个字符在 stringObject 中的位置多 1。 如果省略该参数，那么返回的子串会一直到字符串的结尾。\n\n> 注： 返回 一个新的字符串，该字符串值包含 stringObject 的一个子字符串，其内容是从 start 处到 stop-1 处的所有字符，其长度为 stop 减 start。 说明 substring 方法返回的子串包括 start 处的字符，但不包括 end 处的字符。 如果 start 与 end 相等，那么该方法返回的就是一个空串（即长度为 0 的字符串）。 如果 start 比 end 大，那么该方法在提取子串之前会先交换这两个参数。 如果 start 或 end 为负数，那么它将被替换为 0。\n\n*实例*：\n``` javascript\nstr='ahji3o3s4e6p8a0sdewqdasj'\nalert(str.substring(2,6))   //结果为ji3o3\n```\n\n\n**4.substr:    返回字符串中指定位置开始的指定长度的子字符串。**\n\n*语法*：<font color=red>str.substr(startPos,length)</font>\n*参数*：\n- str：必选项。要提取的字符串。\n- startPos: 必选项。返回字符串的起始位置，单位为数字。 字符串中的第一个字符的索引为 0。为负数，则默认为0\n- length: 可选项。返回字符串的字符个数。 说明 如果 length 为 0 或负数，将返回一个空字符串。 如果没有指定该参数，则子字符串将延续到stringObject的最后。\n\n*实例*：\n``` javascript\nvar str = \"0123456789\";\nalert(str.substring(5));\t//\"56789\"\nalert(str.substring(10));\t//\"\"\nalert(str.substring(2,12));\t//\"23456789\"\nalert(str.substring(2,-2));\t//\"01\"\nalert(str.substring(-1,5));\t//\"01234\"\n```\n\n\n\n#### 合并字符串\n\n**1.join**\n\n*功能*：使用您选择的分隔符将一个数组合并为一个字符串。\n\n*实例*：\n``` javascript\nvar delimitedString=myArray.join(delimiter);\nvar myList=new Array(”jpg”,”bmp”,”gif”,”ico”,”png”);\nvar portableList=myList.join(”|”);//结果是jpg|bmp|gif|ico|png\n```\n \n**2.concat**\n\n*功能*：将两个数组连接在一起。\n\n*实例*：\n``` javascript\narr1=[1,2,3,4]\narr2=[5,6,7,8]\nalert(arr1.concat(arr2))  //结果为[1,2,3,4,5,6,7,8]\n```\n\n#### 其他：\n\n**1.charAt**\n\n *功能*：返回指定位置的<font color=red>字符</font>。字符串中第一个字符的下标是 0。如果参数 index 不在 0 与 string.length 之间，该方法将返回一个空字符串。\n\n*实例*:\n``` javascript\nvar str='a,g,i,d,o,v,w,d,k,p'\nalert(str.charAt(2))  //结果为g\n```\n\n**2.charCodeAt**\n\n*功能*：charCodeAt() 方法可返回指定位置的字符的<font color=red>Unicode 编码</font>。这个返回值是 0 - 65535 之间的整数。\n方法 charCodeAt() 与 charAt() 方法执行的操作相似，只不过前者返回的是位于指定位置的字符的编码，而后者返回的是字符子串。\n\n*实例*：\n``` javascript\nvar str='a,g,i,d,o,v,w,d,k,p'\nalert(str.charCodeAt(2))  //结果为103。即g的Unicode编码为103\n```\n\n**3.replace:   用于在字符串中用一些字符替换另一些字符。**\n\n*语法*：<font color=red>str.replace(string,replacement)</font>\n*参数*：\n- str：必选项。要替换的字符串。\n- string:必选项。正则对象。\n- replacement: 必选项。要替换的字符。\n\n----记录这些是因为某些时候会记错某个方法返回结果，基本用法还是要记一记的，羞愧= =---- ","source":"_posts/JS对字符串操作.md","raw":"---\ntitle: JS对字符串操作\ndate: 2017-03-02 18:44:08\ncategories: Font-end\ntags: JavaScript\n---\n\n#### 截取字符串：\n\n**1.split： 把一个字符串分割成字符串数组。**\n\n*功能* ：使用一个指定的分隔符把字符串分隔存储到数组\n*语法* ：<font color=red>str.split(separator,size)</font>\n*参数* ：\n- str：必选项。要截取的字符串。\n- separator: 必选项。要分割的条件，是字符串或表达式。\n- size：可选项。返回数组的长度。不定义则全部返回。\n\n*实例* ：\n``` javascript\nvar str=”jpg|bmp|gif|ico|png”; arr=str.split(”|”);//arr是一个包含字符值”jpg”、”bmp”、”gif”、”ico”和”png”的数组\n```\n<!--more-->\n\n**2.slice：   提取字符串的某个部分。**\n\n*功能*：返回一个新的数组，包含从start到end（不包括该元素）的arrayobject中的元素。\n*语法*：<font color=red>str.slice(startPos,endPos)</font>\n*参数*：\n- startPos: 必选项。字符串的起始位置。如果参数负数，则从字符串的结尾处算起。 也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推。\n- endPos: 可选项。提取字符串的结束小标。 如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。\n\n*实例*：\n``` javascript\nvar str='ahji3o3s4e6p8a0sdewqdasj'\nalert(str.slice(2,5))   //结果ji3\n```\n\n\n**3.substring：  返回指定位置的子字符串。**\n\n*功能*：用于提取字符串中介于两个指定下标之间的字符。\n*语法*：<font color=red>str.substring(startPos,endPos)</font>\n*参数*：\n- str: 必选项。要提取的字符串。\n- startPos: 必选项。子字符串的起始位置，该索引从0开始计算。 一个非负的整数，规定要提取的子串的第一个字符在 stringObject 中的位置。\n- endPos: 可选项。子字符串的结束位置，该索引从0开始计算。 一个非负的整数，比要提取的子串的最后一个字符在 stringObject 中的位置多 1。 如果省略该参数，那么返回的子串会一直到字符串的结尾。\n\n> 注： 返回 一个新的字符串，该字符串值包含 stringObject 的一个子字符串，其内容是从 start 处到 stop-1 处的所有字符，其长度为 stop 减 start。 说明 substring 方法返回的子串包括 start 处的字符，但不包括 end 处的字符。 如果 start 与 end 相等，那么该方法返回的就是一个空串（即长度为 0 的字符串）。 如果 start 比 end 大，那么该方法在提取子串之前会先交换这两个参数。 如果 start 或 end 为负数，那么它将被替换为 0。\n\n*实例*：\n``` javascript\nstr='ahji3o3s4e6p8a0sdewqdasj'\nalert(str.substring(2,6))   //结果为ji3o3\n```\n\n\n**4.substr:    返回字符串中指定位置开始的指定长度的子字符串。**\n\n*语法*：<font color=red>str.substr(startPos,length)</font>\n*参数*：\n- str：必选项。要提取的字符串。\n- startPos: 必选项。返回字符串的起始位置，单位为数字。 字符串中的第一个字符的索引为 0。为负数，则默认为0\n- length: 可选项。返回字符串的字符个数。 说明 如果 length 为 0 或负数，将返回一个空字符串。 如果没有指定该参数，则子字符串将延续到stringObject的最后。\n\n*实例*：\n``` javascript\nvar str = \"0123456789\";\nalert(str.substring(5));\t//\"56789\"\nalert(str.substring(10));\t//\"\"\nalert(str.substring(2,12));\t//\"23456789\"\nalert(str.substring(2,-2));\t//\"01\"\nalert(str.substring(-1,5));\t//\"01234\"\n```\n\n\n\n#### 合并字符串\n\n**1.join**\n\n*功能*：使用您选择的分隔符将一个数组合并为一个字符串。\n\n*实例*：\n``` javascript\nvar delimitedString=myArray.join(delimiter);\nvar myList=new Array(”jpg”,”bmp”,”gif”,”ico”,”png”);\nvar portableList=myList.join(”|”);//结果是jpg|bmp|gif|ico|png\n```\n \n**2.concat**\n\n*功能*：将两个数组连接在一起。\n\n*实例*：\n``` javascript\narr1=[1,2,3,4]\narr2=[5,6,7,8]\nalert(arr1.concat(arr2))  //结果为[1,2,3,4,5,6,7,8]\n```\n\n#### 其他：\n\n**1.charAt**\n\n *功能*：返回指定位置的<font color=red>字符</font>。字符串中第一个字符的下标是 0。如果参数 index 不在 0 与 string.length 之间，该方法将返回一个空字符串。\n\n*实例*:\n``` javascript\nvar str='a,g,i,d,o,v,w,d,k,p'\nalert(str.charAt(2))  //结果为g\n```\n\n**2.charCodeAt**\n\n*功能*：charCodeAt() 方法可返回指定位置的字符的<font color=red>Unicode 编码</font>。这个返回值是 0 - 65535 之间的整数。\n方法 charCodeAt() 与 charAt() 方法执行的操作相似，只不过前者返回的是位于指定位置的字符的编码，而后者返回的是字符子串。\n\n*实例*：\n``` javascript\nvar str='a,g,i,d,o,v,w,d,k,p'\nalert(str.charCodeAt(2))  //结果为103。即g的Unicode编码为103\n```\n\n**3.replace:   用于在字符串中用一些字符替换另一些字符。**\n\n*语法*：<font color=red>str.replace(string,replacement)</font>\n*参数*：\n- str：必选项。要替换的字符串。\n- string:必选项。正则对象。\n- replacement: 必选项。要替换的字符。\n\n----记录这些是因为某些时候会记错某个方法返回结果，基本用法还是要记一记的，羞愧= =---- ","slug":"JS对字符串操作","published":1,"updated":"2023-08-15T11:22:53.810Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq18rrw30001vf4k64ub48iw","content":"<h4 id=\"截取字符串：\"><a href=\"#截取字符串：\" class=\"headerlink\" title=\"截取字符串：\"></a>截取字符串：</h4><p><strong>1.split： 把一个字符串分割成字符串数组。</strong></p>\n<p><em>功能</em> ：使用一个指定的分隔符把字符串分隔存储到数组<br><em>语法</em> ：<font color=red>str.split(separator,size)</font><br><em>参数</em> ：</p>\n<ul>\n<li>str：必选项。要截取的字符串。</li>\n<li>separator: 必选项。要分割的条件，是字符串或表达式。</li>\n<li>size：可选项。返回数组的长度。不定义则全部返回。</li>\n</ul>\n<p><em>实例</em> ：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=”jpg|bmp|gif|ico|png”; arr=str.<span class=\"title function_\">split</span>(”|”);<span class=\"comment\">//arr是一个包含字符值”jpg”、”bmp”、”gif”、”ico”和”png”的数组</span></span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n\n<p><strong>2.slice：   提取字符串的某个部分。</strong></p>\n<p><em>功能</em>：返回一个新的数组，包含从start到end（不包括该元素）的arrayobject中的元素。<br><em>语法</em>：<font color=red>str.slice(startPos,endPos)</font><br><em>参数</em>：</p>\n<ul>\n<li>startPos: 必选项。字符串的起始位置。如果参数负数，则从字符串的结尾处算起。 也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推。</li>\n<li>endPos: 可选项。提取字符串的结束小标。 如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。</li>\n</ul>\n<p><em>实例</em>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">&#x27;ahji3o3s4e6p8a0sdewqdasj&#x27;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>,<span class=\"number\">5</span>))   <span class=\"comment\">//结果ji3</span></span><br></pre></td></tr></table></figure>\n\n\n<p><strong>3.substring：  返回指定位置的子字符串。</strong></p>\n<p><em>功能</em>：用于提取字符串中介于两个指定下标之间的字符。<br><em>语法</em>：<font color=red>str.substring(startPos,endPos)</font><br><em>参数</em>：</p>\n<ul>\n<li>str: 必选项。要提取的字符串。</li>\n<li>startPos: 必选项。子字符串的起始位置，该索引从0开始计算。 一个非负的整数，规定要提取的子串的第一个字符在 stringObject 中的位置。</li>\n<li>endPos: 可选项。子字符串的结束位置，该索引从0开始计算。 一个非负的整数，比要提取的子串的最后一个字符在 stringObject 中的位置多 1。 如果省略该参数，那么返回的子串会一直到字符串的结尾。</li>\n</ul>\n<blockquote>\n<p>注： 返回 一个新的字符串，该字符串值包含 stringObject 的一个子字符串，其内容是从 start 处到 stop-1 处的所有字符，其长度为 stop 减 start。 说明 substring 方法返回的子串包括 start 处的字符，但不包括 end 处的字符。 如果 start 与 end 相等，那么该方法返回的就是一个空串（即长度为 0 的字符串）。 如果 start 比 end 大，那么该方法在提取子串之前会先交换这两个参数。 如果 start 或 end 为负数，那么它将被替换为 0。</p>\n</blockquote>\n<p><em>实例</em>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str=<span class=\"string\">&#x27;ahji3o3s4e6p8a0sdewqdasj&#x27;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">substring</span>(<span class=\"number\">2</span>,<span class=\"number\">6</span>))   <span class=\"comment\">//结果为ji3o3</span></span><br></pre></td></tr></table></figure>\n\n\n<p><strong>4.substr:    返回字符串中指定位置开始的指定长度的子字符串。</strong></p>\n<p><em>语法</em>：<font color=red>str.substr(startPos,length)</font><br><em>参数</em>：</p>\n<ul>\n<li>str：必选项。要提取的字符串。</li>\n<li>startPos: 必选项。返回字符串的起始位置，单位为数字。 字符串中的第一个字符的索引为 0。为负数，则默认为0</li>\n<li>length: 可选项。返回字符串的字符个数。 说明 如果 length 为 0 或负数，将返回一个空字符串。 如果没有指定该参数，则子字符串将延续到stringObject的最后。</li>\n</ul>\n<p><em>实例</em>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;0123456789&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">substring</span>(<span class=\"number\">5</span>));\t<span class=\"comment\">//&quot;56789&quot;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">substring</span>(<span class=\"number\">10</span>));\t<span class=\"comment\">//&quot;&quot;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">substring</span>(<span class=\"number\">2</span>,<span class=\"number\">12</span>));\t<span class=\"comment\">//&quot;23456789&quot;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">substring</span>(<span class=\"number\">2</span>,-<span class=\"number\">2</span>));\t<span class=\"comment\">//&quot;01&quot;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">substring</span>(-<span class=\"number\">1</span>,<span class=\"number\">5</span>));\t<span class=\"comment\">//&quot;01234&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"合并字符串\"><a href=\"#合并字符串\" class=\"headerlink\" title=\"合并字符串\"></a>合并字符串</h4><p><strong>1.join</strong></p>\n<p><em>功能</em>：使用您选择的分隔符将一个数组合并为一个字符串。</p>\n<p><em>实例</em>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> delimitedString=myArray.<span class=\"title function_\">join</span>(delimiter);</span><br><span class=\"line\"><span class=\"keyword\">var</span> myList=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(”jpg”,”bmp”,”gif”,”ico”,”png”);</span><br><span class=\"line\"><span class=\"keyword\">var</span> portableList=myList.<span class=\"title function_\">join</span>(”|”);<span class=\"comment\">//结果是jpg|bmp|gif|ico|png</span></span><br></pre></td></tr></table></figure>\n<p><strong>2.concat</strong></p>\n<p><em>功能</em>：将两个数组连接在一起。</p>\n<p><em>实例</em>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr1=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">arr2=[<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>]</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(arr1.<span class=\"title function_\">concat</span>(arr2))  <span class=\"comment\">//结果为[1,2,3,4,5,6,7,8]</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"其他：\"><a href=\"#其他：\" class=\"headerlink\" title=\"其他：\"></a>其他：</h4><p><strong>1.charAt</strong></p>\n<p> <em>功能</em>：返回指定位置的<font color=red>字符</font>。字符串中第一个字符的下标是 0。如果参数 index 不在 0 与 string.length 之间，该方法将返回一个空字符串。</p>\n<p><em>实例</em>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">&#x27;a,g,i,d,o,v,w,d,k,p&#x27;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">charAt</span>(<span class=\"number\">2</span>))  <span class=\"comment\">//结果为g</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>2.charCodeAt</strong></p>\n<p><em>功能</em>：charCodeAt() 方法可返回指定位置的字符的<font color=red>Unicode 编码</font>。这个返回值是 0 - 65535 之间的整数。<br>方法 charCodeAt() 与 charAt() 方法执行的操作相似，只不过前者返回的是位于指定位置的字符的编码，而后者返回的是字符子串。</p>\n<p><em>实例</em>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">&#x27;a,g,i,d,o,v,w,d,k,p&#x27;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">charCodeAt</span>(<span class=\"number\">2</span>))  <span class=\"comment\">//结果为103。即g的Unicode编码为103</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>3.replace:   用于在字符串中用一些字符替换另一些字符。</strong></p>\n<p><em>语法</em>：<font color=red>str.replace(string,replacement)</font><br><em>参数</em>：</p>\n<ul>\n<li>str：必选项。要替换的字符串。</li>\n<li>string:必选项。正则对象。</li>\n<li>replacement: 必选项。要替换的字符。</li>\n</ul>\n<p>—-记录这些是因为某些时候会记错某个方法返回结果，基本用法还是要记一记的，羞愧&#x3D; &#x3D;—- </p>\n","site":{"data":{}},"excerpt":"<h4 id=\"截取字符串：\"><a href=\"#截取字符串：\" class=\"headerlink\" title=\"截取字符串：\"></a>截取字符串：</h4><p><strong>1.split： 把一个字符串分割成字符串数组。</strong></p>\n<p><em>功能</em> ：使用一个指定的分隔符把字符串分隔存储到数组<br><em>语法</em> ：<font color=red>str.split(separator,size)</font><br><em>参数</em> ：</p>\n<ul>\n<li>str：必选项。要截取的字符串。</li>\n<li>separator: 必选项。要分割的条件，是字符串或表达式。</li>\n<li>size：可选项。返回数组的长度。不定义则全部返回。</li>\n</ul>\n<p><em>实例</em> ：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=”jpg|bmp|gif|ico|png”; arr=str.<span class=\"title function_\">split</span>(”|”);<span class=\"comment\">//arr是一个包含字符值”jpg”、”bmp”、”gif”、”ico”和”png”的数组</span></span><br></pre></td></tr></table></figure>","more":"<p><strong>2.slice：   提取字符串的某个部分。</strong></p>\n<p><em>功能</em>：返回一个新的数组，包含从start到end（不包括该元素）的arrayobject中的元素。<br><em>语法</em>：<font color=red>str.slice(startPos,endPos)</font><br><em>参数</em>：</p>\n<ul>\n<li>startPos: 必选项。字符串的起始位置。如果参数负数，则从字符串的结尾处算起。 也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推。</li>\n<li>endPos: 可选项。提取字符串的结束小标。 如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。</li>\n</ul>\n<p><em>实例</em>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">&#x27;ahji3o3s4e6p8a0sdewqdasj&#x27;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>,<span class=\"number\">5</span>))   <span class=\"comment\">//结果ji3</span></span><br></pre></td></tr></table></figure>\n\n\n<p><strong>3.substring：  返回指定位置的子字符串。</strong></p>\n<p><em>功能</em>：用于提取字符串中介于两个指定下标之间的字符。<br><em>语法</em>：<font color=red>str.substring(startPos,endPos)</font><br><em>参数</em>：</p>\n<ul>\n<li>str: 必选项。要提取的字符串。</li>\n<li>startPos: 必选项。子字符串的起始位置，该索引从0开始计算。 一个非负的整数，规定要提取的子串的第一个字符在 stringObject 中的位置。</li>\n<li>endPos: 可选项。子字符串的结束位置，该索引从0开始计算。 一个非负的整数，比要提取的子串的最后一个字符在 stringObject 中的位置多 1。 如果省略该参数，那么返回的子串会一直到字符串的结尾。</li>\n</ul>\n<blockquote>\n<p>注： 返回 一个新的字符串，该字符串值包含 stringObject 的一个子字符串，其内容是从 start 处到 stop-1 处的所有字符，其长度为 stop 减 start。 说明 substring 方法返回的子串包括 start 处的字符，但不包括 end 处的字符。 如果 start 与 end 相等，那么该方法返回的就是一个空串（即长度为 0 的字符串）。 如果 start 比 end 大，那么该方法在提取子串之前会先交换这两个参数。 如果 start 或 end 为负数，那么它将被替换为 0。</p>\n</blockquote>\n<p><em>实例</em>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str=<span class=\"string\">&#x27;ahji3o3s4e6p8a0sdewqdasj&#x27;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">substring</span>(<span class=\"number\">2</span>,<span class=\"number\">6</span>))   <span class=\"comment\">//结果为ji3o3</span></span><br></pre></td></tr></table></figure>\n\n\n<p><strong>4.substr:    返回字符串中指定位置开始的指定长度的子字符串。</strong></p>\n<p><em>语法</em>：<font color=red>str.substr(startPos,length)</font><br><em>参数</em>：</p>\n<ul>\n<li>str：必选项。要提取的字符串。</li>\n<li>startPos: 必选项。返回字符串的起始位置，单位为数字。 字符串中的第一个字符的索引为 0。为负数，则默认为0</li>\n<li>length: 可选项。返回字符串的字符个数。 说明 如果 length 为 0 或负数，将返回一个空字符串。 如果没有指定该参数，则子字符串将延续到stringObject的最后。</li>\n</ul>\n<p><em>实例</em>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;0123456789&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">substring</span>(<span class=\"number\">5</span>));\t<span class=\"comment\">//&quot;56789&quot;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">substring</span>(<span class=\"number\">10</span>));\t<span class=\"comment\">//&quot;&quot;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">substring</span>(<span class=\"number\">2</span>,<span class=\"number\">12</span>));\t<span class=\"comment\">//&quot;23456789&quot;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">substring</span>(<span class=\"number\">2</span>,-<span class=\"number\">2</span>));\t<span class=\"comment\">//&quot;01&quot;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">substring</span>(-<span class=\"number\">1</span>,<span class=\"number\">5</span>));\t<span class=\"comment\">//&quot;01234&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"合并字符串\"><a href=\"#合并字符串\" class=\"headerlink\" title=\"合并字符串\"></a>合并字符串</h4><p><strong>1.join</strong></p>\n<p><em>功能</em>：使用您选择的分隔符将一个数组合并为一个字符串。</p>\n<p><em>实例</em>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> delimitedString=myArray.<span class=\"title function_\">join</span>(delimiter);</span><br><span class=\"line\"><span class=\"keyword\">var</span> myList=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(”jpg”,”bmp”,”gif”,”ico”,”png”);</span><br><span class=\"line\"><span class=\"keyword\">var</span> portableList=myList.<span class=\"title function_\">join</span>(”|”);<span class=\"comment\">//结果是jpg|bmp|gif|ico|png</span></span><br></pre></td></tr></table></figure>\n<p><strong>2.concat</strong></p>\n<p><em>功能</em>：将两个数组连接在一起。</p>\n<p><em>实例</em>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr1=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">arr2=[<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>]</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(arr1.<span class=\"title function_\">concat</span>(arr2))  <span class=\"comment\">//结果为[1,2,3,4,5,6,7,8]</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"其他：\"><a href=\"#其他：\" class=\"headerlink\" title=\"其他：\"></a>其他：</h4><p><strong>1.charAt</strong></p>\n<p> <em>功能</em>：返回指定位置的<font color=red>字符</font>。字符串中第一个字符的下标是 0。如果参数 index 不在 0 与 string.length 之间，该方法将返回一个空字符串。</p>\n<p><em>实例</em>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">&#x27;a,g,i,d,o,v,w,d,k,p&#x27;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">charAt</span>(<span class=\"number\">2</span>))  <span class=\"comment\">//结果为g</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>2.charCodeAt</strong></p>\n<p><em>功能</em>：charCodeAt() 方法可返回指定位置的字符的<font color=red>Unicode 编码</font>。这个返回值是 0 - 65535 之间的整数。<br>方法 charCodeAt() 与 charAt() 方法执行的操作相似，只不过前者返回的是位于指定位置的字符的编码，而后者返回的是字符子串。</p>\n<p><em>实例</em>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">&#x27;a,g,i,d,o,v,w,d,k,p&#x27;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str.<span class=\"title function_\">charCodeAt</span>(<span class=\"number\">2</span>))  <span class=\"comment\">//结果为103。即g的Unicode编码为103</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>3.replace:   用于在字符串中用一些字符替换另一些字符。</strong></p>\n<p><em>语法</em>：<font color=red>str.replace(string,replacement)</font><br><em>参数</em>：</p>\n<ul>\n<li>str：必选项。要替换的字符串。</li>\n<li>string:必选项。正则对象。</li>\n<li>replacement: 必选项。要替换的字符。</li>\n</ul>\n<p>—-记录这些是因为某些时候会记错某个方法返回结果，基本用法还是要记一记的，羞愧&#x3D; &#x3D;—- </p>"},{"title":"我的工作经历","date":"2021-09-11T09:30:09.000Z","_content":"\n工作经历\n\n\n2016年6月，毕业于 中南大学 信息科学与工程学院 自动化系；\n\n2016年6月至9月，在 上海开始云网络科技公司 实习，做桌面客户端开发，使用WPF开发（C#），后答辩留下成为一名 前端开发工程师；\n\n2016年9月至2017年5月，该公司业务围绕企业文档数据，前端开发开发工具以AngularJs为主（其他webpack1，jsp，fis3，gulp等），通过node-webkit打包成桌面APP；\n\n2017年5月至2017年9月，在该公司换了业务线，业务围绕企业组织架构，前端开发工具Vue为主（其他Vuex,Webpack2,axios等），另外接手公司部分jsp项目维护；\n\n2017年9月至2018年2月，独立负责该公司承接的苏州某科技院组织结构后台管理业务，前端开发工具以React为主（其他antd，Redux，webpack3，axios等）；\n\n2018年2月，进入上海携程网络公司，任职 前端高级开发工程师；\n\n2018年2月至2019年4月，在内部智行火车票业务线，负责开发相关移动端H5页面+客户端网页+APP内嵌H5网页等前端开发。H5页面前端工具以Vue为主（其他webpack4，grunt等），APP端使用的是公司改装后的CRN（从RN封装而来）。同时负责高铁游部分.net切node工作，维护ejs模板网页等；\n\n2019年4月至2020年7月，开始负责携程火车票H5及网页业务逻辑，并是其前端主要业务负责人。参与开发执行营销活动类项目，同时与后端+APP端+小程序端对接服务；\n\n2020年7月至今，先后负责智行火车票+机票+酒店+门票等多个业务线的前端工作（H5,微信小程序，支付宝小程序，百度小程序...），同时负责来自主站所有业务现促销活动的前后端工作，前端工具以Vue，React，RN，Taro为主，后端工具以node为主，数据库mysql（ORM用sequelize，持久化redis），发布pm2。\n ","source":"_posts/work.md","raw":"---\ntitle: 我的工作经历\ndate: 2021-09-11 17:30:9\ncategories: others\n---\n\n工作经历\n\n\n2016年6月，毕业于 中南大学 信息科学与工程学院 自动化系；\n\n2016年6月至9月，在 上海开始云网络科技公司 实习，做桌面客户端开发，使用WPF开发（C#），后答辩留下成为一名 前端开发工程师；\n\n2016年9月至2017年5月，该公司业务围绕企业文档数据，前端开发开发工具以AngularJs为主（其他webpack1，jsp，fis3，gulp等），通过node-webkit打包成桌面APP；\n\n2017年5月至2017年9月，在该公司换了业务线，业务围绕企业组织架构，前端开发工具Vue为主（其他Vuex,Webpack2,axios等），另外接手公司部分jsp项目维护；\n\n2017年9月至2018年2月，独立负责该公司承接的苏州某科技院组织结构后台管理业务，前端开发工具以React为主（其他antd，Redux，webpack3，axios等）；\n\n2018年2月，进入上海携程网络公司，任职 前端高级开发工程师；\n\n2018年2月至2019年4月，在内部智行火车票业务线，负责开发相关移动端H5页面+客户端网页+APP内嵌H5网页等前端开发。H5页面前端工具以Vue为主（其他webpack4，grunt等），APP端使用的是公司改装后的CRN（从RN封装而来）。同时负责高铁游部分.net切node工作，维护ejs模板网页等；\n\n2019年4月至2020年7月，开始负责携程火车票H5及网页业务逻辑，并是其前端主要业务负责人。参与开发执行营销活动类项目，同时与后端+APP端+小程序端对接服务；\n\n2020年7月至今，先后负责智行火车票+机票+酒店+门票等多个业务线的前端工作（H5,微信小程序，支付宝小程序，百度小程序...），同时负责来自主站所有业务现促销活动的前后端工作，前端工具以Vue，React，RN，Taro为主，后端工具以node为主，数据库mysql（ORM用sequelize，持久化redis），发布pm2。\n ","slug":"work","published":1,"updated":"2023-12-11T17:32:36.389Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq18rrw50003vf4k87h6ac49","content":"<p>工作经历</p>\n<p>2016年6月，毕业于 中南大学 信息科学与工程学院 自动化系；</p>\n<p>2016年6月至9月，在 上海开始云网络科技公司 实习，做桌面客户端开发，使用WPF开发（C#），后答辩留下成为一名 前端开发工程师；</p>\n<p>2016年9月至2017年5月，该公司业务围绕企业文档数据，前端开发开发工具以AngularJs为主（其他webpack1，jsp，fis3，gulp等），通过node-webkit打包成桌面APP；</p>\n<p>2017年5月至2017年9月，在该公司换了业务线，业务围绕企业组织架构，前端开发工具Vue为主（其他Vuex,Webpack2,axios等），另外接手公司部分jsp项目维护；</p>\n<p>2017年9月至2018年2月，独立负责该公司承接的苏州某科技院组织结构后台管理业务，前端开发工具以React为主（其他antd，Redux，webpack3，axios等）；</p>\n<p>2018年2月，进入上海携程网络公司，任职 前端高级开发工程师；</p>\n<p>2018年2月至2019年4月，在内部智行火车票业务线，负责开发相关移动端H5页面+客户端网页+APP内嵌H5网页等前端开发。H5页面前端工具以Vue为主（其他webpack4，grunt等），APP端使用的是公司改装后的CRN（从RN封装而来）。同时负责高铁游部分.net切node工作，维护ejs模板网页等；</p>\n<p>2019年4月至2020年7月，开始负责携程火车票H5及网页业务逻辑，并是其前端主要业务负责人。参与开发执行营销活动类项目，同时与后端+APP端+小程序端对接服务；</p>\n<p>2020年7月至今，先后负责智行火车票+机票+酒店+门票等多个业务线的前端工作（H5,微信小程序，支付宝小程序，百度小程序…），同时负责来自主站所有业务现促销活动的前后端工作，前端工具以Vue，React，RN，Taro为主，后端工具以node为主，数据库mysql（ORM用sequelize，持久化redis），发布pm2。\n </p>\n","site":{"data":{}},"excerpt":"","more":"<p>工作经历</p>\n<p>2016年6月，毕业于 中南大学 信息科学与工程学院 自动化系；</p>\n<p>2016年6月至9月，在 上海开始云网络科技公司 实习，做桌面客户端开发，使用WPF开发（C#），后答辩留下成为一名 前端开发工程师；</p>\n<p>2016年9月至2017年5月，该公司业务围绕企业文档数据，前端开发开发工具以AngularJs为主（其他webpack1，jsp，fis3，gulp等），通过node-webkit打包成桌面APP；</p>\n<p>2017年5月至2017年9月，在该公司换了业务线，业务围绕企业组织架构，前端开发工具Vue为主（其他Vuex,Webpack2,axios等），另外接手公司部分jsp项目维护；</p>\n<p>2017年9月至2018年2月，独立负责该公司承接的苏州某科技院组织结构后台管理业务，前端开发工具以React为主（其他antd，Redux，webpack3，axios等）；</p>\n<p>2018年2月，进入上海携程网络公司，任职 前端高级开发工程师；</p>\n<p>2018年2月至2019年4月，在内部智行火车票业务线，负责开发相关移动端H5页面+客户端网页+APP内嵌H5网页等前端开发。H5页面前端工具以Vue为主（其他webpack4，grunt等），APP端使用的是公司改装后的CRN（从RN封装而来）。同时负责高铁游部分.net切node工作，维护ejs模板网页等；</p>\n<p>2019年4月至2020年7月，开始负责携程火车票H5及网页业务逻辑，并是其前端主要业务负责人。参与开发执行营销活动类项目，同时与后端+APP端+小程序端对接服务；</p>\n<p>2020年7月至今，先后负责智行火车票+机票+酒店+门票等多个业务线的前端工作（H5,微信小程序，支付宝小程序，百度小程序…），同时负责来自主站所有业务现促销活动的前后端工作，前端工具以Vue，React，RN，Taro为主，后端工具以node为主，数据库mysql（ORM用sequelize，持久化redis），发布pm2。\n </p>\n"},{"title":"WPF笔记","date":"2017-03-02T10:41:51.000Z","_content":"\n###  改写窗体：\n\n**1.WPF中使用默认窗口框架的外观，可以更改属性：([参考](http://www.cnblogs.com/libaoheng/archive/2011/11/18/2253751.html))**\n*Icon*: 指定窗口的图标；\n*Title*: 指定窗口的标题；\n*WindowStyle*: 指定窗口样式，有4个取值：\n- None，无边框；（当ResizeMode属性为NoResize时，仅剩下窗口核心。）\n- SingleBorderWindow，单边框【默认】；\n- ThreeDBorderWindow，3D边框；\n- ToolBorderWindow，工具箱窗口；\n- ResizeMode 是指定大小调节样式，有4个取值：\n- NoResize，不可调节，同时没有最大最小按钮；\n- CanMinimize，不可调节。但可以最小化；（此时最大化按钮不可用）\n- CanResize，可调节【默认】；\n- CanResizeWithGrid，可根据网格调节；（窗口右下脚显示可调节网格）\n-  WindowStartLocation 指定窗口初始位置，有3个取值：\n-  Manual，手工指定位置，表示可以通过设置其Top、Left属性值来决定窗口的初始位置；\n-  CenterScreen，屏幕中央；\n-  CenterOwner，父窗体中央；\n >另外：\n - MaxWidth、MinWidth、MaxHeight、MinHeight ：表示窗口最大宽度、最小宽度、最大高度、最小高度。可以通过得到和更改这些属性值，来获取和改变窗口的大小和长宽范围。\n - TitlebarHeight=\"45\"          //修改窗体titlebar高度；\n - AllowsTransparency：获取或设置一个值，该值指示窗口的工作区是否支持透明；\n \n<!--more-->\n\n \n**2.设置窗体无边框：**\n     设置 WindowStyle=\"None\"、  AllowsTransparency=\"True\" 即可。\n     *如下*：\n``` xml\n<Window\n    x:Class=\"WpfApplication1.MainWindow\" \n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" \n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" \n    Title=\"MainWindow\" Height=\"350\" Width=\"525\"   \n    WindowStyle=\"None\" \n    AllowsTransparency=\"True\"> \n    <Grid> \n    </Grid> \n</Window>  \n```\n\n**3.窗口拖放：**\n``` cs\nprivate void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e){\n    this.DragMove();\n}\n```\n\n*调用：*\n\n``` cs\nthis.MouseLeftButtonDown += delegate { DragMove(); };\n```\n\n或：\n``` cs\nMouseDown=\"Window_MouseDown\"\nprivate void Window_MouseDown(object sender, MouseButtonEventArgs e){\n\tif (e.LeftButton == MouseButtonState.Pressed){\n        DragMove();\n\t}\n}\n```\n     \n**4.自定义窗体最大化、最小化、关闭**\n如下： \n``` cs\nprivate void btn_min_Click(object sender, RoutedEventArgs e){\n    this.WindowState = WindowState.Minimized;     \n}\nprivate void btn_max_Click(object sender, RoutedEventArgs e){\n    if(this.WindowState == WindowState.Maximized){\n    \tthis.WindowState = WindowState.Normal; //还原 \n    }else{\n       this.WindowState = WindowState.Maximized;\n    }\n}\nprivate void btn_close_Click(object sender, RoutedEventArgs e){\n    this.Close();\n}\n```\n\t\n**5.窗口阴影：**(WPF4.5)\n``` xml\n<Window x:Class=\"WPFTest.MainWindow\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    Title=\"MainWindow\"\n    Width=\"525\"\n    Height=\"350\">\n    <WindowChrome.WindowChrome>\n        <WindowChrome CaptionHeight=\"30\"\n                      CornerRadius=\"0\"\n                      GlassFrameThickness=\"1\"\n                      NonClientFrameEdges=\"None\"\n                      ResizeBorderThickness=\"5\"\n                      UseAeroCaptionButtons=\"False\" />\n    \t</WindowChrome>\n    <Grid> \n    </Grid>\n</Window>\n```\n\n\n### tooltip\n给某个空间增加tooltip显示详细信息:\n\n``` cs\nprivate void Tip_MouseMove(object sender, MouseEventArgs e){\n    ListViewItem listitem = (sender as Image).TryFindParent<ListViewItem>();\n    FDObject item = (FDObject)listitem.DataContext;           \n    if (item != null){\n        (sender as Image).ToolTip = item.path;\n    }\n}\n```\n\t\n\n直接用control.Tooltip=text;   在鼠标移入事件中确定\n\n### System.Drawing.Image对象\n**System.Drawing.Image 和 System.Windows.Media.ImageSource 之间转换**\n**例：**\n``` cs\nMemoryStream ms = new MemoryStream ();\nvar bitmap = new BitmapImage();\nbitmap.BeginInit();\nuserImage.Save (ms,System.Drawing.Imaging. ImageFormat.Bmp);\nms.Seek(0, SeekOrigin.Begin);\nbitmap.StreamSource = ms;\nbitmap.EndInit();\nemplImage.Source = bitmap;\nreturn emplImage;\n```\n\t\n\t\n### 旋转动画：\n**例：**\n``` cs\n private void Button_Click(object sender, RoutedEventArgs e){\n    RotateTransform a = new RotateTransform();\n    Refresh.RenderTransform = a;\n    Refresh.RenderTransformOrigin = new Point(0.5, 0.5);\n    DoubleAnimation myDouble = new DoubleAnimation(0, 360, new Duration(TimeSpan.FromSeconds(1)));\n    Storyboard story = new Storyboard();\n    myDouble.RepeatBehavior = RepeatBehavior.Forever;\n    story.Children.Add(myDouble);\n    Storyboard.SetTarget(myDouble, Refresh);\n    Storyboard.SetTargetProperty(myDouble, new PropertyPath(\"RenderTransform.Angle\"));\n    story.Begin();\n}\n```\n``` xml\n<Grid>\n    <TextBlock x:Name=\"Refresh\"  VerticalAlignment=\"Center\" HorizontalAlignment=\"Center\"    Text=\"&#xe712;\"   />\n    <Button VerticalAlignment=\"Bottom\" HorizontalAlignment=\"Center\" Width=\"100\" Height=\"50\" Click=\"Button_Click\"/>\n</Grid>\n    \n```","source":"_posts/wpf笔记.md","raw":"---\ntitle: WPF笔记\ndate: 2017-03-02 18:41:51\ncategories: Others\ntags: WPF \n---\n\n###  改写窗体：\n\n**1.WPF中使用默认窗口框架的外观，可以更改属性：([参考](http://www.cnblogs.com/libaoheng/archive/2011/11/18/2253751.html))**\n*Icon*: 指定窗口的图标；\n*Title*: 指定窗口的标题；\n*WindowStyle*: 指定窗口样式，有4个取值：\n- None，无边框；（当ResizeMode属性为NoResize时，仅剩下窗口核心。）\n- SingleBorderWindow，单边框【默认】；\n- ThreeDBorderWindow，3D边框；\n- ToolBorderWindow，工具箱窗口；\n- ResizeMode 是指定大小调节样式，有4个取值：\n- NoResize，不可调节，同时没有最大最小按钮；\n- CanMinimize，不可调节。但可以最小化；（此时最大化按钮不可用）\n- CanResize，可调节【默认】；\n- CanResizeWithGrid，可根据网格调节；（窗口右下脚显示可调节网格）\n-  WindowStartLocation 指定窗口初始位置，有3个取值：\n-  Manual，手工指定位置，表示可以通过设置其Top、Left属性值来决定窗口的初始位置；\n-  CenterScreen，屏幕中央；\n-  CenterOwner，父窗体中央；\n >另外：\n - MaxWidth、MinWidth、MaxHeight、MinHeight ：表示窗口最大宽度、最小宽度、最大高度、最小高度。可以通过得到和更改这些属性值，来获取和改变窗口的大小和长宽范围。\n - TitlebarHeight=\"45\"          //修改窗体titlebar高度；\n - AllowsTransparency：获取或设置一个值，该值指示窗口的工作区是否支持透明；\n \n<!--more-->\n\n \n**2.设置窗体无边框：**\n     设置 WindowStyle=\"None\"、  AllowsTransparency=\"True\" 即可。\n     *如下*：\n``` xml\n<Window\n    x:Class=\"WpfApplication1.MainWindow\" \n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" \n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" \n    Title=\"MainWindow\" Height=\"350\" Width=\"525\"   \n    WindowStyle=\"None\" \n    AllowsTransparency=\"True\"> \n    <Grid> \n    </Grid> \n</Window>  \n```\n\n**3.窗口拖放：**\n``` cs\nprivate void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e){\n    this.DragMove();\n}\n```\n\n*调用：*\n\n``` cs\nthis.MouseLeftButtonDown += delegate { DragMove(); };\n```\n\n或：\n``` cs\nMouseDown=\"Window_MouseDown\"\nprivate void Window_MouseDown(object sender, MouseButtonEventArgs e){\n\tif (e.LeftButton == MouseButtonState.Pressed){\n        DragMove();\n\t}\n}\n```\n     \n**4.自定义窗体最大化、最小化、关闭**\n如下： \n``` cs\nprivate void btn_min_Click(object sender, RoutedEventArgs e){\n    this.WindowState = WindowState.Minimized;     \n}\nprivate void btn_max_Click(object sender, RoutedEventArgs e){\n    if(this.WindowState == WindowState.Maximized){\n    \tthis.WindowState = WindowState.Normal; //还原 \n    }else{\n       this.WindowState = WindowState.Maximized;\n    }\n}\nprivate void btn_close_Click(object sender, RoutedEventArgs e){\n    this.Close();\n}\n```\n\t\n**5.窗口阴影：**(WPF4.5)\n``` xml\n<Window x:Class=\"WPFTest.MainWindow\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    Title=\"MainWindow\"\n    Width=\"525\"\n    Height=\"350\">\n    <WindowChrome.WindowChrome>\n        <WindowChrome CaptionHeight=\"30\"\n                      CornerRadius=\"0\"\n                      GlassFrameThickness=\"1\"\n                      NonClientFrameEdges=\"None\"\n                      ResizeBorderThickness=\"5\"\n                      UseAeroCaptionButtons=\"False\" />\n    \t</WindowChrome>\n    <Grid> \n    </Grid>\n</Window>\n```\n\n\n### tooltip\n给某个空间增加tooltip显示详细信息:\n\n``` cs\nprivate void Tip_MouseMove(object sender, MouseEventArgs e){\n    ListViewItem listitem = (sender as Image).TryFindParent<ListViewItem>();\n    FDObject item = (FDObject)listitem.DataContext;           \n    if (item != null){\n        (sender as Image).ToolTip = item.path;\n    }\n}\n```\n\t\n\n直接用control.Tooltip=text;   在鼠标移入事件中确定\n\n### System.Drawing.Image对象\n**System.Drawing.Image 和 System.Windows.Media.ImageSource 之间转换**\n**例：**\n``` cs\nMemoryStream ms = new MemoryStream ();\nvar bitmap = new BitmapImage();\nbitmap.BeginInit();\nuserImage.Save (ms,System.Drawing.Imaging. ImageFormat.Bmp);\nms.Seek(0, SeekOrigin.Begin);\nbitmap.StreamSource = ms;\nbitmap.EndInit();\nemplImage.Source = bitmap;\nreturn emplImage;\n```\n\t\n\t\n### 旋转动画：\n**例：**\n``` cs\n private void Button_Click(object sender, RoutedEventArgs e){\n    RotateTransform a = new RotateTransform();\n    Refresh.RenderTransform = a;\n    Refresh.RenderTransformOrigin = new Point(0.5, 0.5);\n    DoubleAnimation myDouble = new DoubleAnimation(0, 360, new Duration(TimeSpan.FromSeconds(1)));\n    Storyboard story = new Storyboard();\n    myDouble.RepeatBehavior = RepeatBehavior.Forever;\n    story.Children.Add(myDouble);\n    Storyboard.SetTarget(myDouble, Refresh);\n    Storyboard.SetTargetProperty(myDouble, new PropertyPath(\"RenderTransform.Angle\"));\n    story.Begin();\n}\n```\n``` xml\n<Grid>\n    <TextBlock x:Name=\"Refresh\"  VerticalAlignment=\"Center\" HorizontalAlignment=\"Center\"    Text=\"&#xe712;\"   />\n    <Button VerticalAlignment=\"Bottom\" HorizontalAlignment=\"Center\" Width=\"100\" Height=\"50\" Click=\"Button_Click\"/>\n</Grid>\n    \n```","slug":"wpf笔记","published":1,"updated":"2021-04-17T14:42:56.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq18rrw50005vf4k3cg71mjw","content":"<h3 id=\"改写窗体：\"><a href=\"#改写窗体：\" class=\"headerlink\" title=\"改写窗体：\"></a>改写窗体：</h3><p><strong>1.WPF中使用默认窗口框架的外观，可以更改属性：(<a href=\"http://www.cnblogs.com/libaoheng/archive/2011/11/18/2253751.html\">参考</a>)</strong><br><em>Icon</em>: 指定窗口的图标；<br><em>Title</em>: 指定窗口的标题；<br><em>WindowStyle</em>: 指定窗口样式，有4个取值：</p>\n<ul>\n<li>None，无边框；（当ResizeMode属性为NoResize时，仅剩下窗口核心。）</li>\n<li>SingleBorderWindow，单边框【默认】；</li>\n<li>ThreeDBorderWindow，3D边框；</li>\n<li>ToolBorderWindow，工具箱窗口；</li>\n<li>ResizeMode 是指定大小调节样式，有4个取值：</li>\n<li>NoResize，不可调节，同时没有最大最小按钮；</li>\n<li>CanMinimize，不可调节。但可以最小化；（此时最大化按钮不可用）</li>\n<li>CanResize，可调节【默认】；</li>\n<li>CanResizeWithGrid，可根据网格调节；（窗口右下脚显示可调节网格）</li>\n<li>WindowStartLocation 指定窗口初始位置，有3个取值：</li>\n<li>Manual，手工指定位置，表示可以通过设置其Top、Left属性值来决定窗口的初始位置；</li>\n<li>CenterScreen，屏幕中央；</li>\n<li>CenterOwner，父窗体中央；<blockquote>\n<p>另外：</p>\n</blockquote>\n</li>\n<li>MaxWidth、MinWidth、MaxHeight、MinHeight ：表示窗口最大宽度、最小宽度、最大高度、最小高度。可以通过得到和更改这些属性值，来获取和改变窗口的大小和长宽范围。</li>\n<li>TitlebarHeight&#x3D;”45”          &#x2F;&#x2F;修改窗体titlebar高度；</li>\n<li>AllowsTransparency：获取或设置一个值，该值指示窗口的工作区是否支持透明；</li>\n</ul>\n<span id=\"more\"></span>\n\n<p><strong>2.设置窗体无边框：</strong><br>     设置 WindowStyle&#x3D;”None”、  AllowsTransparency&#x3D;”True” 即可。<br>     <em>如下</em>：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">x:Class</span>=<span class=\"string\">&quot;WpfApplication1.MainWindow&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:x</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Title</span>=<span class=\"string\">&quot;MainWindow&quot;</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;350&quot;</span> <span class=\"attr\">Width</span>=<span class=\"string\">&quot;525&quot;</span>   </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">WindowStyle</span>=<span class=\"string\">&quot;None&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">AllowsTransparency</span>=<span class=\"string\">&quot;True&quot;</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span>  </span><br></pre></td></tr></table></figure>\n\n<p><strong>3.窗口拖放：</strong></p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Window_MouseLeftButtonDown</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, MouseButtonEventArgs e</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.DragMove();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><em>调用：</em></p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.MouseLeftButtonDown += <span class=\"built_in\">delegate</span> &#123; DragMove(); &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>或：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MouseDown=<span class=\"string\">&quot;Window_MouseDown&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Window_MouseDown</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, MouseButtonEventArgs e</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (e.LeftButton == MouseButtonState.Pressed)&#123;</span><br><span class=\"line\">        DragMove();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>4.自定义窗体最大化、最小化、关闭</strong><br>如下： </p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">btn_min_Click</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, RoutedEventArgs e</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.WindowState = WindowState.Minimized;     </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">btn_max_Click</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, RoutedEventArgs e</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.WindowState == WindowState.Maximized)&#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">this</span>.WindowState = WindowState.Normal; <span class=\"comment\">//还原 </span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">this</span>.WindowState = WindowState.Maximized;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">btn_close_Click</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, RoutedEventArgs e</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.Close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>5.窗口阴影：</strong>(WPF4.5)</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">x:Class</span>=<span class=\"string\">&quot;WPFTest.MainWindow&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:x</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Title</span>=<span class=\"string\">&quot;MainWindow&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Width</span>=<span class=\"string\">&quot;525&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Height</span>=<span class=\"string\">&quot;350&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">WindowChrome.WindowChrome</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">WindowChrome</span> <span class=\"attr\">CaptionHeight</span>=<span class=\"string\">&quot;30&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                      <span class=\"attr\">CornerRadius</span>=<span class=\"string\">&quot;0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                      <span class=\"attr\">GlassFrameThickness</span>=<span class=\"string\">&quot;1&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                      <span class=\"attr\">NonClientFrameEdges</span>=<span class=\"string\">&quot;None&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                      <span class=\"attr\">ResizeBorderThickness</span>=<span class=\"string\">&quot;5&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                      <span class=\"attr\">UseAeroCaptionButtons</span>=<span class=\"string\">&quot;False&quot;</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;/<span class=\"name\">WindowChrome</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"tooltip\"><a href=\"#tooltip\" class=\"headerlink\" title=\"tooltip\"></a>tooltip</h3><p>给某个空间增加tooltip显示详细信息:</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Tip_MouseMove</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, MouseEventArgs e</span>)</span>&#123;</span><br><span class=\"line\">    ListViewItem listitem = (sender <span class=\"keyword\">as</span> Image).TryFindParent&lt;ListViewItem&gt;();</span><br><span class=\"line\">    FDObject item = (FDObject)listitem.DataContext;           </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item != <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        (sender <span class=\"keyword\">as</span> Image).ToolTip = item.path;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>直接用control.Tooltip&#x3D;text;   在鼠标移入事件中确定</p>\n<h3 id=\"System-Drawing-Image对象\"><a href=\"#System-Drawing-Image对象\" class=\"headerlink\" title=\"System.Drawing.Image对象\"></a>System.Drawing.Image对象</h3><p><strong>System.Drawing.Image 和 System.Windows.Media.ImageSource 之间转换</strong><br><strong>例：</strong></p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MemoryStream ms = <span class=\"keyword\">new</span> MemoryStream ();</span><br><span class=\"line\"><span class=\"keyword\">var</span> bitmap = <span class=\"keyword\">new</span> BitmapImage();</span><br><span class=\"line\">bitmap.BeginInit();</span><br><span class=\"line\">userImage.Save (ms,System.Drawing.Imaging. ImageFormat.Bmp);</span><br><span class=\"line\">ms.Seek(<span class=\"number\">0</span>, SeekOrigin.Begin);</span><br><span class=\"line\">bitmap.StreamSource = ms;</span><br><span class=\"line\">bitmap.EndInit();</span><br><span class=\"line\">emplImage.Source = bitmap;</span><br><span class=\"line\"><span class=\"keyword\">return</span> emplImage;</span><br></pre></td></tr></table></figure>\n<h3 id=\"旋转动画：\"><a href=\"#旋转动画：\" class=\"headerlink\" title=\"旋转动画：\"></a>旋转动画：</h3><p><strong>例：</strong></p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Button_Click</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, RoutedEventArgs e</span>)</span>&#123;</span><br><span class=\"line\">    RotateTransform a = <span class=\"keyword\">new</span> RotateTransform();</span><br><span class=\"line\">    Refresh.RenderTransform = a;</span><br><span class=\"line\">    Refresh.RenderTransformOrigin = <span class=\"keyword\">new</span> Point(<span class=\"number\">0.5</span>, <span class=\"number\">0.5</span>);</span><br><span class=\"line\">    DoubleAnimation myDouble = <span class=\"keyword\">new</span> DoubleAnimation(<span class=\"number\">0</span>, <span class=\"number\">360</span>, <span class=\"keyword\">new</span> Duration(TimeSpan.FromSeconds(<span class=\"number\">1</span>)));</span><br><span class=\"line\">    Storyboard story = <span class=\"keyword\">new</span> Storyboard();</span><br><span class=\"line\">    myDouble.RepeatBehavior = RepeatBehavior.Forever;</span><br><span class=\"line\">    story.Children.Add(myDouble);</span><br><span class=\"line\">    Storyboard.SetTarget(myDouble, Refresh);</span><br><span class=\"line\">    Storyboard.SetTargetProperty(myDouble, <span class=\"keyword\">new</span> PropertyPath(<span class=\"string\">&quot;RenderTransform.Angle&quot;</span>));</span><br><span class=\"line\">    story.Begin();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">&quot;Refresh&quot;</span>  <span class=\"attr\">VerticalAlignment</span>=<span class=\"string\">&quot;Center&quot;</span> <span class=\"attr\">HorizontalAlignment</span>=<span class=\"string\">&quot;Center&quot;</span>    <span class=\"attr\">Text</span>=<span class=\"string\">&quot;<span class=\"symbol\">&amp;#xe712;</span>&quot;</span>   /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">VerticalAlignment</span>=<span class=\"string\">&quot;Bottom&quot;</span> <span class=\"attr\">HorizontalAlignment</span>=<span class=\"string\">&quot;Center&quot;</span> <span class=\"attr\">Width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;50&quot;</span> <span class=\"attr\">Click</span>=<span class=\"string\">&quot;Button_Click&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h3 id=\"改写窗体：\"><a href=\"#改写窗体：\" class=\"headerlink\" title=\"改写窗体：\"></a>改写窗体：</h3><p><strong>1.WPF中使用默认窗口框架的外观，可以更改属性：(<a href=\"http://www.cnblogs.com/libaoheng/archive/2011/11/18/2253751.html\">参考</a>)</strong><br><em>Icon</em>: 指定窗口的图标；<br><em>Title</em>: 指定窗口的标题；<br><em>WindowStyle</em>: 指定窗口样式，有4个取值：</p>\n<ul>\n<li>None，无边框；（当ResizeMode属性为NoResize时，仅剩下窗口核心。）</li>\n<li>SingleBorderWindow，单边框【默认】；</li>\n<li>ThreeDBorderWindow，3D边框；</li>\n<li>ToolBorderWindow，工具箱窗口；</li>\n<li>ResizeMode 是指定大小调节样式，有4个取值：</li>\n<li>NoResize，不可调节，同时没有最大最小按钮；</li>\n<li>CanMinimize，不可调节。但可以最小化；（此时最大化按钮不可用）</li>\n<li>CanResize，可调节【默认】；</li>\n<li>CanResizeWithGrid，可根据网格调节；（窗口右下脚显示可调节网格）</li>\n<li>WindowStartLocation 指定窗口初始位置，有3个取值：</li>\n<li>Manual，手工指定位置，表示可以通过设置其Top、Left属性值来决定窗口的初始位置；</li>\n<li>CenterScreen，屏幕中央；</li>\n<li>CenterOwner，父窗体中央；<blockquote>\n<p>另外：</p>\n</blockquote>\n</li>\n<li>MaxWidth、MinWidth、MaxHeight、MinHeight ：表示窗口最大宽度、最小宽度、最大高度、最小高度。可以通过得到和更改这些属性值，来获取和改变窗口的大小和长宽范围。</li>\n<li>TitlebarHeight&#x3D;”45”          &#x2F;&#x2F;修改窗体titlebar高度；</li>\n<li>AllowsTransparency：获取或设置一个值，该值指示窗口的工作区是否支持透明；</li>\n</ul>","more":"<p><strong>2.设置窗体无边框：</strong><br>     设置 WindowStyle&#x3D;”None”、  AllowsTransparency&#x3D;”True” 即可。<br>     <em>如下</em>：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">x:Class</span>=<span class=\"string\">&quot;WpfApplication1.MainWindow&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:x</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Title</span>=<span class=\"string\">&quot;MainWindow&quot;</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;350&quot;</span> <span class=\"attr\">Width</span>=<span class=\"string\">&quot;525&quot;</span>   </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">WindowStyle</span>=<span class=\"string\">&quot;None&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">AllowsTransparency</span>=<span class=\"string\">&quot;True&quot;</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span>  </span><br></pre></td></tr></table></figure>\n\n<p><strong>3.窗口拖放：</strong></p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Window_MouseLeftButtonDown</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, MouseButtonEventArgs e</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.DragMove();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><em>调用：</em></p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.MouseLeftButtonDown += <span class=\"built_in\">delegate</span> &#123; DragMove(); &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>或：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MouseDown=<span class=\"string\">&quot;Window_MouseDown&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Window_MouseDown</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, MouseButtonEventArgs e</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (e.LeftButton == MouseButtonState.Pressed)&#123;</span><br><span class=\"line\">        DragMove();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>4.自定义窗体最大化、最小化、关闭</strong><br>如下： </p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">btn_min_Click</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, RoutedEventArgs e</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.WindowState = WindowState.Minimized;     </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">btn_max_Click</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, RoutedEventArgs e</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.WindowState == WindowState.Maximized)&#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">this</span>.WindowState = WindowState.Normal; <span class=\"comment\">//还原 </span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">this</span>.WindowState = WindowState.Maximized;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">btn_close_Click</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, RoutedEventArgs e</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.Close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>5.窗口阴影：</strong>(WPF4.5)</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">x:Class</span>=<span class=\"string\">&quot;WPFTest.MainWindow&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:x</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Title</span>=<span class=\"string\">&quot;MainWindow&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Width</span>=<span class=\"string\">&quot;525&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Height</span>=<span class=\"string\">&quot;350&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">WindowChrome.WindowChrome</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">WindowChrome</span> <span class=\"attr\">CaptionHeight</span>=<span class=\"string\">&quot;30&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                      <span class=\"attr\">CornerRadius</span>=<span class=\"string\">&quot;0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                      <span class=\"attr\">GlassFrameThickness</span>=<span class=\"string\">&quot;1&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                      <span class=\"attr\">NonClientFrameEdges</span>=<span class=\"string\">&quot;None&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                      <span class=\"attr\">ResizeBorderThickness</span>=<span class=\"string\">&quot;5&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                      <span class=\"attr\">UseAeroCaptionButtons</span>=<span class=\"string\">&quot;False&quot;</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;/<span class=\"name\">WindowChrome</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"tooltip\"><a href=\"#tooltip\" class=\"headerlink\" title=\"tooltip\"></a>tooltip</h3><p>给某个空间增加tooltip显示详细信息:</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Tip_MouseMove</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, MouseEventArgs e</span>)</span>&#123;</span><br><span class=\"line\">    ListViewItem listitem = (sender <span class=\"keyword\">as</span> Image).TryFindParent&lt;ListViewItem&gt;();</span><br><span class=\"line\">    FDObject item = (FDObject)listitem.DataContext;           </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item != <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        (sender <span class=\"keyword\">as</span> Image).ToolTip = item.path;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>直接用control.Tooltip&#x3D;text;   在鼠标移入事件中确定</p>\n<h3 id=\"System-Drawing-Image对象\"><a href=\"#System-Drawing-Image对象\" class=\"headerlink\" title=\"System.Drawing.Image对象\"></a>System.Drawing.Image对象</h3><p><strong>System.Drawing.Image 和 System.Windows.Media.ImageSource 之间转换</strong><br><strong>例：</strong></p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MemoryStream ms = <span class=\"keyword\">new</span> MemoryStream ();</span><br><span class=\"line\"><span class=\"keyword\">var</span> bitmap = <span class=\"keyword\">new</span> BitmapImage();</span><br><span class=\"line\">bitmap.BeginInit();</span><br><span class=\"line\">userImage.Save (ms,System.Drawing.Imaging. ImageFormat.Bmp);</span><br><span class=\"line\">ms.Seek(<span class=\"number\">0</span>, SeekOrigin.Begin);</span><br><span class=\"line\">bitmap.StreamSource = ms;</span><br><span class=\"line\">bitmap.EndInit();</span><br><span class=\"line\">emplImage.Source = bitmap;</span><br><span class=\"line\"><span class=\"keyword\">return</span> emplImage;</span><br></pre></td></tr></table></figure>\n<h3 id=\"旋转动画：\"><a href=\"#旋转动画：\" class=\"headerlink\" title=\"旋转动画：\"></a>旋转动画：</h3><p><strong>例：</strong></p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Button_Click</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, RoutedEventArgs e</span>)</span>&#123;</span><br><span class=\"line\">    RotateTransform a = <span class=\"keyword\">new</span> RotateTransform();</span><br><span class=\"line\">    Refresh.RenderTransform = a;</span><br><span class=\"line\">    Refresh.RenderTransformOrigin = <span class=\"keyword\">new</span> Point(<span class=\"number\">0.5</span>, <span class=\"number\">0.5</span>);</span><br><span class=\"line\">    DoubleAnimation myDouble = <span class=\"keyword\">new</span> DoubleAnimation(<span class=\"number\">0</span>, <span class=\"number\">360</span>, <span class=\"keyword\">new</span> Duration(TimeSpan.FromSeconds(<span class=\"number\">1</span>)));</span><br><span class=\"line\">    Storyboard story = <span class=\"keyword\">new</span> Storyboard();</span><br><span class=\"line\">    myDouble.RepeatBehavior = RepeatBehavior.Forever;</span><br><span class=\"line\">    story.Children.Add(myDouble);</span><br><span class=\"line\">    Storyboard.SetTarget(myDouble, Refresh);</span><br><span class=\"line\">    Storyboard.SetTargetProperty(myDouble, <span class=\"keyword\">new</span> PropertyPath(<span class=\"string\">&quot;RenderTransform.Angle&quot;</span>));</span><br><span class=\"line\">    story.Begin();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">&quot;Refresh&quot;</span>  <span class=\"attr\">VerticalAlignment</span>=<span class=\"string\">&quot;Center&quot;</span> <span class=\"attr\">HorizontalAlignment</span>=<span class=\"string\">&quot;Center&quot;</span>    <span class=\"attr\">Text</span>=<span class=\"string\">&quot;<span class=\"symbol\">&amp;#xe712;</span>&quot;</span>   /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">VerticalAlignment</span>=<span class=\"string\">&quot;Bottom&quot;</span> <span class=\"attr\">HorizontalAlignment</span>=<span class=\"string\">&quot;Center&quot;</span> <span class=\"attr\">Width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;50&quot;</span> <span class=\"attr\">Click</span>=<span class=\"string\">&quot;Button_Click&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>"},{"title":"my first blog","date":"2017-03-02T08:40:04.000Z","_content":"\n博客由hexo+github搭建，遵循markdown语法来编辑博客，网上教程很多，比较简单。\n博客内容来自于印象笔记，从我的小本本上选一些搬出来，(⊙v⊙)嗯！\n\n","source":"_posts/my-first-blog.md","raw":"---\ntitle: my first blog\ndate: 2017-03-02 16:40:04\ncategories: Others\n---\n\n博客由hexo+github搭建，遵循markdown语法来编辑博客，网上教程很多，比较简单。\n博客内容来自于印象笔记，从我的小本本上选一些搬出来，(⊙v⊙)嗯！\n\n","slug":"my-first-blog","published":1,"updated":"2021-04-17T14:42:56.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq18rrw60006vf4kbkqj51fw","content":"<p>博客由hexo+github搭建，遵循markdown语法来编辑博客，网上教程很多，比较简单。<br>博客内容来自于印象笔记，从我的小本本上选一些搬出来，(⊙v⊙)嗯！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>博客由hexo+github搭建，遵循markdown语法来编辑博客，网上教程很多，比较简单。<br>博客内容来自于印象笔记，从我的小本本上选一些搬出来，(⊙v⊙)嗯！</p>\n"},{"title":"从零到gulp","date":"2017-03-16T09:13:27.000Z","_content":"\n本菜刚开始写前端页面，目录是这样的，js放一起，html放一起：\n<img src=\"../../../../assets/img/3-16-1.png\"   align=center />\n然后，我开始学nwjs啦，多了一个package.json文件（plugins打算用来放插件，是空的；.log文件打算用node的file模块写入日志），之后本菜默默开始写登录小窗，菜单，托盘，然后...写完demo明白自己很菜开始好好学js。\n<img src=\"../../../../assets/img/3-16-2.png\"   align=center />\n\n<!--more-->\n\n开始刷书，刷博客，刷代码，看小伙伴们的代码...于是我开始写简单页面啦，开始用jquery（获取和操作DOM元素，写ajax请求），angularjs，最初目录是这样：\n<img src=\"../../../../assets/img/3-16-3.png\"   align=center />\n开始安装node，利用npm管理模块，学着小伙伴用webpack，一个入口index.js文件，功能分开写再打包成一个js文件；装fis3，更改代码可以自动刷新页面，目录变成这样：\n<img src=\"../../../../assets/img/3-16-4.png\"   align=center />\n开始好好学angularjs，路由，数据绑定，指令，师傅组装的ui组件...发现自己真的菜，好多知识要学，嗯！舍弃fis3（文件多了，release变慢，-wL要等好久），用http-server，目录变成这样：\n<img src=\"../../../../assets/img/3-16-5.png\"   align=center />\n然后，发现gulp,新大陆！添加一个gulpfile.js文件，用gulp-connect创建web服务器；可以watch页面，gulp-livereload自动刷新；嵌入原来的webpack.config.js还能继续打包；只用运行一个gulp，开心！\n\n某一天，我发现我的cpu原来是这样：\n<img src=\"../../../../assets/img/3-16-6.png\"   align=center />\n开了gulp之后，变成这样：\n<img src=\"../../../../assets/img/3-16-7.png\"   align=center />\n\n.........\n\n\n我想这一定是我的错！\n\n.........\n\n\n\n最后发现用gulp来watch时一定不要加很多文件啊！只watch经常改变的。不然电脑变得超级卡，还以为自己一脚把主机踢坏了(⊙v⊙).....就酱！\n\n感谢师傅！\n\n----2017-4-30 更新---- \ngulp + webpack2，附上gulpfile.js的代码：\n``` javascript\nvar gulp = require('gulp'),\n  gutil = require('gulp-util'),\n  clean = require('gulp-clean'),\n  concat = require('gulp-concat'),\n  cssmin = require('gulp-cssmin'),\n  connect = require('gulp-connect'),\n  livereload = require('gulp-livereload'),\n  webpack = require('webpack'),\n  webpackConfig = require('./webpack.config.js');\n\n//创建连接\ngulp.task('connect',function(){\n  connect.server({\n    root : \"./\",\n    ip : \"192.168.1.77\",\n    port : 8080,\n    livereload : true\n  });\n});\n\n//图片和iconfont到拷贝到assets\ngulp.task('copy:images', function (done) {\n  gulp.src(['./admin/static/img/**/*']).pipe(gulp.dest('./admin/assets/img'))\n    .on('end', done);\n  gulp.src(['./admin/static/font/*']).pipe(gulp.dest('./admin/assets/font'))\n    .on('end', done);\n});\n\n//合并压缩css到assets\ngulp.task('min:css', function (done) {\n  gulp.src(['./admin/static/css/*.css'])\n    .pipe(concat('./style.min.css'))\n    .pipe(cssmin())\n    .pipe(gulp.dest('./admin/assets/css/'))\n    .on('end', done);\n});\n\n//监听文件变化\ngulp.task('watch', function(done){\n  livereload.listen();\n  gulp.watch('./admin/assets/**/*',['build-admin'],function(file){\n    livereload.changed(file.path);\n  }).on('end', done);\n});\n\n//webpack打包\nvar myDevConfig = Object.create(webpackConfig);\nvar devCompiler = webpack(myDevConfig);\ngulp.task(\"build-admin\",function(callback){\n  devCompiler.run(function(err, stats) {\n        if(err) throw new gutil.PluginError(\"webpack:build-admin\", err);\n        gutil.log(\"[webpack:build-admin]\", stats.toString({\n          colors: true\n        }));\n        callback();\n    });\n});\n\n//build之前clean\ngulp.task('clean', function(done){\n  gulp.src(['admin/assets'])\n    .pipe(clean())\n    .on('end', done);\n});\n\ngulp.task('default',['connect','copy:images','min:css','watch','build-admin']);\n``` ","source":"_posts/从零到gulp.md","raw":"---\ntitle: 从零到gulp\ndate: 2017-03-16 17:13:27\ncategories: Font-end\n---\n\n本菜刚开始写前端页面，目录是这样的，js放一起，html放一起：\n<img src=\"../../../../assets/img/3-16-1.png\"   align=center />\n然后，我开始学nwjs啦，多了一个package.json文件（plugins打算用来放插件，是空的；.log文件打算用node的file模块写入日志），之后本菜默默开始写登录小窗，菜单，托盘，然后...写完demo明白自己很菜开始好好学js。\n<img src=\"../../../../assets/img/3-16-2.png\"   align=center />\n\n<!--more-->\n\n开始刷书，刷博客，刷代码，看小伙伴们的代码...于是我开始写简单页面啦，开始用jquery（获取和操作DOM元素，写ajax请求），angularjs，最初目录是这样：\n<img src=\"../../../../assets/img/3-16-3.png\"   align=center />\n开始安装node，利用npm管理模块，学着小伙伴用webpack，一个入口index.js文件，功能分开写再打包成一个js文件；装fis3，更改代码可以自动刷新页面，目录变成这样：\n<img src=\"../../../../assets/img/3-16-4.png\"   align=center />\n开始好好学angularjs，路由，数据绑定，指令，师傅组装的ui组件...发现自己真的菜，好多知识要学，嗯！舍弃fis3（文件多了，release变慢，-wL要等好久），用http-server，目录变成这样：\n<img src=\"../../../../assets/img/3-16-5.png\"   align=center />\n然后，发现gulp,新大陆！添加一个gulpfile.js文件，用gulp-connect创建web服务器；可以watch页面，gulp-livereload自动刷新；嵌入原来的webpack.config.js还能继续打包；只用运行一个gulp，开心！\n\n某一天，我发现我的cpu原来是这样：\n<img src=\"../../../../assets/img/3-16-6.png\"   align=center />\n开了gulp之后，变成这样：\n<img src=\"../../../../assets/img/3-16-7.png\"   align=center />\n\n.........\n\n\n我想这一定是我的错！\n\n.........\n\n\n\n最后发现用gulp来watch时一定不要加很多文件啊！只watch经常改变的。不然电脑变得超级卡，还以为自己一脚把主机踢坏了(⊙v⊙).....就酱！\n\n感谢师傅！\n\n----2017-4-30 更新---- \ngulp + webpack2，附上gulpfile.js的代码：\n``` javascript\nvar gulp = require('gulp'),\n  gutil = require('gulp-util'),\n  clean = require('gulp-clean'),\n  concat = require('gulp-concat'),\n  cssmin = require('gulp-cssmin'),\n  connect = require('gulp-connect'),\n  livereload = require('gulp-livereload'),\n  webpack = require('webpack'),\n  webpackConfig = require('./webpack.config.js');\n\n//创建连接\ngulp.task('connect',function(){\n  connect.server({\n    root : \"./\",\n    ip : \"192.168.1.77\",\n    port : 8080,\n    livereload : true\n  });\n});\n\n//图片和iconfont到拷贝到assets\ngulp.task('copy:images', function (done) {\n  gulp.src(['./admin/static/img/**/*']).pipe(gulp.dest('./admin/assets/img'))\n    .on('end', done);\n  gulp.src(['./admin/static/font/*']).pipe(gulp.dest('./admin/assets/font'))\n    .on('end', done);\n});\n\n//合并压缩css到assets\ngulp.task('min:css', function (done) {\n  gulp.src(['./admin/static/css/*.css'])\n    .pipe(concat('./style.min.css'))\n    .pipe(cssmin())\n    .pipe(gulp.dest('./admin/assets/css/'))\n    .on('end', done);\n});\n\n//监听文件变化\ngulp.task('watch', function(done){\n  livereload.listen();\n  gulp.watch('./admin/assets/**/*',['build-admin'],function(file){\n    livereload.changed(file.path);\n  }).on('end', done);\n});\n\n//webpack打包\nvar myDevConfig = Object.create(webpackConfig);\nvar devCompiler = webpack(myDevConfig);\ngulp.task(\"build-admin\",function(callback){\n  devCompiler.run(function(err, stats) {\n        if(err) throw new gutil.PluginError(\"webpack:build-admin\", err);\n        gutil.log(\"[webpack:build-admin]\", stats.toString({\n          colors: true\n        }));\n        callback();\n    });\n});\n\n//build之前clean\ngulp.task('clean', function(done){\n  gulp.src(['admin/assets'])\n    .pipe(clean())\n    .on('end', done);\n});\n\ngulp.task('default',['connect','copy:images','min:css','watch','build-admin']);\n``` ","slug":"从零到gulp","published":1,"updated":"2021-04-17T14:42:56.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq18rrw70008vf4kesd63dq0","content":"<p>本菜刚开始写前端页面，目录是这样的，js放一起，html放一起：<br><img src=\"../../../../assets/img/3-16-1.png\"   align=center /><br>然后，我开始学nwjs啦，多了一个package.json文件（plugins打算用来放插件，是空的；.log文件打算用node的file模块写入日志），之后本菜默默开始写登录小窗，菜单，托盘，然后…写完demo明白自己很菜开始好好学js。<br><img src=\"../../../../assets/img/3-16-2.png\"   align=center /></p>\n<span id=\"more\"></span>\n\n<p>开始刷书，刷博客，刷代码，看小伙伴们的代码…于是我开始写简单页面啦，开始用jquery（获取和操作DOM元素，写ajax请求），angularjs，最初目录是这样：<br><img src=\"../../../../assets/img/3-16-3.png\"   align=center /><br>开始安装node，利用npm管理模块，学着小伙伴用webpack，一个入口index.js文件，功能分开写再打包成一个js文件；装fis3，更改代码可以自动刷新页面，目录变成这样：<br><img src=\"../../../../assets/img/3-16-4.png\"   align=center /><br>开始好好学angularjs，路由，数据绑定，指令，师傅组装的ui组件…发现自己真的菜，好多知识要学，嗯！舍弃fis3（文件多了，release变慢，-wL要等好久），用http-server，目录变成这样：<br><img src=\"../../../../assets/img/3-16-5.png\"   align=center /><br>然后，发现gulp,新大陆！添加一个gulpfile.js文件，用gulp-connect创建web服务器；可以watch页面，gulp-livereload自动刷新；嵌入原来的webpack.config.js还能继续打包；只用运行一个gulp，开心！</p>\n<p>某一天，我发现我的cpu原来是这样：<br><img src=\"../../../../assets/img/3-16-6.png\"   align=center /><br>开了gulp之后，变成这样：<br><img src=\"../../../../assets/img/3-16-7.png\"   align=center /></p>\n<p>………</p>\n<p>我想这一定是我的错！</p>\n<p>………</p>\n<p>最后发现用gulp来watch时一定不要加很多文件啊！只watch经常改变的。不然电脑变得超级卡，还以为自己一脚把主机踢坏了(⊙v⊙)…..就酱！</p>\n<p>感谢师傅！</p>\n<p>—-2017-4-30 更新—-<br>gulp + webpack2，附上gulpfile.js的代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp&#x27;</span>),</span><br><span class=\"line\">  gutil = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-util&#x27;</span>),</span><br><span class=\"line\">  clean = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-clean&#x27;</span>),</span><br><span class=\"line\">  concat = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-concat&#x27;</span>),</span><br><span class=\"line\">  cssmin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-cssmin&#x27;</span>),</span><br><span class=\"line\">  connect = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-connect&#x27;</span>),</span><br><span class=\"line\">  livereload = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-livereload&#x27;</span>),</span><br><span class=\"line\">  webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>),</span><br><span class=\"line\">  webpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.config.js&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建连接</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;connect&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  connect.<span class=\"title function_\">server</span>(&#123;</span><br><span class=\"line\">    root : <span class=\"string\">&quot;./&quot;</span>,</span><br><span class=\"line\">    ip : <span class=\"string\">&quot;192.168.1.77&quot;</span>,</span><br><span class=\"line\">    port : <span class=\"number\">8080</span>,</span><br><span class=\"line\">    livereload : <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//图片和iconfont到拷贝到assets</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;copy:images&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">done</span>) &#123;</span><br><span class=\"line\">  gulp.<span class=\"title function_\">src</span>([<span class=\"string\">&#x27;./admin/static/img/**/*&#x27;</span>]).<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;./admin/assets/img&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, done);</span><br><span class=\"line\">  gulp.<span class=\"title function_\">src</span>([<span class=\"string\">&#x27;./admin/static/font/*&#x27;</span>]).<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;./admin/assets/font&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, done);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//合并压缩css到assets</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;min:css&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">done</span>) &#123;</span><br><span class=\"line\">  gulp.<span class=\"title function_\">src</span>([<span class=\"string\">&#x27;./admin/static/css/*.css&#x27;</span>])</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">concat</span>(<span class=\"string\">&#x27;./style.min.css&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">cssmin</span>())</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;./admin/assets/css/&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, done);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//监听文件变化</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;watch&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">done</span>)&#123;</span><br><span class=\"line\">  livereload.<span class=\"title function_\">listen</span>();</span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>(<span class=\"string\">&#x27;./admin/assets/**/*&#x27;</span>,[<span class=\"string\">&#x27;build-admin&#x27;</span>],<span class=\"keyword\">function</span>(<span class=\"params\">file</span>)&#123;</span><br><span class=\"line\">    livereload.<span class=\"title function_\">changed</span>(file.<span class=\"property\">path</span>);</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, done);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//webpack打包</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> myDevConfig = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(webpackConfig);</span><br><span class=\"line\"><span class=\"keyword\">var</span> devCompiler = <span class=\"title function_\">webpack</span>(myDevConfig);</span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&quot;build-admin&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">callback</span>)&#123;</span><br><span class=\"line\">  devCompiler.<span class=\"title function_\">run</span>(<span class=\"keyword\">function</span>(<span class=\"params\">err, stats</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(err) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> gutil.<span class=\"title class_\">PluginError</span>(<span class=\"string\">&quot;webpack:build-admin&quot;</span>, err);</span><br><span class=\"line\">        gutil.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;[webpack:build-admin]&quot;</span>, stats.<span class=\"title function_\">toString</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">colors</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;));</span><br><span class=\"line\">        <span class=\"title function_\">callback</span>();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//build之前clean</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;clean&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">done</span>)&#123;</span><br><span class=\"line\">  gulp.<span class=\"title function_\">src</span>([<span class=\"string\">&#x27;admin/assets&#x27;</span>])</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">clean</span>())</span><br><span class=\"line\">    .<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, done);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;default&#x27;</span>,[<span class=\"string\">&#x27;connect&#x27;</span>,<span class=\"string\">&#x27;copy:images&#x27;</span>,<span class=\"string\">&#x27;min:css&#x27;</span>,<span class=\"string\">&#x27;watch&#x27;</span>,<span class=\"string\">&#x27;build-admin&#x27;</span>]);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>本菜刚开始写前端页面，目录是这样的，js放一起，html放一起：<br><img src=\"../../../../assets/img/3-16-1.png\"   align=center /><br>然后，我开始学nwjs啦，多了一个package.json文件（plugins打算用来放插件，是空的；.log文件打算用node的file模块写入日志），之后本菜默默开始写登录小窗，菜单，托盘，然后…写完demo明白自己很菜开始好好学js。<br><img src=\"../../../../assets/img/3-16-2.png\"   align=center /></p>","more":"<p>开始刷书，刷博客，刷代码，看小伙伴们的代码…于是我开始写简单页面啦，开始用jquery（获取和操作DOM元素，写ajax请求），angularjs，最初目录是这样：<br><img src=\"../../../../assets/img/3-16-3.png\"   align=center /><br>开始安装node，利用npm管理模块，学着小伙伴用webpack，一个入口index.js文件，功能分开写再打包成一个js文件；装fis3，更改代码可以自动刷新页面，目录变成这样：<br><img src=\"../../../../assets/img/3-16-4.png\"   align=center /><br>开始好好学angularjs，路由，数据绑定，指令，师傅组装的ui组件…发现自己真的菜，好多知识要学，嗯！舍弃fis3（文件多了，release变慢，-wL要等好久），用http-server，目录变成这样：<br><img src=\"../../../../assets/img/3-16-5.png\"   align=center /><br>然后，发现gulp,新大陆！添加一个gulpfile.js文件，用gulp-connect创建web服务器；可以watch页面，gulp-livereload自动刷新；嵌入原来的webpack.config.js还能继续打包；只用运行一个gulp，开心！</p>\n<p>某一天，我发现我的cpu原来是这样：<br><img src=\"../../../../assets/img/3-16-6.png\"   align=center /><br>开了gulp之后，变成这样：<br><img src=\"../../../../assets/img/3-16-7.png\"   align=center /></p>\n<p>………</p>\n<p>我想这一定是我的错！</p>\n<p>………</p>\n<p>最后发现用gulp来watch时一定不要加很多文件啊！只watch经常改变的。不然电脑变得超级卡，还以为自己一脚把主机踢坏了(⊙v⊙)…..就酱！</p>\n<p>感谢师傅！</p>\n<p>—-2017-4-30 更新—-<br>gulp + webpack2，附上gulpfile.js的代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp&#x27;</span>),</span><br><span class=\"line\">  gutil = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-util&#x27;</span>),</span><br><span class=\"line\">  clean = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-clean&#x27;</span>),</span><br><span class=\"line\">  concat = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-concat&#x27;</span>),</span><br><span class=\"line\">  cssmin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-cssmin&#x27;</span>),</span><br><span class=\"line\">  connect = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-connect&#x27;</span>),</span><br><span class=\"line\">  livereload = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-livereload&#x27;</span>),</span><br><span class=\"line\">  webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>),</span><br><span class=\"line\">  webpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.config.js&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建连接</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;connect&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  connect.<span class=\"title function_\">server</span>(&#123;</span><br><span class=\"line\">    root : <span class=\"string\">&quot;./&quot;</span>,</span><br><span class=\"line\">    ip : <span class=\"string\">&quot;192.168.1.77&quot;</span>,</span><br><span class=\"line\">    port : <span class=\"number\">8080</span>,</span><br><span class=\"line\">    livereload : <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//图片和iconfont到拷贝到assets</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;copy:images&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">done</span>) &#123;</span><br><span class=\"line\">  gulp.<span class=\"title function_\">src</span>([<span class=\"string\">&#x27;./admin/static/img/**/*&#x27;</span>]).<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;./admin/assets/img&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, done);</span><br><span class=\"line\">  gulp.<span class=\"title function_\">src</span>([<span class=\"string\">&#x27;./admin/static/font/*&#x27;</span>]).<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;./admin/assets/font&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, done);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//合并压缩css到assets</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;min:css&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">done</span>) &#123;</span><br><span class=\"line\">  gulp.<span class=\"title function_\">src</span>([<span class=\"string\">&#x27;./admin/static/css/*.css&#x27;</span>])</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">concat</span>(<span class=\"string\">&#x27;./style.min.css&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">cssmin</span>())</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;./admin/assets/css/&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, done);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//监听文件变化</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;watch&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">done</span>)&#123;</span><br><span class=\"line\">  livereload.<span class=\"title function_\">listen</span>();</span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>(<span class=\"string\">&#x27;./admin/assets/**/*&#x27;</span>,[<span class=\"string\">&#x27;build-admin&#x27;</span>],<span class=\"keyword\">function</span>(<span class=\"params\">file</span>)&#123;</span><br><span class=\"line\">    livereload.<span class=\"title function_\">changed</span>(file.<span class=\"property\">path</span>);</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, done);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//webpack打包</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> myDevConfig = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(webpackConfig);</span><br><span class=\"line\"><span class=\"keyword\">var</span> devCompiler = <span class=\"title function_\">webpack</span>(myDevConfig);</span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&quot;build-admin&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">callback</span>)&#123;</span><br><span class=\"line\">  devCompiler.<span class=\"title function_\">run</span>(<span class=\"keyword\">function</span>(<span class=\"params\">err, stats</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(err) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> gutil.<span class=\"title class_\">PluginError</span>(<span class=\"string\">&quot;webpack:build-admin&quot;</span>, err);</span><br><span class=\"line\">        gutil.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;[webpack:build-admin]&quot;</span>, stats.<span class=\"title function_\">toString</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">colors</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;));</span><br><span class=\"line\">        <span class=\"title function_\">callback</span>();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//build之前clean</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;clean&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">done</span>)&#123;</span><br><span class=\"line\">  gulp.<span class=\"title function_\">src</span>([<span class=\"string\">&#x27;admin/assets&#x27;</span>])</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">clean</span>())</span><br><span class=\"line\">    .<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, done);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;default&#x27;</span>,[<span class=\"string\">&#x27;connect&#x27;</span>,<span class=\"string\">&#x27;copy:images&#x27;</span>,<span class=\"string\">&#x27;min:css&#x27;</span>,<span class=\"string\">&#x27;watch&#x27;</span>,<span class=\"string\">&#x27;build-admin&#x27;</span>]);</span><br></pre></td></tr></table></figure>"},{"title":"去掉jQuery","date":"2017-04-01T07:59:49.000Z","_content":"一直在Angular中混用jQuery，用来操作DOM，因为它(wo)很(tai)方(nian)便(qing)，最近将jQuery从项目中移除了，将所有涉及到jQuery操作换为用angular提供的api或原生js来实现......虽然jQuery压缩过才100kb左右。\n1.Angular内置jqLite，封装了部分操作DOM的api，使用angular.element(ele)相当于jQuery中的$,具体使用见官方[文档](https://code.angularjs.org/1.5.4/docs/api/ng/function/angular.element)。\n因此我们所使用的jQuery选择器，例如：\n``` javascript\n$(\"#empl-name\").val();\n``` \n可以换成：\n``` javascript\nangular.element(document.querySelector(\"#empl-name\"));\n``` \n使用document.querySelector 的原因官方文档中有说明:\n\n<img src=\"../../../../assets/img/4-1-1.png\"   align=center />\n\n<!--more-->\n\n2.替换掉依赖jQuery的插件。\n例如，使用的jQuery的tooltip组件插件，现在换成ui bootstrap中的tooltip组件。\n原来引入jQuery tooltip插件代码后，封装成指令：\n``` javascript\n\"use strict\";\nvar moduleName=\"kass.widget.tooltip\";\nangular.module(moduleName,[])\n.directive(\"tooltip\",[function(){\n\treturn{\n\t\trestrict : \"A\",\n\t\tlink : function(scope, element, attrs){//element:指令标签对象     attrs:指令属性\n\t\t\tvar opts ={\n\t\t\t\t//将带有tooltip属性的\"Target element\"传给插件创建tooltip\n\t\t\t\tformatter: function(scope){\n\t\t\t\t\treturn scope.$target.attr(\"tooltip\");//$target是利用$(this)封装的jquery对象\n\t\t\t\t},\n\t\t\t\t//插件提供的tooltip属性值direction与指令属性tooltipDirection\n\t\t\t\tdirection : attrs.tooltipDirection ? attrs.tooltipDirection : \"bottom\"\n\t\t\t};\n\t\t\t//插件提供的tipper方法设置tooltip属性值\n\t\t\telement.tipper(opts);\n\t\t\telement.one(\"$destroy\",function(){\n\t\t\t\telement.tipper(\"destroy\");\n\t\t\t});\n\t\t}\n\t}\n}]);\nmodule.exports=moduleName;\n``` \n引入ui bootstrap 中的tooptip部分：\n\n``` javascript\nrequire(\"./position\");//ui bootstrap的position部分\nrequire(\"./stackedMap\");//ui bootstrap的stackedMap部分\nangular.module('ui.bootstrap.tooltip', ['ui.bootstrap.position', 'ui.bootstrap.stackedMap',\"uib/template/tooltip/tooltip-html-popup.html\",\"uib/template/tooltip/tooltip-popup.html\",\"uib/template/tooltip/tooltip-template-popup.html\"])     \n.provider('$uibTooltip', function(){........})\n......\n.directive('uibTooltipTemplatePopup', function() {\n  return {\n    restrict: 'A',\n    scope: { contentExp: '&', originScope: '&' },\n    templateUrl: 'uib/template/tooltip/tooltip-template-popup.html'\n  };\n});\n......\nangular.module(\"uib/template/tooltip/tooltip-popup.html\", []).run(......);\n......\nangular.module('ui.bootstrap.tooltip').run(......);\n``` \n发现github上的一个封装angular tooltip的[项目](https://github.com/720kb/angular-tooltips),使用方便有demo,⊙o⊙......\n\n3.jQuery的动画部分。\n一些动画可以直接使用css的animation、transition属性进行设置，还可以使用angular提供的动画。\n例如jQuery一个简单的改变位置动画，需要在动画完成后移除这个指令组件：\n\n``` javascript\n$(\".side-modal\").animate({right:'-100%'},300,function(){\n\t$scope.$apply(function(){\n\t\t$scope.onRemove();\n\t});\n});\n``` \n使用angular的动画，要引入angular-animate.js文件，注入ngAnimate：\n\n``` javascript\n\"use strict\";\nrequire(\"./angular-animte-min\");\nvar moduleName = \"animateTest\";\nangular.module(moduleName,[\"ngAnimate\"])\n.directive(myTest,[\"$animate\",function(\"$animate\"){\n    return{\n        restrict : \"AE\",\n        replace : false,\n        scope : {\n            onRemove : \"&\"\n        },\n        template : require(\"html!../template/to/mytest.html\"),\n        controller : [\"$scope\",function($scope){\n            ......\n            var slideBox = angular.element(document.querySelector(\".side-modal\"));\n            $animate.addClass(slideBox,'set-right',function(){\n                $scope.onRemove();//callback,动画完成后移除指令\n            });\n            ......\n        }],\n        link:function(scope,element,attrs){......}\n    }\n}]);\nmodule.exports=moduleName;\n``` \n4.其他部分可以参考github上的一个项目：[You Don't Need jQuery]( https://github.com/oneuijs/You-Dont-Need-jQuery)。\n\n\n************\n\n<font color=red>April Fool's Day </font>....⊙o⊙....","source":"_posts/去掉jQuery.md","raw":"---\ntitle: 去掉jQuery\ndate: 2017-04-01 15:59:49\ncategories: Font-end\ntags: JavaScript\n---\n一直在Angular中混用jQuery，用来操作DOM，因为它(wo)很(tai)方(nian)便(qing)，最近将jQuery从项目中移除了，将所有涉及到jQuery操作换为用angular提供的api或原生js来实现......虽然jQuery压缩过才100kb左右。\n1.Angular内置jqLite，封装了部分操作DOM的api，使用angular.element(ele)相当于jQuery中的$,具体使用见官方[文档](https://code.angularjs.org/1.5.4/docs/api/ng/function/angular.element)。\n因此我们所使用的jQuery选择器，例如：\n``` javascript\n$(\"#empl-name\").val();\n``` \n可以换成：\n``` javascript\nangular.element(document.querySelector(\"#empl-name\"));\n``` \n使用document.querySelector 的原因官方文档中有说明:\n\n<img src=\"../../../../assets/img/4-1-1.png\"   align=center />\n\n<!--more-->\n\n2.替换掉依赖jQuery的插件。\n例如，使用的jQuery的tooltip组件插件，现在换成ui bootstrap中的tooltip组件。\n原来引入jQuery tooltip插件代码后，封装成指令：\n``` javascript\n\"use strict\";\nvar moduleName=\"kass.widget.tooltip\";\nangular.module(moduleName,[])\n.directive(\"tooltip\",[function(){\n\treturn{\n\t\trestrict : \"A\",\n\t\tlink : function(scope, element, attrs){//element:指令标签对象     attrs:指令属性\n\t\t\tvar opts ={\n\t\t\t\t//将带有tooltip属性的\"Target element\"传给插件创建tooltip\n\t\t\t\tformatter: function(scope){\n\t\t\t\t\treturn scope.$target.attr(\"tooltip\");//$target是利用$(this)封装的jquery对象\n\t\t\t\t},\n\t\t\t\t//插件提供的tooltip属性值direction与指令属性tooltipDirection\n\t\t\t\tdirection : attrs.tooltipDirection ? attrs.tooltipDirection : \"bottom\"\n\t\t\t};\n\t\t\t//插件提供的tipper方法设置tooltip属性值\n\t\t\telement.tipper(opts);\n\t\t\telement.one(\"$destroy\",function(){\n\t\t\t\telement.tipper(\"destroy\");\n\t\t\t});\n\t\t}\n\t}\n}]);\nmodule.exports=moduleName;\n``` \n引入ui bootstrap 中的tooptip部分：\n\n``` javascript\nrequire(\"./position\");//ui bootstrap的position部分\nrequire(\"./stackedMap\");//ui bootstrap的stackedMap部分\nangular.module('ui.bootstrap.tooltip', ['ui.bootstrap.position', 'ui.bootstrap.stackedMap',\"uib/template/tooltip/tooltip-html-popup.html\",\"uib/template/tooltip/tooltip-popup.html\",\"uib/template/tooltip/tooltip-template-popup.html\"])     \n.provider('$uibTooltip', function(){........})\n......\n.directive('uibTooltipTemplatePopup', function() {\n  return {\n    restrict: 'A',\n    scope: { contentExp: '&', originScope: '&' },\n    templateUrl: 'uib/template/tooltip/tooltip-template-popup.html'\n  };\n});\n......\nangular.module(\"uib/template/tooltip/tooltip-popup.html\", []).run(......);\n......\nangular.module('ui.bootstrap.tooltip').run(......);\n``` \n发现github上的一个封装angular tooltip的[项目](https://github.com/720kb/angular-tooltips),使用方便有demo,⊙o⊙......\n\n3.jQuery的动画部分。\n一些动画可以直接使用css的animation、transition属性进行设置，还可以使用angular提供的动画。\n例如jQuery一个简单的改变位置动画，需要在动画完成后移除这个指令组件：\n\n``` javascript\n$(\".side-modal\").animate({right:'-100%'},300,function(){\n\t$scope.$apply(function(){\n\t\t$scope.onRemove();\n\t});\n});\n``` \n使用angular的动画，要引入angular-animate.js文件，注入ngAnimate：\n\n``` javascript\n\"use strict\";\nrequire(\"./angular-animte-min\");\nvar moduleName = \"animateTest\";\nangular.module(moduleName,[\"ngAnimate\"])\n.directive(myTest,[\"$animate\",function(\"$animate\"){\n    return{\n        restrict : \"AE\",\n        replace : false,\n        scope : {\n            onRemove : \"&\"\n        },\n        template : require(\"html!../template/to/mytest.html\"),\n        controller : [\"$scope\",function($scope){\n            ......\n            var slideBox = angular.element(document.querySelector(\".side-modal\"));\n            $animate.addClass(slideBox,'set-right',function(){\n                $scope.onRemove();//callback,动画完成后移除指令\n            });\n            ......\n        }],\n        link:function(scope,element,attrs){......}\n    }\n}]);\nmodule.exports=moduleName;\n``` \n4.其他部分可以参考github上的一个项目：[You Don't Need jQuery]( https://github.com/oneuijs/You-Dont-Need-jQuery)。\n\n\n************\n\n<font color=red>April Fool's Day </font>....⊙o⊙....","slug":"去掉jQuery","published":1,"updated":"2021-04-17T14:42:56.358Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq18rrw7000bvf4k1w3cabk1","content":"<p>一直在Angular中混用jQuery，用来操作DOM，因为它(wo)很(tai)方(nian)便(qing)，最近将jQuery从项目中移除了，将所有涉及到jQuery操作换为用angular提供的api或原生js来实现……虽然jQuery压缩过才100kb左右。<br>1.Angular内置jqLite，封装了部分操作DOM的api，使用angular.element(ele)相当于jQuery中的$,具体使用见官方<a href=\"https://code.angularjs.org/1.5.4/docs/api/ng/function/angular.element\">文档</a>。<br>因此我们所使用的jQuery选择器，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;#empl-name&quot;</span>).<span class=\"title function_\">val</span>();</span><br></pre></td></tr></table></figure>\n<p>可以换成：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">angular.<span class=\"title function_\">element</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#empl-name&quot;</span>));</span><br></pre></td></tr></table></figure>\n<p>使用document.querySelector 的原因官方文档中有说明:</p>\n<img src=\"../../../../assets/img/4-1-1.png\"   align=center />\n\n<span id=\"more\"></span>\n\n<p>2.替换掉依赖jQuery的插件。<br>例如，使用的jQuery的tooltip组件插件，现在换成ui bootstrap中的tooltip组件。<br>原来引入jQuery tooltip插件代码后，封装成指令：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> moduleName=<span class=\"string\">&quot;kass.widget.tooltip&quot;</span>;</span><br><span class=\"line\">angular.<span class=\"title function_\">module</span>(moduleName,[])</span><br><span class=\"line\">.<span class=\"title function_\">directive</span>(<span class=\"string\">&quot;tooltip&quot;</span>,[<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">\t\trestrict : <span class=\"string\">&quot;A&quot;</span>,</span><br><span class=\"line\">\t\tlink : <span class=\"keyword\">function</span>(<span class=\"params\">scope, element, attrs</span>)&#123;<span class=\"comment\">//element:指令标签对象     attrs:指令属性</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> opts =&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//将带有tooltip属性的&quot;Target element&quot;传给插件创建tooltip</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">formatter</span>: <span class=\"keyword\">function</span>(<span class=\"params\">scope</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> scope.<span class=\"property\">$target</span>.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;tooltip&quot;</span>);<span class=\"comment\">//$target是利用$(this)封装的jquery对象</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//插件提供的tooltip属性值direction与指令属性tooltipDirection</span></span><br><span class=\"line\">\t\t\t\tdirection : attrs.<span class=\"property\">tooltipDirection</span> ? attrs.<span class=\"property\">tooltipDirection</span> : <span class=\"string\">&quot;bottom&quot;</span></span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//插件提供的tipper方法设置tooltip属性值</span></span><br><span class=\"line\">\t\t\telement.<span class=\"title function_\">tipper</span>(opts);</span><br><span class=\"line\">\t\t\telement.<span class=\"title function_\">one</span>(<span class=\"string\">&quot;$destroy&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\telement.<span class=\"title function_\">tipper</span>(<span class=\"string\">&quot;destroy&quot;</span>);</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;]);</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=moduleName;</span><br></pre></td></tr></table></figure>\n<p>引入ui bootstrap 中的tooptip部分：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;./position&quot;</span>);<span class=\"comment\">//ui bootstrap的position部分</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;./stackedMap&quot;</span>);<span class=\"comment\">//ui bootstrap的stackedMap部分</span></span><br><span class=\"line\">angular.<span class=\"title function_\">module</span>(<span class=\"string\">&#x27;ui.bootstrap.tooltip&#x27;</span>, [<span class=\"string\">&#x27;ui.bootstrap.position&#x27;</span>, <span class=\"string\">&#x27;ui.bootstrap.stackedMap&#x27;</span>,<span class=\"string\">&quot;uib/template/tooltip/tooltip-html-popup.html&quot;</span>,<span class=\"string\">&quot;uib/template/tooltip/tooltip-popup.html&quot;</span>,<span class=\"string\">&quot;uib/template/tooltip/tooltip-template-popup.html&quot;</span>])     </span><br><span class=\"line\">.<span class=\"title function_\">provider</span>(<span class=\"string\">&#x27;$uibTooltip&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;........&#125;)</span><br><span class=\"line\">......</span><br><span class=\"line\">.<span class=\"title function_\">directive</span>(<span class=\"string\">&#x27;uibTooltipTemplatePopup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">restrict</span>: <span class=\"string\">&#x27;A&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">scope</span>: &#123; <span class=\"attr\">contentExp</span>: <span class=\"string\">&#x27;&amp;&#x27;</span>, <span class=\"attr\">originScope</span>: <span class=\"string\">&#x27;&amp;&#x27;</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">templateUrl</span>: <span class=\"string\">&#x27;uib/template/tooltip/tooltip-template-popup.html&#x27;</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">......</span><br><span class=\"line\">angular.<span class=\"title function_\">module</span>(<span class=\"string\">&quot;uib/template/tooltip/tooltip-popup.html&quot;</span>, []).<span class=\"title function_\">run</span>(......);</span><br><span class=\"line\">......</span><br><span class=\"line\">angular.<span class=\"title function_\">module</span>(<span class=\"string\">&#x27;ui.bootstrap.tooltip&#x27;</span>).<span class=\"title function_\">run</span>(......);</span><br></pre></td></tr></table></figure>\n<p>发现github上的一个封装angular tooltip的<a href=\"https://github.com/720kb/angular-tooltips\">项目</a>,使用方便有demo,⊙o⊙……</p>\n<p>3.jQuery的动画部分。<br>一些动画可以直接使用css的animation、transition属性进行设置，还可以使用angular提供的动画。<br>例如jQuery一个简单的改变位置动画，需要在动画完成后移除这个指令组件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;.side-modal&quot;</span>).<span class=\"title function_\">animate</span>(&#123;<span class=\"attr\">right</span>:<span class=\"string\">&#x27;-100%&#x27;</span>&#125;,<span class=\"number\">300</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t$scope.$apply(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t$scope.<span class=\"title function_\">onRemove</span>();</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>使用angular的动画，要引入angular-animate.js文件，注入ngAnimate：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;./angular-animte-min&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> moduleName = <span class=\"string\">&quot;animateTest&quot;</span>;</span><br><span class=\"line\">angular.<span class=\"title function_\">module</span>(moduleName,[<span class=\"string\">&quot;ngAnimate&quot;</span>])</span><br><span class=\"line\">.<span class=\"title function_\">directive</span>(myTest,[<span class=\"string\">&quot;$animate&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"><span class=\"string\">&quot;$animate&quot;</span></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">        restrict : <span class=\"string\">&quot;AE&quot;</span>,</span><br><span class=\"line\">        replace : <span class=\"literal\">false</span>,</span><br><span class=\"line\">        scope : &#123;</span><br><span class=\"line\">            onRemove : <span class=\"string\">&quot;&amp;&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        template : <span class=\"built_in\">require</span>(<span class=\"string\">&quot;html!../template/to/mytest.html&quot;</span>),</span><br><span class=\"line\">        controller : [<span class=\"string\">&quot;$scope&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">$scope</span>)&#123;</span><br><span class=\"line\">            ......</span><br><span class=\"line\">            <span class=\"keyword\">var</span> slideBox = angular.<span class=\"title function_\">element</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;.side-modal&quot;</span>));</span><br><span class=\"line\">            $animate.<span class=\"title function_\">addClass</span>(slideBox,<span class=\"string\">&#x27;set-right&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">                $scope.<span class=\"title function_\">onRemove</span>();<span class=\"comment\">//callback,动画完成后移除指令</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            ......</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        <span class=\"attr\">link</span>:<span class=\"keyword\">function</span>(<span class=\"params\">scope,element,attrs</span>)&#123;......&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;]);</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=moduleName;</span><br></pre></td></tr></table></figure>\n<p>4.其他部分可以参考github上的一个项目：<a href=\"https://github.com/oneuijs/You-Dont-Need-jQuery\">You Don’t Need jQuery</a>。</p>\n<hr>\n<p><font color=red>April Fool’s Day </font>….⊙o⊙….</p>\n","site":{"data":{}},"excerpt":"<p>一直在Angular中混用jQuery，用来操作DOM，因为它(wo)很(tai)方(nian)便(qing)，最近将jQuery从项目中移除了，将所有涉及到jQuery操作换为用angular提供的api或原生js来实现……虽然jQuery压缩过才100kb左右。<br>1.Angular内置jqLite，封装了部分操作DOM的api，使用angular.element(ele)相当于jQuery中的$,具体使用见官方<a href=\"https://code.angularjs.org/1.5.4/docs/api/ng/function/angular.element\">文档</a>。<br>因此我们所使用的jQuery选择器，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;#empl-name&quot;</span>).<span class=\"title function_\">val</span>();</span><br></pre></td></tr></table></figure>\n<p>可以换成：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">angular.<span class=\"title function_\">element</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#empl-name&quot;</span>));</span><br></pre></td></tr></table></figure>\n<p>使用document.querySelector 的原因官方文档中有说明:</p>\n<img src=\"../../../../assets/img/4-1-1.png\"   align=center />","more":"<p>2.替换掉依赖jQuery的插件。<br>例如，使用的jQuery的tooltip组件插件，现在换成ui bootstrap中的tooltip组件。<br>原来引入jQuery tooltip插件代码后，封装成指令：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> moduleName=<span class=\"string\">&quot;kass.widget.tooltip&quot;</span>;</span><br><span class=\"line\">angular.<span class=\"title function_\">module</span>(moduleName,[])</span><br><span class=\"line\">.<span class=\"title function_\">directive</span>(<span class=\"string\">&quot;tooltip&quot;</span>,[<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">\t\trestrict : <span class=\"string\">&quot;A&quot;</span>,</span><br><span class=\"line\">\t\tlink : <span class=\"keyword\">function</span>(<span class=\"params\">scope, element, attrs</span>)&#123;<span class=\"comment\">//element:指令标签对象     attrs:指令属性</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> opts =&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//将带有tooltip属性的&quot;Target element&quot;传给插件创建tooltip</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">formatter</span>: <span class=\"keyword\">function</span>(<span class=\"params\">scope</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> scope.<span class=\"property\">$target</span>.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;tooltip&quot;</span>);<span class=\"comment\">//$target是利用$(this)封装的jquery对象</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//插件提供的tooltip属性值direction与指令属性tooltipDirection</span></span><br><span class=\"line\">\t\t\t\tdirection : attrs.<span class=\"property\">tooltipDirection</span> ? attrs.<span class=\"property\">tooltipDirection</span> : <span class=\"string\">&quot;bottom&quot;</span></span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//插件提供的tipper方法设置tooltip属性值</span></span><br><span class=\"line\">\t\t\telement.<span class=\"title function_\">tipper</span>(opts);</span><br><span class=\"line\">\t\t\telement.<span class=\"title function_\">one</span>(<span class=\"string\">&quot;$destroy&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\telement.<span class=\"title function_\">tipper</span>(<span class=\"string\">&quot;destroy&quot;</span>);</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;]);</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=moduleName;</span><br></pre></td></tr></table></figure>\n<p>引入ui bootstrap 中的tooptip部分：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;./position&quot;</span>);<span class=\"comment\">//ui bootstrap的position部分</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;./stackedMap&quot;</span>);<span class=\"comment\">//ui bootstrap的stackedMap部分</span></span><br><span class=\"line\">angular.<span class=\"title function_\">module</span>(<span class=\"string\">&#x27;ui.bootstrap.tooltip&#x27;</span>, [<span class=\"string\">&#x27;ui.bootstrap.position&#x27;</span>, <span class=\"string\">&#x27;ui.bootstrap.stackedMap&#x27;</span>,<span class=\"string\">&quot;uib/template/tooltip/tooltip-html-popup.html&quot;</span>,<span class=\"string\">&quot;uib/template/tooltip/tooltip-popup.html&quot;</span>,<span class=\"string\">&quot;uib/template/tooltip/tooltip-template-popup.html&quot;</span>])     </span><br><span class=\"line\">.<span class=\"title function_\">provider</span>(<span class=\"string\">&#x27;$uibTooltip&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;........&#125;)</span><br><span class=\"line\">......</span><br><span class=\"line\">.<span class=\"title function_\">directive</span>(<span class=\"string\">&#x27;uibTooltipTemplatePopup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">restrict</span>: <span class=\"string\">&#x27;A&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">scope</span>: &#123; <span class=\"attr\">contentExp</span>: <span class=\"string\">&#x27;&amp;&#x27;</span>, <span class=\"attr\">originScope</span>: <span class=\"string\">&#x27;&amp;&#x27;</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">templateUrl</span>: <span class=\"string\">&#x27;uib/template/tooltip/tooltip-template-popup.html&#x27;</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">......</span><br><span class=\"line\">angular.<span class=\"title function_\">module</span>(<span class=\"string\">&quot;uib/template/tooltip/tooltip-popup.html&quot;</span>, []).<span class=\"title function_\">run</span>(......);</span><br><span class=\"line\">......</span><br><span class=\"line\">angular.<span class=\"title function_\">module</span>(<span class=\"string\">&#x27;ui.bootstrap.tooltip&#x27;</span>).<span class=\"title function_\">run</span>(......);</span><br></pre></td></tr></table></figure>\n<p>发现github上的一个封装angular tooltip的<a href=\"https://github.com/720kb/angular-tooltips\">项目</a>,使用方便有demo,⊙o⊙……</p>\n<p>3.jQuery的动画部分。<br>一些动画可以直接使用css的animation、transition属性进行设置，还可以使用angular提供的动画。<br>例如jQuery一个简单的改变位置动画，需要在动画完成后移除这个指令组件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;.side-modal&quot;</span>).<span class=\"title function_\">animate</span>(&#123;<span class=\"attr\">right</span>:<span class=\"string\">&#x27;-100%&#x27;</span>&#125;,<span class=\"number\">300</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t$scope.$apply(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t$scope.<span class=\"title function_\">onRemove</span>();</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>使用angular的动画，要引入angular-animate.js文件，注入ngAnimate：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;./angular-animte-min&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> moduleName = <span class=\"string\">&quot;animateTest&quot;</span>;</span><br><span class=\"line\">angular.<span class=\"title function_\">module</span>(moduleName,[<span class=\"string\">&quot;ngAnimate&quot;</span>])</span><br><span class=\"line\">.<span class=\"title function_\">directive</span>(myTest,[<span class=\"string\">&quot;$animate&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"><span class=\"string\">&quot;$animate&quot;</span></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">        restrict : <span class=\"string\">&quot;AE&quot;</span>,</span><br><span class=\"line\">        replace : <span class=\"literal\">false</span>,</span><br><span class=\"line\">        scope : &#123;</span><br><span class=\"line\">            onRemove : <span class=\"string\">&quot;&amp;&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        template : <span class=\"built_in\">require</span>(<span class=\"string\">&quot;html!../template/to/mytest.html&quot;</span>),</span><br><span class=\"line\">        controller : [<span class=\"string\">&quot;$scope&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">$scope</span>)&#123;</span><br><span class=\"line\">            ......</span><br><span class=\"line\">            <span class=\"keyword\">var</span> slideBox = angular.<span class=\"title function_\">element</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;.side-modal&quot;</span>));</span><br><span class=\"line\">            $animate.<span class=\"title function_\">addClass</span>(slideBox,<span class=\"string\">&#x27;set-right&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">                $scope.<span class=\"title function_\">onRemove</span>();<span class=\"comment\">//callback,动画完成后移除指令</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            ......</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        <span class=\"attr\">link</span>:<span class=\"keyword\">function</span>(<span class=\"params\">scope,element,attrs</span>)&#123;......&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;]);</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=moduleName;</span><br></pre></td></tr></table></figure>\n<p>4.其他部分可以参考github上的一个项目：<a href=\"https://github.com/oneuijs/You-Dont-Need-jQuery\">You Don’t Need jQuery</a>。</p>\n<hr>\n<p><font color=red>April Fool’s Day </font>….⊙o⊙….</p>"},{"title":"一次http请求","date":"2017-04-17T10:13:27.000Z","_content":"好久没有写博客了，记录几天前的一个bug，顺便回顾一些之前学的HTTP知识。\n客户之前要求浏览器支持360和chrome，对版本没有什么要求。想到360极速模式使用的webkit内核，平常代码运行在又chrome上，我感觉可以任性了！但是最近客户改需求需要运行在IE10及以上，小伙伴们开始在IE10上测试。其中一处bug：某次HTTP 请求在chrome上返回200，但在IE10上返回401。\n在chrome中运行，HTTP 请求详细信息截图如下：\n\n<img src=\"../../../../assets/img/4-17-1.png\"   align=center />\n\n<!--more-->\n\n在IE10下HTTP请求响应码返回401，表示身份信息有问题，请求失败：\n\n<img src=\"../../../../assets/img/4-17-2.png\"   align=center />\n\n查看request header：\n\n<img src=\"../../../../assets/img/4-17-3.png\"   align=center />\n\n发现设置在headers中的的authorization字段不见了，在chrome上存在authorization 字段,那么IE10上应该存在，为什么找不到？看到桌面绿色的fiddler，想到它可以抓到很多HTTP 信息，可能会得到其他有用的信息。\n运行fiddler ，找到目标session：\n\n<img src=\"../../../../assets/img/4-17-4.png\"   align=center />\n\n得到IE10下详细的返回信息：\n\n<img src=\"../../../../assets/img/4-17-5.png\"   align=center />\n\n所以，authorization还是有的，只是IE10没有显示出来，而且变成了Authorization，首字母大写；应该是后端验证出现问题，将bug报给后端被解决。\n\n#### HTTP基础知识([HTTP basics](https://www.ntu.edu.sg/home/ehchua/programming/webprogramming/HTTP_Basics.html))\n一次完整的请求过程：\n1.域名解析\n2.建立TCP连接，三次握手\n3.Web浏览器向Web服务端发送HTTP请求报文\n4.浏览器解析HTML代码，并请求HTML代码中的资源\n6.浏览器对页面进行渲染呈献给用户\n7.断开TCP连接\n\n#### HTTP的请求方法([HTTP/1.1: Method Definitions](https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html))\n一些get请求方式：1. 直接输入某个地址 2. 点击链接 3. 表单默认提交方式\n\n#### 关于HTTP 响应码([HTTP Status Code](https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html) )\n1xx：#临时响应# 代表请求已经被接受，但需要继续处理。\n　　100 Continue — 服务器仅接收到部分请求，但是一旦服务器并没有拒绝该请求，客户端应该继续发送其余的请求。\n　　101 Switching Protocols — 服务器转换协议：服务器将遵从客户的请求转换到另外一种协议。\n　　102 Processing — 由WebDAV(RFC 2518)扩展的状态码，代表处理将被继续执行。\n2xx：#成功# 代表请求已经被服务器接收、理解、并接受\n　　200 OK：请求成功(其后是对GET和POST请求的应答文档。)\n　　201 Created — 请求被创建完成，同时新的资源被创建。\n　　202 Accepted — 供处理的请求已被接受，但是处理未完成。\n　　203 Non-authoritative Information — 文档已经正常地返回，但一些应答头可能不正确，因为使用的是文档的拷贝。\n　　204 No Content — 没有新文档。浏览器应该继续显示原来的文档。如果用户定期地刷新页面，而Servlet可以确定用户文档足够新，这个状态代码是很有用的。\n　　205 Reset Content — 没有新文档。但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容。\n　　206 Partial Content — 客户发送了一个带有Range头的GET请求，服务器完成了它。\n　　207 Multi-Status — 由WebDAV(RFC 2518)扩展的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。\n3xx: #重定向# 代表客户端需要采取进一步的操作才能完成请求\n　　300 Multiple Choices — 多重选择。链接列表。用户可以选择某链接到达目的地。最多允许五个地址。\n　　301 Moved Permanently — 所请求的页面已经转移至新的url。\n　　302 Found — 所请求的页面已经临时转移至新的url。\n　　303 See Other — 所请求的页面可在别的url下被找到。\n　　304 Not Modified — 未按预期修改文档。客户端有缓冲的文档并发出了一个条件性的请求(一般是提供If-Modified-Since头表示客户只想比指定日期更新的文档)。服务器告诉客户，原来缓冲的文档还可以继续使用。\n　　305 Use Proxy — 客户请求的文档应该通过Location头所指明的代理服务器提取。\n　　306 Unused — 此代码被用于前一版本。目前已不再使用，但是代码依然被保留。\n　　307 Temporary Redirect — 被请求的页面已经临时移至新的url。\n4xx：#客户端错误# 代表客户端可能发生了错误，阻碍了服务器的处理，\n　　400 Bad Request — 服务器未能理解请求或是请求参数有误。\n　　401 Unauthorized — 被请求的页面需要用户名和密码。\n　　402 Payment Required — 此代码尚无法使用(为了将来可能的需求而预留的。)\n　　403 Forbidden — 对被请求页面的访问被禁止。\n　　404 Not Found — 服务器无法找到被请求的页面。\n　　405 Method Not Allowed — 请求中指定的方法不被允许。\n　　406 Not Acceptable — 服务器生成的响应无法被客户端所接受。\n　　407 Proxy Authentication Required — 用户必须首先使用代理服务器进行验证，这样请求才会被处理。\n　　408 Request Timeout — 请求超出了服务器的等待时间。\n　　409 Conflict — 由于冲突，请求无法被完成。\n　　410 Gone — 被请求的页面不可用。\n　　411 Length Required\"Content-Length — \" 未被定义。如果无此内容，服务器不会接受请求。\n　　412 Precondition Failed — 请求中的前提条件被服务器评估为失败。\n　　413 Request Entity Too Large — 由于所请求的实体的太大，服务器不会接受请求。\n　　414 Request-url Too Long — 由于url太长，服务器不会接受请求。当post请求被转换为带有很长的查询信息的get请求时，就会发生这种情况。\n　　415 Unsupported Media Type — 由于媒介类型不被支持，服务器不会接受请求。\n　　416 — 服务器不能满足客户在请求中指定的Range头。\n　　417 Expectation Failed\n5xx： #服务器错误# 代表服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理。\n　　500 Internal Server Error — 请求未完成。服务器遇到不可预知的情况。\n　　501 Not Implemented — 请求未完成。服务器不支持所请求的功能。\n　　502 Bad Gateway — 请求未完成。服务器从上游服务器收到一个无效的响应。\n　　503 Service Unavailable — 请求未完成。服务器临时过载或当机。\n　　504 Gateway Timeout — 网关超时。\n　　505 HTTP Version Not Supported — 服务器不支持请求中指明的HTTP协议版本。\n\n#### HTTP1.1与HTTP1.1的区别([Key Differences between HTTP/1.0 and HTTP/1.1](http://www8.org/w8-papers/5c-protocols/key/key.html))\n最大的区别：HTTP1.0规定浏览器与服务器只保持短暂的链接，每次请求需要建立TCP连接，完成后立即断开；HTTP1.1支持持久连接，一个连接可用于多次响应请求交换，允许客户端不用等待上一次结果返回，就可以发送下一个请求。\n\n总结：博客要坚持写，小问题也可以写写。","source":"_posts/一次http请求.md","raw":"---\ntitle: 一次http请求\ndate: 2017-04-17 18:13:27\ncategories: Font-end\n---\n好久没有写博客了，记录几天前的一个bug，顺便回顾一些之前学的HTTP知识。\n客户之前要求浏览器支持360和chrome，对版本没有什么要求。想到360极速模式使用的webkit内核，平常代码运行在又chrome上，我感觉可以任性了！但是最近客户改需求需要运行在IE10及以上，小伙伴们开始在IE10上测试。其中一处bug：某次HTTP 请求在chrome上返回200，但在IE10上返回401。\n在chrome中运行，HTTP 请求详细信息截图如下：\n\n<img src=\"../../../../assets/img/4-17-1.png\"   align=center />\n\n<!--more-->\n\n在IE10下HTTP请求响应码返回401，表示身份信息有问题，请求失败：\n\n<img src=\"../../../../assets/img/4-17-2.png\"   align=center />\n\n查看request header：\n\n<img src=\"../../../../assets/img/4-17-3.png\"   align=center />\n\n发现设置在headers中的的authorization字段不见了，在chrome上存在authorization 字段,那么IE10上应该存在，为什么找不到？看到桌面绿色的fiddler，想到它可以抓到很多HTTP 信息，可能会得到其他有用的信息。\n运行fiddler ，找到目标session：\n\n<img src=\"../../../../assets/img/4-17-4.png\"   align=center />\n\n得到IE10下详细的返回信息：\n\n<img src=\"../../../../assets/img/4-17-5.png\"   align=center />\n\n所以，authorization还是有的，只是IE10没有显示出来，而且变成了Authorization，首字母大写；应该是后端验证出现问题，将bug报给后端被解决。\n\n#### HTTP基础知识([HTTP basics](https://www.ntu.edu.sg/home/ehchua/programming/webprogramming/HTTP_Basics.html))\n一次完整的请求过程：\n1.域名解析\n2.建立TCP连接，三次握手\n3.Web浏览器向Web服务端发送HTTP请求报文\n4.浏览器解析HTML代码，并请求HTML代码中的资源\n6.浏览器对页面进行渲染呈献给用户\n7.断开TCP连接\n\n#### HTTP的请求方法([HTTP/1.1: Method Definitions](https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html))\n一些get请求方式：1. 直接输入某个地址 2. 点击链接 3. 表单默认提交方式\n\n#### 关于HTTP 响应码([HTTP Status Code](https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html) )\n1xx：#临时响应# 代表请求已经被接受，但需要继续处理。\n　　100 Continue — 服务器仅接收到部分请求，但是一旦服务器并没有拒绝该请求，客户端应该继续发送其余的请求。\n　　101 Switching Protocols — 服务器转换协议：服务器将遵从客户的请求转换到另外一种协议。\n　　102 Processing — 由WebDAV(RFC 2518)扩展的状态码，代表处理将被继续执行。\n2xx：#成功# 代表请求已经被服务器接收、理解、并接受\n　　200 OK：请求成功(其后是对GET和POST请求的应答文档。)\n　　201 Created — 请求被创建完成，同时新的资源被创建。\n　　202 Accepted — 供处理的请求已被接受，但是处理未完成。\n　　203 Non-authoritative Information — 文档已经正常地返回，但一些应答头可能不正确，因为使用的是文档的拷贝。\n　　204 No Content — 没有新文档。浏览器应该继续显示原来的文档。如果用户定期地刷新页面，而Servlet可以确定用户文档足够新，这个状态代码是很有用的。\n　　205 Reset Content — 没有新文档。但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容。\n　　206 Partial Content — 客户发送了一个带有Range头的GET请求，服务器完成了它。\n　　207 Multi-Status — 由WebDAV(RFC 2518)扩展的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。\n3xx: #重定向# 代表客户端需要采取进一步的操作才能完成请求\n　　300 Multiple Choices — 多重选择。链接列表。用户可以选择某链接到达目的地。最多允许五个地址。\n　　301 Moved Permanently — 所请求的页面已经转移至新的url。\n　　302 Found — 所请求的页面已经临时转移至新的url。\n　　303 See Other — 所请求的页面可在别的url下被找到。\n　　304 Not Modified — 未按预期修改文档。客户端有缓冲的文档并发出了一个条件性的请求(一般是提供If-Modified-Since头表示客户只想比指定日期更新的文档)。服务器告诉客户，原来缓冲的文档还可以继续使用。\n　　305 Use Proxy — 客户请求的文档应该通过Location头所指明的代理服务器提取。\n　　306 Unused — 此代码被用于前一版本。目前已不再使用，但是代码依然被保留。\n　　307 Temporary Redirect — 被请求的页面已经临时移至新的url。\n4xx：#客户端错误# 代表客户端可能发生了错误，阻碍了服务器的处理，\n　　400 Bad Request — 服务器未能理解请求或是请求参数有误。\n　　401 Unauthorized — 被请求的页面需要用户名和密码。\n　　402 Payment Required — 此代码尚无法使用(为了将来可能的需求而预留的。)\n　　403 Forbidden — 对被请求页面的访问被禁止。\n　　404 Not Found — 服务器无法找到被请求的页面。\n　　405 Method Not Allowed — 请求中指定的方法不被允许。\n　　406 Not Acceptable — 服务器生成的响应无法被客户端所接受。\n　　407 Proxy Authentication Required — 用户必须首先使用代理服务器进行验证，这样请求才会被处理。\n　　408 Request Timeout — 请求超出了服务器的等待时间。\n　　409 Conflict — 由于冲突，请求无法被完成。\n　　410 Gone — 被请求的页面不可用。\n　　411 Length Required\"Content-Length — \" 未被定义。如果无此内容，服务器不会接受请求。\n　　412 Precondition Failed — 请求中的前提条件被服务器评估为失败。\n　　413 Request Entity Too Large — 由于所请求的实体的太大，服务器不会接受请求。\n　　414 Request-url Too Long — 由于url太长，服务器不会接受请求。当post请求被转换为带有很长的查询信息的get请求时，就会发生这种情况。\n　　415 Unsupported Media Type — 由于媒介类型不被支持，服务器不会接受请求。\n　　416 — 服务器不能满足客户在请求中指定的Range头。\n　　417 Expectation Failed\n5xx： #服务器错误# 代表服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理。\n　　500 Internal Server Error — 请求未完成。服务器遇到不可预知的情况。\n　　501 Not Implemented — 请求未完成。服务器不支持所请求的功能。\n　　502 Bad Gateway — 请求未完成。服务器从上游服务器收到一个无效的响应。\n　　503 Service Unavailable — 请求未完成。服务器临时过载或当机。\n　　504 Gateway Timeout — 网关超时。\n　　505 HTTP Version Not Supported — 服务器不支持请求中指明的HTTP协议版本。\n\n#### HTTP1.1与HTTP1.1的区别([Key Differences between HTTP/1.0 and HTTP/1.1](http://www8.org/w8-papers/5c-protocols/key/key.html))\n最大的区别：HTTP1.0规定浏览器与服务器只保持短暂的链接，每次请求需要建立TCP连接，完成后立即断开；HTTP1.1支持持久连接，一个连接可用于多次响应请求交换，允许客户端不用等待上一次结果返回，就可以发送下一个请求。\n\n总结：博客要坚持写，小问题也可以写写。","slug":"一次http请求","published":1,"updated":"2021-04-17T14:42:56.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq18rrw8000evf4k70114y27","content":"<p>好久没有写博客了，记录几天前的一个bug，顺便回顾一些之前学的HTTP知识。<br>客户之前要求浏览器支持360和chrome，对版本没有什么要求。想到360极速模式使用的webkit内核，平常代码运行在又chrome上，我感觉可以任性了！但是最近客户改需求需要运行在IE10及以上，小伙伴们开始在IE10上测试。其中一处bug：某次HTTP 请求在chrome上返回200，但在IE10上返回401。<br>在chrome中运行，HTTP 请求详细信息截图如下：</p>\n<img src=\"../../../../assets/img/4-17-1.png\"   align=center />\n\n<span id=\"more\"></span>\n\n<p>在IE10下HTTP请求响应码返回401，表示身份信息有问题，请求失败：</p>\n<img src=\"../../../../assets/img/4-17-2.png\"   align=center />\n\n<p>查看request header：</p>\n<img src=\"../../../../assets/img/4-17-3.png\"   align=center />\n\n<p>发现设置在headers中的的authorization字段不见了，在chrome上存在authorization 字段,那么IE10上应该存在，为什么找不到？看到桌面绿色的fiddler，想到它可以抓到很多HTTP 信息，可能会得到其他有用的信息。<br>运行fiddler ，找到目标session：</p>\n<img src=\"../../../../assets/img/4-17-4.png\"   align=center />\n\n<p>得到IE10下详细的返回信息：</p>\n<img src=\"../../../../assets/img/4-17-5.png\"   align=center />\n\n<p>所以，authorization还是有的，只是IE10没有显示出来，而且变成了Authorization，首字母大写；应该是后端验证出现问题，将bug报给后端被解决。</p>\n<h4 id=\"HTTP基础知识-HTTP-basics\"><a href=\"#HTTP基础知识-HTTP-basics\" class=\"headerlink\" title=\"HTTP基础知识(HTTP basics)\"></a>HTTP基础知识(<a href=\"https://www.ntu.edu.sg/home/ehchua/programming/webprogramming/HTTP_Basics.html\">HTTP basics</a>)</h4><p>一次完整的请求过程：<br>1.域名解析<br>2.建立TCP连接，三次握手<br>3.Web浏览器向Web服务端发送HTTP请求报文<br>4.浏览器解析HTML代码，并请求HTML代码中的资源<br>6.浏览器对页面进行渲染呈献给用户<br>7.断开TCP连接</p>\n<h4 id=\"HTTP的请求方法-HTTP-x2F-1-1-Method-Definitions\"><a href=\"#HTTP的请求方法-HTTP-x2F-1-1-Method-Definitions\" class=\"headerlink\" title=\"HTTP的请求方法(HTTP&#x2F;1.1: Method Definitions)\"></a>HTTP的请求方法(<a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html\">HTTP&#x2F;1.1: Method Definitions</a>)</h4><p>一些get请求方式：1. 直接输入某个地址 2. 点击链接 3. 表单默认提交方式</p>\n<h4 id=\"关于HTTP-响应码-HTTP-Status-Code\"><a href=\"#关于HTTP-响应码-HTTP-Status-Code\" class=\"headerlink\" title=\"关于HTTP 响应码(HTTP Status Code )\"></a>关于HTTP 响应码(<a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\">HTTP Status Code</a> )</h4><p>1xx：#临时响应# 代表请求已经被接受，但需要继续处理。<br>　　100 Continue — 服务器仅接收到部分请求，但是一旦服务器并没有拒绝该请求，客户端应该继续发送其余的请求。<br>　　101 Switching Protocols — 服务器转换协议：服务器将遵从客户的请求转换到另外一种协议。<br>　　102 Processing — 由WebDAV(RFC 2518)扩展的状态码，代表处理将被继续执行。<br>2xx：#成功# 代表请求已经被服务器接收、理解、并接受<br>　　200 OK：请求成功(其后是对GET和POST请求的应答文档。)<br>　　201 Created — 请求被创建完成，同时新的资源被创建。<br>　　202 Accepted — 供处理的请求已被接受，但是处理未完成。<br>　　203 Non-authoritative Information — 文档已经正常地返回，但一些应答头可能不正确，因为使用的是文档的拷贝。<br>　　204 No Content — 没有新文档。浏览器应该继续显示原来的文档。如果用户定期地刷新页面，而Servlet可以确定用户文档足够新，这个状态代码是很有用的。<br>　　205 Reset Content — 没有新文档。但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容。<br>　　206 Partial Content — 客户发送了一个带有Range头的GET请求，服务器完成了它。<br>　　207 Multi-Status — 由WebDAV(RFC 2518)扩展的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。<br>3xx: #重定向# 代表客户端需要采取进一步的操作才能完成请求<br>　　300 Multiple Choices — 多重选择。链接列表。用户可以选择某链接到达目的地。最多允许五个地址。<br>　　301 Moved Permanently — 所请求的页面已经转移至新的url。<br>　　302 Found — 所请求的页面已经临时转移至新的url。<br>　　303 See Other — 所请求的页面可在别的url下被找到。<br>　　304 Not Modified — 未按预期修改文档。客户端有缓冲的文档并发出了一个条件性的请求(一般是提供If-Modified-Since头表示客户只想比指定日期更新的文档)。服务器告诉客户，原来缓冲的文档还可以继续使用。<br>　　305 Use Proxy — 客户请求的文档应该通过Location头所指明的代理服务器提取。<br>　　306 Unused — 此代码被用于前一版本。目前已不再使用，但是代码依然被保留。<br>　　307 Temporary Redirect — 被请求的页面已经临时移至新的url。<br>4xx：#客户端错误# 代表客户端可能发生了错误，阻碍了服务器的处理，<br>　　400 Bad Request — 服务器未能理解请求或是请求参数有误。<br>　　401 Unauthorized — 被请求的页面需要用户名和密码。<br>　　402 Payment Required — 此代码尚无法使用(为了将来可能的需求而预留的。)<br>　　403 Forbidden — 对被请求页面的访问被禁止。<br>　　404 Not Found — 服务器无法找到被请求的页面。<br>　　405 Method Not Allowed — 请求中指定的方法不被允许。<br>　　406 Not Acceptable — 服务器生成的响应无法被客户端所接受。<br>　　407 Proxy Authentication Required — 用户必须首先使用代理服务器进行验证，这样请求才会被处理。<br>　　408 Request Timeout — 请求超出了服务器的等待时间。<br>　　409 Conflict — 由于冲突，请求无法被完成。<br>　　410 Gone — 被请求的页面不可用。<br>　　411 Length Required”Content-Length — “ 未被定义。如果无此内容，服务器不会接受请求。<br>　　412 Precondition Failed — 请求中的前提条件被服务器评估为失败。<br>　　413 Request Entity Too Large — 由于所请求的实体的太大，服务器不会接受请求。<br>　　414 Request-url Too Long — 由于url太长，服务器不会接受请求。当post请求被转换为带有很长的查询信息的get请求时，就会发生这种情况。<br>　　415 Unsupported Media Type — 由于媒介类型不被支持，服务器不会接受请求。<br>　　416 — 服务器不能满足客户在请求中指定的Range头。<br>　　417 Expectation Failed<br>5xx： #服务器错误# 代表服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理。<br>　　500 Internal Server Error — 请求未完成。服务器遇到不可预知的情况。<br>　　501 Not Implemented — 请求未完成。服务器不支持所请求的功能。<br>　　502 Bad Gateway — 请求未完成。服务器从上游服务器收到一个无效的响应。<br>　　503 Service Unavailable — 请求未完成。服务器临时过载或当机。<br>　　504 Gateway Timeout — 网关超时。<br>　　505 HTTP Version Not Supported — 服务器不支持请求中指明的HTTP协议版本。</p>\n<h4 id=\"HTTP1-1与HTTP1-1的区别-Key-Differences-between-HTTP-x2F-1-0-and-HTTP-x2F-1-1\"><a href=\"#HTTP1-1与HTTP1-1的区别-Key-Differences-between-HTTP-x2F-1-0-and-HTTP-x2F-1-1\" class=\"headerlink\" title=\"HTTP1.1与HTTP1.1的区别(Key Differences between HTTP&#x2F;1.0 and HTTP&#x2F;1.1)\"></a>HTTP1.1与HTTP1.1的区别(<a href=\"http://www8.org/w8-papers/5c-protocols/key/key.html\">Key Differences between HTTP&#x2F;1.0 and HTTP&#x2F;1.1</a>)</h4><p>最大的区别：HTTP1.0规定浏览器与服务器只保持短暂的链接，每次请求需要建立TCP连接，完成后立即断开；HTTP1.1支持持久连接，一个连接可用于多次响应请求交换，允许客户端不用等待上一次结果返回，就可以发送下一个请求。</p>\n<p>总结：博客要坚持写，小问题也可以写写。</p>\n","site":{"data":{}},"excerpt":"<p>好久没有写博客了，记录几天前的一个bug，顺便回顾一些之前学的HTTP知识。<br>客户之前要求浏览器支持360和chrome，对版本没有什么要求。想到360极速模式使用的webkit内核，平常代码运行在又chrome上，我感觉可以任性了！但是最近客户改需求需要运行在IE10及以上，小伙伴们开始在IE10上测试。其中一处bug：某次HTTP 请求在chrome上返回200，但在IE10上返回401。<br>在chrome中运行，HTTP 请求详细信息截图如下：</p>\n<img src=\"../../../../assets/img/4-17-1.png\"   align=center />","more":"<p>在IE10下HTTP请求响应码返回401，表示身份信息有问题，请求失败：</p>\n<img src=\"../../../../assets/img/4-17-2.png\"   align=center />\n\n<p>查看request header：</p>\n<img src=\"../../../../assets/img/4-17-3.png\"   align=center />\n\n<p>发现设置在headers中的的authorization字段不见了，在chrome上存在authorization 字段,那么IE10上应该存在，为什么找不到？看到桌面绿色的fiddler，想到它可以抓到很多HTTP 信息，可能会得到其他有用的信息。<br>运行fiddler ，找到目标session：</p>\n<img src=\"../../../../assets/img/4-17-4.png\"   align=center />\n\n<p>得到IE10下详细的返回信息：</p>\n<img src=\"../../../../assets/img/4-17-5.png\"   align=center />\n\n<p>所以，authorization还是有的，只是IE10没有显示出来，而且变成了Authorization，首字母大写；应该是后端验证出现问题，将bug报给后端被解决。</p>\n<h4 id=\"HTTP基础知识-HTTP-basics\"><a href=\"#HTTP基础知识-HTTP-basics\" class=\"headerlink\" title=\"HTTP基础知识(HTTP basics)\"></a>HTTP基础知识(<a href=\"https://www.ntu.edu.sg/home/ehchua/programming/webprogramming/HTTP_Basics.html\">HTTP basics</a>)</h4><p>一次完整的请求过程：<br>1.域名解析<br>2.建立TCP连接，三次握手<br>3.Web浏览器向Web服务端发送HTTP请求报文<br>4.浏览器解析HTML代码，并请求HTML代码中的资源<br>6.浏览器对页面进行渲染呈献给用户<br>7.断开TCP连接</p>\n<h4 id=\"HTTP的请求方法-HTTP-x2F-1-1-Method-Definitions\"><a href=\"#HTTP的请求方法-HTTP-x2F-1-1-Method-Definitions\" class=\"headerlink\" title=\"HTTP的请求方法(HTTP&#x2F;1.1: Method Definitions)\"></a>HTTP的请求方法(<a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html\">HTTP&#x2F;1.1: Method Definitions</a>)</h4><p>一些get请求方式：1. 直接输入某个地址 2. 点击链接 3. 表单默认提交方式</p>\n<h4 id=\"关于HTTP-响应码-HTTP-Status-Code\"><a href=\"#关于HTTP-响应码-HTTP-Status-Code\" class=\"headerlink\" title=\"关于HTTP 响应码(HTTP Status Code )\"></a>关于HTTP 响应码(<a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\">HTTP Status Code</a> )</h4><p>1xx：#临时响应# 代表请求已经被接受，但需要继续处理。<br>　　100 Continue — 服务器仅接收到部分请求，但是一旦服务器并没有拒绝该请求，客户端应该继续发送其余的请求。<br>　　101 Switching Protocols — 服务器转换协议：服务器将遵从客户的请求转换到另外一种协议。<br>　　102 Processing — 由WebDAV(RFC 2518)扩展的状态码，代表处理将被继续执行。<br>2xx：#成功# 代表请求已经被服务器接收、理解、并接受<br>　　200 OK：请求成功(其后是对GET和POST请求的应答文档。)<br>　　201 Created — 请求被创建完成，同时新的资源被创建。<br>　　202 Accepted — 供处理的请求已被接受，但是处理未完成。<br>　　203 Non-authoritative Information — 文档已经正常地返回，但一些应答头可能不正确，因为使用的是文档的拷贝。<br>　　204 No Content — 没有新文档。浏览器应该继续显示原来的文档。如果用户定期地刷新页面，而Servlet可以确定用户文档足够新，这个状态代码是很有用的。<br>　　205 Reset Content — 没有新文档。但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容。<br>　　206 Partial Content — 客户发送了一个带有Range头的GET请求，服务器完成了它。<br>　　207 Multi-Status — 由WebDAV(RFC 2518)扩展的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。<br>3xx: #重定向# 代表客户端需要采取进一步的操作才能完成请求<br>　　300 Multiple Choices — 多重选择。链接列表。用户可以选择某链接到达目的地。最多允许五个地址。<br>　　301 Moved Permanently — 所请求的页面已经转移至新的url。<br>　　302 Found — 所请求的页面已经临时转移至新的url。<br>　　303 See Other — 所请求的页面可在别的url下被找到。<br>　　304 Not Modified — 未按预期修改文档。客户端有缓冲的文档并发出了一个条件性的请求(一般是提供If-Modified-Since头表示客户只想比指定日期更新的文档)。服务器告诉客户，原来缓冲的文档还可以继续使用。<br>　　305 Use Proxy — 客户请求的文档应该通过Location头所指明的代理服务器提取。<br>　　306 Unused — 此代码被用于前一版本。目前已不再使用，但是代码依然被保留。<br>　　307 Temporary Redirect — 被请求的页面已经临时移至新的url。<br>4xx：#客户端错误# 代表客户端可能发生了错误，阻碍了服务器的处理，<br>　　400 Bad Request — 服务器未能理解请求或是请求参数有误。<br>　　401 Unauthorized — 被请求的页面需要用户名和密码。<br>　　402 Payment Required — 此代码尚无法使用(为了将来可能的需求而预留的。)<br>　　403 Forbidden — 对被请求页面的访问被禁止。<br>　　404 Not Found — 服务器无法找到被请求的页面。<br>　　405 Method Not Allowed — 请求中指定的方法不被允许。<br>　　406 Not Acceptable — 服务器生成的响应无法被客户端所接受。<br>　　407 Proxy Authentication Required — 用户必须首先使用代理服务器进行验证，这样请求才会被处理。<br>　　408 Request Timeout — 请求超出了服务器的等待时间。<br>　　409 Conflict — 由于冲突，请求无法被完成。<br>　　410 Gone — 被请求的页面不可用。<br>　　411 Length Required”Content-Length — “ 未被定义。如果无此内容，服务器不会接受请求。<br>　　412 Precondition Failed — 请求中的前提条件被服务器评估为失败。<br>　　413 Request Entity Too Large — 由于所请求的实体的太大，服务器不会接受请求。<br>　　414 Request-url Too Long — 由于url太长，服务器不会接受请求。当post请求被转换为带有很长的查询信息的get请求时，就会发生这种情况。<br>　　415 Unsupported Media Type — 由于媒介类型不被支持，服务器不会接受请求。<br>　　416 — 服务器不能满足客户在请求中指定的Range头。<br>　　417 Expectation Failed<br>5xx： #服务器错误# 代表服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理。<br>　　500 Internal Server Error — 请求未完成。服务器遇到不可预知的情况。<br>　　501 Not Implemented — 请求未完成。服务器不支持所请求的功能。<br>　　502 Bad Gateway — 请求未完成。服务器从上游服务器收到一个无效的响应。<br>　　503 Service Unavailable — 请求未完成。服务器临时过载或当机。<br>　　504 Gateway Timeout — 网关超时。<br>　　505 HTTP Version Not Supported — 服务器不支持请求中指明的HTTP协议版本。</p>\n<h4 id=\"HTTP1-1与HTTP1-1的区别-Key-Differences-between-HTTP-x2F-1-0-and-HTTP-x2F-1-1\"><a href=\"#HTTP1-1与HTTP1-1的区别-Key-Differences-between-HTTP-x2F-1-0-and-HTTP-x2F-1-1\" class=\"headerlink\" title=\"HTTP1.1与HTTP1.1的区别(Key Differences between HTTP&#x2F;1.0 and HTTP&#x2F;1.1)\"></a>HTTP1.1与HTTP1.1的区别(<a href=\"http://www8.org/w8-papers/5c-protocols/key/key.html\">Key Differences between HTTP&#x2F;1.0 and HTTP&#x2F;1.1</a>)</h4><p>最大的区别：HTTP1.0规定浏览器与服务器只保持短暂的链接，每次请求需要建立TCP连接，完成后立即断开；HTTP1.1支持持久连接，一个连接可用于多次响应请求交换，允许客户端不用等待上一次结果返回，就可以发送下一个请求。</p>\n<p>总结：博客要坚持写，小问题也可以写写。</p>"},{"title":"Vue.js使用","date":"2017-05-26T01:41:27.000Z","_content":"   又有一个多月没写博客了，这篇记录一下最近一个月忙的事情——将使用AngularJS(v1.5.4)框架写的后台换成Vue.js(v2.2.6)啦~巨开心！\n至于我为什么换,大概是因为每次版本迭代不想按原来的方式改写一遍？时间还算充足？浏览器支持很宽松？想体验ES6写法？听说Vue很棒棒哇？想集齐四大法宝(JQuery/AngularJS/Vue.js/React)......主要原因应该是后台就我一个人在做，想怎么做就怎么做吧~哈哈= =\nVue框架使用非常方便，一如它所宣称的轻量高效。而且它的[官方文档](https://cn.vuejs.org/v2/guide/)超级清晰，[api](https://cn.vuejs.org/v2/api/)对于本菜来说也够用。之前用过几个月的Angular,文档到现在还没有全部看完（嗯，可能我比较懒...但它的东西真的多的不要不要的），但是Vue,它的文档我已经刷了好几遍（闲来无事刷文档）= =对于我这种准备学习一门语言或框架之前往往需要先完完整整过一两遍比较全的书或文档，才能放心开始学习的人来说，简直不要太棒！嗯，少说废话，进入正题。\n首先搭一个框架，做好准备工作。用vue-cli脚手架工具(npm install vue-cli -g)，初始化项目(vue init webpack-simple admin)很快得到admin项目下的完整目录：\n\n<img src=\"../../../../assets/img/5-31-1.png\"   align=center />\n\n<!--more-->\n详细的网上有教程，其中build和config里面放的是一些配置文件(主要是webpack的，用于打包),dist中放的是开发好的目录，如果要直接放在服务器中访问，需要简单修改一下config文件中的index.js,static放静态资源，src就是我们的开发目录啦。\n除了vue-cli帮我们安装的一些npm包，由于项目需要，另外引入一些工具\n\n``` json\n  \"dependencies\": {\n    // 解决http请求\n    \"axios\": \"^0.16.1\",\n    // 解决Babel对于一些api(如Promise等)不转码的问题\n    \"babel-polyfill\": \"^6.23.0\",\n    // 强大的时间操作工具\n    \"moment\": \"^2.18.1\",\n    // 简单的tooltip\n    \"v-tooltip\": \"^2.0.0-beta.4\",\n    \"vue\": \"^2.2.6\",\n    // vue 官方路由\n    \"vue-router\": \"^2.3.1\",\n    // vue官方状态管理模式\n    \"vuex\": \"^2.3.1\"\n  },\n```\n\n其中，[vuex](https://vuex.vuejs.org/zh-cn/getting-started.html)和[vue-router](https://router.vuejs.org/zh-cn/)都有官方文档，十分详细。引入axios是因为vue不像angular，angular提供的$http服务同服务端通信，相比vue-resource,官方推荐强大的axios！用上babel-polyfill工具，因为想使用一些ES6新的api，真想把它们统统都夸一遍 = =\n看一下项目目录：\n\n<img src=\"../../../../assets/img/5-31-2.png\"   align=center />\n\ncomponent: 一些组件(toast,tree,modal,avatar),由于不想引入大而全的库(很多东西不需要)，模式组件源于自己写写改改。\ndirective: 一些指令(v-focus)\nfilter: 一些过滤器(时间、文件大小，操作记录等等)，另外，可直接在组件内部使用computed,有时候它更好用。\nlibs: 一些工具，引用库\nrouter: 配置vue路由\nservice: 所有http请求，按照原来在angular框架时师傅教的，将所有api独立出来，感觉好写好改好查找。\nstore: vue的状态管理，我主要放了个人信息和组织结构树信息，方便管理数据\nviews: 所有路由页(因为在做单页应用，在只用component还是用部分router两种模式比较了一下，发现都差不多，为了用上全家桶，用上router)\n展开的就不放了，因为文件特别多 = =\n一个简单的component样式：\n\n<img src=\"../../../../assets/img/5-31-3.png\"   align=center />\n\n<img src=\"../../../../assets/img/5-31-4.png\"   align=center />\n\n\n未完，待续......\n\n----2018-3-1 更新---- \n    待续？用完三个框架，感觉Vue最方便好用，简单易入门，解决了数据绑定、组件开发、页面路由等痛点，配套Vuex解决数据管理，差不多了，对于我之前写的小项目来说，好用，没毛病...\n    有机会还会再用，好评。\\(^o^)/~","source":"_posts/入坑Vue-js.md","raw":"---\ntitle: Vue.js使用\ndate: 2017-05-26 09:41:27\ncategories: Font-end\ntags: JavaScript\n---\n   又有一个多月没写博客了，这篇记录一下最近一个月忙的事情——将使用AngularJS(v1.5.4)框架写的后台换成Vue.js(v2.2.6)啦~巨开心！\n至于我为什么换,大概是因为每次版本迭代不想按原来的方式改写一遍？时间还算充足？浏览器支持很宽松？想体验ES6写法？听说Vue很棒棒哇？想集齐四大法宝(JQuery/AngularJS/Vue.js/React)......主要原因应该是后台就我一个人在做，想怎么做就怎么做吧~哈哈= =\nVue框架使用非常方便，一如它所宣称的轻量高效。而且它的[官方文档](https://cn.vuejs.org/v2/guide/)超级清晰，[api](https://cn.vuejs.org/v2/api/)对于本菜来说也够用。之前用过几个月的Angular,文档到现在还没有全部看完（嗯，可能我比较懒...但它的东西真的多的不要不要的），但是Vue,它的文档我已经刷了好几遍（闲来无事刷文档）= =对于我这种准备学习一门语言或框架之前往往需要先完完整整过一两遍比较全的书或文档，才能放心开始学习的人来说，简直不要太棒！嗯，少说废话，进入正题。\n首先搭一个框架，做好准备工作。用vue-cli脚手架工具(npm install vue-cli -g)，初始化项目(vue init webpack-simple admin)很快得到admin项目下的完整目录：\n\n<img src=\"../../../../assets/img/5-31-1.png\"   align=center />\n\n<!--more-->\n详细的网上有教程，其中build和config里面放的是一些配置文件(主要是webpack的，用于打包),dist中放的是开发好的目录，如果要直接放在服务器中访问，需要简单修改一下config文件中的index.js,static放静态资源，src就是我们的开发目录啦。\n除了vue-cli帮我们安装的一些npm包，由于项目需要，另外引入一些工具\n\n``` json\n  \"dependencies\": {\n    // 解决http请求\n    \"axios\": \"^0.16.1\",\n    // 解决Babel对于一些api(如Promise等)不转码的问题\n    \"babel-polyfill\": \"^6.23.0\",\n    // 强大的时间操作工具\n    \"moment\": \"^2.18.1\",\n    // 简单的tooltip\n    \"v-tooltip\": \"^2.0.0-beta.4\",\n    \"vue\": \"^2.2.6\",\n    // vue 官方路由\n    \"vue-router\": \"^2.3.1\",\n    // vue官方状态管理模式\n    \"vuex\": \"^2.3.1\"\n  },\n```\n\n其中，[vuex](https://vuex.vuejs.org/zh-cn/getting-started.html)和[vue-router](https://router.vuejs.org/zh-cn/)都有官方文档，十分详细。引入axios是因为vue不像angular，angular提供的$http服务同服务端通信，相比vue-resource,官方推荐强大的axios！用上babel-polyfill工具，因为想使用一些ES6新的api，真想把它们统统都夸一遍 = =\n看一下项目目录：\n\n<img src=\"../../../../assets/img/5-31-2.png\"   align=center />\n\ncomponent: 一些组件(toast,tree,modal,avatar),由于不想引入大而全的库(很多东西不需要)，模式组件源于自己写写改改。\ndirective: 一些指令(v-focus)\nfilter: 一些过滤器(时间、文件大小，操作记录等等)，另外，可直接在组件内部使用computed,有时候它更好用。\nlibs: 一些工具，引用库\nrouter: 配置vue路由\nservice: 所有http请求，按照原来在angular框架时师傅教的，将所有api独立出来，感觉好写好改好查找。\nstore: vue的状态管理，我主要放了个人信息和组织结构树信息，方便管理数据\nviews: 所有路由页(因为在做单页应用，在只用component还是用部分router两种模式比较了一下，发现都差不多，为了用上全家桶，用上router)\n展开的就不放了，因为文件特别多 = =\n一个简单的component样式：\n\n<img src=\"../../../../assets/img/5-31-3.png\"   align=center />\n\n<img src=\"../../../../assets/img/5-31-4.png\"   align=center />\n\n\n未完，待续......\n\n----2018-3-1 更新---- \n    待续？用完三个框架，感觉Vue最方便好用，简单易入门，解决了数据绑定、组件开发、页面路由等痛点，配套Vuex解决数据管理，差不多了，对于我之前写的小项目来说，好用，没毛病...\n    有机会还会再用，好评。\\(^o^)/~","slug":"入坑Vue-js","published":1,"updated":"2021-04-17T14:42:56.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq18rrw8000gvf4k6q07czzg","content":"<p>   又有一个多月没写博客了，这篇记录一下最近一个月忙的事情——将使用AngularJS(v1.5.4)框架写的后台换成Vue.js(v2.2.6)啦<del>巨开心！<br>至于我为什么换,大概是因为每次版本迭代不想按原来的方式改写一遍？时间还算充足？浏览器支持很宽松？想体验ES6写法？听说Vue很棒棒哇？想集齐四大法宝(JQuery&#x2F;AngularJS&#x2F;Vue.js&#x2F;React)……主要原因应该是后台就我一个人在做，想怎么做就怎么做吧</del>哈哈&#x3D; &#x3D;<br>Vue框架使用非常方便，一如它所宣称的轻量高效。而且它的<a href=\"https://cn.vuejs.org/v2/guide/\">官方文档</a>超级清晰，<a href=\"https://cn.vuejs.org/v2/api/\">api</a>对于本菜来说也够用。之前用过几个月的Angular,文档到现在还没有全部看完（嗯，可能我比较懒…但它的东西真的多的不要不要的），但是Vue,它的文档我已经刷了好几遍（闲来无事刷文档）&#x3D; &#x3D;对于我这种准备学习一门语言或框架之前往往需要先完完整整过一两遍比较全的书或文档，才能放心开始学习的人来说，简直不要太棒！嗯，少说废话，进入正题。<br>首先搭一个框架，做好准备工作。用vue-cli脚手架工具(npm install vue-cli -g)，初始化项目(vue init webpack-simple admin)很快得到admin项目下的完整目录：</p>\n<img src=\"../../../../assets/img/5-31-1.png\"   align=center />\n\n<span id=\"more\"></span>\n<p>详细的网上有教程，其中build和config里面放的是一些配置文件(主要是webpack的，用于打包),dist中放的是开发好的目录，如果要直接放在服务器中访问，需要简单修改一下config文件中的index.js,static放静态资源，src就是我们的开发目录啦。<br>除了vue-cli帮我们安装的一些npm包，由于项目需要，另外引入一些工具</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;dependencies&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"comment\">// 解决http请求</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;axios&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^0.16.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"comment\">// 解决Babel对于一些api(如Promise等)不转码的问题</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;babel-polyfill&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^6.23.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"comment\">// 强大的时间操作工具</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;moment&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^2.18.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"comment\">// 简单的tooltip</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;v-tooltip&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^2.0.0-beta.4&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;vue&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^2.2.6&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"comment\">// vue 官方路由</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;vue-router&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^2.3.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"comment\">// vue官方状态管理模式</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;vuex&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^2.3.1&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure>\n\n<p>其中，<a href=\"https://vuex.vuejs.org/zh-cn/getting-started.html\">vuex</a>和<a href=\"https://router.vuejs.org/zh-cn/\">vue-router</a>都有官方文档，十分详细。引入axios是因为vue不像angular，angular提供的$http服务同服务端通信，相比vue-resource,官方推荐强大的axios！用上babel-polyfill工具，因为想使用一些ES6新的api，真想把它们统统都夸一遍 &#x3D; &#x3D;<br>看一下项目目录：</p>\n<img src=\"../../../../assets/img/5-31-2.png\"   align=center />\n\n<p>component: 一些组件(toast,tree,modal,avatar),由于不想引入大而全的库(很多东西不需要)，模式组件源于自己写写改改。<br>directive: 一些指令(v-focus)<br>filter: 一些过滤器(时间、文件大小，操作记录等等)，另外，可直接在组件内部使用computed,有时候它更好用。<br>libs: 一些工具，引用库<br>router: 配置vue路由<br>service: 所有http请求，按照原来在angular框架时师傅教的，将所有api独立出来，感觉好写好改好查找。<br>store: vue的状态管理，我主要放了个人信息和组织结构树信息，方便管理数据<br>views: 所有路由页(因为在做单页应用，在只用component还是用部分router两种模式比较了一下，发现都差不多，为了用上全家桶，用上router)<br>展开的就不放了，因为文件特别多 &#x3D; &#x3D;<br>一个简单的component样式：</p>\n<img src=\"../../../../assets/img/5-31-3.png\"   align=center />\n\n<img src=\"../../../../assets/img/5-31-4.png\"   align=center />\n\n\n<p>未完，待续……</p>\n<p>—-2018-3-1 更新—-<br>    待续？用完三个框架，感觉Vue最方便好用，简单易入门，解决了数据绑定、组件开发、页面路由等痛点，配套Vuex解决数据管理，差不多了，对于我之前写的小项目来说，好用，没毛病…<br>    有机会还会再用，好评。(^o^)&#x2F;~</p>\n","site":{"data":{}},"excerpt":"<p>   又有一个多月没写博客了，这篇记录一下最近一个月忙的事情——将使用AngularJS(v1.5.4)框架写的后台换成Vue.js(v2.2.6)啦<del>巨开心！<br>至于我为什么换,大概是因为每次版本迭代不想按原来的方式改写一遍？时间还算充足？浏览器支持很宽松？想体验ES6写法？听说Vue很棒棒哇？想集齐四大法宝(JQuery&#x2F;AngularJS&#x2F;Vue.js&#x2F;React)……主要原因应该是后台就我一个人在做，想怎么做就怎么做吧</del>哈哈&#x3D; &#x3D;<br>Vue框架使用非常方便，一如它所宣称的轻量高效。而且它的<a href=\"https://cn.vuejs.org/v2/guide/\">官方文档</a>超级清晰，<a href=\"https://cn.vuejs.org/v2/api/\">api</a>对于本菜来说也够用。之前用过几个月的Angular,文档到现在还没有全部看完（嗯，可能我比较懒…但它的东西真的多的不要不要的），但是Vue,它的文档我已经刷了好几遍（闲来无事刷文档）&#x3D; &#x3D;对于我这种准备学习一门语言或框架之前往往需要先完完整整过一两遍比较全的书或文档，才能放心开始学习的人来说，简直不要太棒！嗯，少说废话，进入正题。<br>首先搭一个框架，做好准备工作。用vue-cli脚手架工具(npm install vue-cli -g)，初始化项目(vue init webpack-simple admin)很快得到admin项目下的完整目录：</p>\n<img src=\"../../../../assets/img/5-31-1.png\"   align=center />","more":"<p>详细的网上有教程，其中build和config里面放的是一些配置文件(主要是webpack的，用于打包),dist中放的是开发好的目录，如果要直接放在服务器中访问，需要简单修改一下config文件中的index.js,static放静态资源，src就是我们的开发目录啦。<br>除了vue-cli帮我们安装的一些npm包，由于项目需要，另外引入一些工具</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;dependencies&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"comment\">// 解决http请求</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;axios&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^0.16.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"comment\">// 解决Babel对于一些api(如Promise等)不转码的问题</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;babel-polyfill&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^6.23.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"comment\">// 强大的时间操作工具</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;moment&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^2.18.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"comment\">// 简单的tooltip</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;v-tooltip&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^2.0.0-beta.4&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;vue&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^2.2.6&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"comment\">// vue 官方路由</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;vue-router&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^2.3.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"comment\">// vue官方状态管理模式</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;vuex&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^2.3.1&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure>\n\n<p>其中，<a href=\"https://vuex.vuejs.org/zh-cn/getting-started.html\">vuex</a>和<a href=\"https://router.vuejs.org/zh-cn/\">vue-router</a>都有官方文档，十分详细。引入axios是因为vue不像angular，angular提供的$http服务同服务端通信，相比vue-resource,官方推荐强大的axios！用上babel-polyfill工具，因为想使用一些ES6新的api，真想把它们统统都夸一遍 &#x3D; &#x3D;<br>看一下项目目录：</p>\n<img src=\"../../../../assets/img/5-31-2.png\"   align=center />\n\n<p>component: 一些组件(toast,tree,modal,avatar),由于不想引入大而全的库(很多东西不需要)，模式组件源于自己写写改改。<br>directive: 一些指令(v-focus)<br>filter: 一些过滤器(时间、文件大小，操作记录等等)，另外，可直接在组件内部使用computed,有时候它更好用。<br>libs: 一些工具，引用库<br>router: 配置vue路由<br>service: 所有http请求，按照原来在angular框架时师傅教的，将所有api独立出来，感觉好写好改好查找。<br>store: vue的状态管理，我主要放了个人信息和组织结构树信息，方便管理数据<br>views: 所有路由页(因为在做单页应用，在只用component还是用部分router两种模式比较了一下，发现都差不多，为了用上全家桶，用上router)<br>展开的就不放了，因为文件特别多 &#x3D; &#x3D;<br>一个简单的component样式：</p>\n<img src=\"../../../../assets/img/5-31-3.png\"   align=center />\n\n<img src=\"../../../../assets/img/5-31-4.png\"   align=center />\n\n\n<p>未完，待续……</p>\n<p>—-2018-3-1 更新—-<br>    待续？用完三个框架，感觉Vue最方便好用，简单易入门，解决了数据绑定、组件开发、页面路由等痛点，配套Vuex解决数据管理，差不多了，对于我之前写的小项目来说，好用，没毛病…<br>    有机会还会再用，好评。(^o^)&#x2F;~</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"clq18rrw00000vf4k07uuf2ih","category_id":"clq18rrw40002vf4ke9kd3b8s","_id":"clq18rrw8000dvf4keoe04zct"},{"post_id":"clq18rrw70008vf4kesd63dq0","category_id":"clq18rrw40002vf4ke9kd3b8s","_id":"clq18rrw9000hvf4k7wi7h1fd"},{"post_id":"clq18rrw30001vf4k64ub48iw","category_id":"clq18rrw40002vf4ke9kd3b8s","_id":"clq18rrw9000kvf4k534u0p94"},{"post_id":"clq18rrw7000bvf4k1w3cabk1","category_id":"clq18rrw40002vf4ke9kd3b8s","_id":"clq18rrwa000mvf4k38oqav6v"},{"post_id":"clq18rrw8000evf4k70114y27","category_id":"clq18rrw40002vf4ke9kd3b8s","_id":"clq18rrwa000ovf4k72zag3wn"},{"post_id":"clq18rrw50003vf4k87h6ac49","category_id":"clq18rrw8000cvf4k0bmn3rkc","_id":"clq18rrwa000pvf4k96jje3gm"},{"post_id":"clq18rrw8000gvf4k6q07czzg","category_id":"clq18rrw40002vf4ke9kd3b8s","_id":"clq18rrwa000qvf4k4zubc1cw"},{"post_id":"clq18rrw50005vf4k3cg71mjw","category_id":"clq18rrw9000ivf4kc60128f2","_id":"clq18rrwa000rvf4ke0d0h9n0"},{"post_id":"clq18rrw60006vf4kbkqj51fw","category_id":"clq18rrw9000ivf4kc60128f2","_id":"clq18rrwa000svf4k33yj1hn5"}],"PostTag":[{"post_id":"clq18rrw30001vf4k64ub48iw","tag_id":"clq18rrw50004vf4k7ph09iiw","_id":"clq18rrw7000avf4k41ao0rjf"},{"post_id":"clq18rrw7000bvf4k1w3cabk1","tag_id":"clq18rrw50004vf4k7ph09iiw","_id":"clq18rrw8000fvf4k2a9m56xm"},{"post_id":"clq18rrw50005vf4k3cg71mjw","tag_id":"clq18rrw70009vf4k2v4rdqmc","_id":"clq18rrw9000jvf4kf8uldqvu"},{"post_id":"clq18rrw8000gvf4k6q07czzg","tag_id":"clq18rrw50004vf4k7ph09iiw","_id":"clq18rrw9000lvf4k1eqs2jfh"}],"Tag":[{"name":"JavaScript","_id":"clq18rrw50004vf4k7ph09iiw"},{"name":"WPF","_id":"clq18rrw70009vf4k2v4rdqmc"}]}}